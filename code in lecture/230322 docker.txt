Microsoft Windows [Version 10.0.22621.1413]
(c) Microsoft Corporation. All rights reserved.

C:\Users\bitcamp>cd ..

C:\Users>dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: 2242-81FB

 C:\Users 디렉터리

2023-01-27  오후 07:50    <DIR>          .
2023-03-21  오전 09:02    <DIR>          bitcamp
2023-01-27  오후 07:55    <DIR>          hsk
2022-12-16  오후 09:20    <DIR>          Public
               0개 파일                   0 바이트
               4개 디렉터리  18,825,494,528 바이트 남음

C:\Users>cd bitcamp

C:\Users\bitcamp>cd vm-projects

C:\Users\bitcamp\vm-projects>cd host2

C:\Users\bitcamp\vm-projects\host2>vagrant ssh
VM must be running to open SSH connection. Run `vagrant up`
to start the virtual machine.

C:\Users\bitcamp\vm-projects\host2>vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'sysnet4admin/Ubuntu-k8s' version '0.7.1' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 6.0.0 r127566
    default: VirtualBox Version: 7.0
==> default: Configuring and enabling network interfaces...
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/bitcamp/vm-projects/host2
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.

C:\Users\bitcamp\vm-projects\host2>vagrant ssh
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Last login: Tue Mar 21 11:23:54 2023 from 10.0.2.2
vagrant@k8s:~$ set
BASH=/bin/bash
BASHOPTS=checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquote:force_fignore:globasciiranges:histappend:interactive_comments:login_shell:progcomp:promptvars:sourcepath
BASH_ALIASES=()
BASH_ARGC=([0]="0")
BASH_ARGV=()
BASH_CMDS=()
BASH_COMPLETION_VERSINFO=([0]="2" [1]="11")
BASH_LINENO=()
BASH_SOURCE=()
BASH_VERSINFO=([0]="5" [1]="1" [2]="16" [3]="1" [4]="release" [5]="x86_64-pc-linux-gnu")
BASH_VERSION='5.1.16(1)-release'
COLUMNS=120
DIRSTACK=()
EUID=1000
GROUPS=()
HISTCONTROL=ignoreboth
HISTFILE=/home/vagrant/.bash_history
HISTFILESIZE=2000
HISTSIZE=1000
HOME=/home/vagrant
HOSTNAME=k8s
HOSTTYPE=x86_64
IFS=$' \t\n'
LANG=en_US.utf8
LESSCLOSE='/usr/bin/lesspipe %s %s'
LESSOPEN='| /usr/bin/lesspipe %s'
LINES=30
LOGNAME=vagrant
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'
MACHTYPE=x86_64-pc-linux-gnu
MAILCHECK=60
MOTD_SHOWN=pam
OPTERR=1
OPTIND=1
OSTYPE=linux-gnu
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
PIPESTATUS=([0]="1")
PPID=992
PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
PS2='> '
PS4='+ '
PWD=/home/vagrant
SHELL=/bin/bash
SHELLOPTS=braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor
SHLVL=1
SSH_CLIENT='10.0.2.2 58605 22'
SSH_CONNECTION='10.0.2.2 58605 10.0.2.15 22'
SSH_TTY=/dev/pts/0
TERM=xterm-256color
UID=1000
USER=vagrant
XDG_RUNTIME_DIR=/run/user/1000
XDG_SESSION_CLASS=user
XDG_SESSION_ID=3
XDG_SESSION_TYPE=tty
_=']'
__git_printf_supports_v=yes
_backup_glob='@(#*#|*@(~|.@(bak|orig|rej|swp|dpkg*|rpm@(orig|new|save))))'
_xspecs=([tex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [freeamp]="!*.@(mp3|og[ag]|pls|m3u)" [gqmpeg]="!*.@(mp3|og[ag]|pls|m3u)" [texi2html]="!*.texi*" [hbpp]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])" [lowriter]="!*.@(sxw|stw|sxg|sgl|doc?([mx])|dot?([mx])|rtf|txt|htm|html|?(f)odt|ott|odm|pdf)" [rpm2cpio]="!*.[rs]pm" [localc]="!*.@(sxc|stc|xls?([bmx])|xlw|xlt?([mx])|[ct]sv|?(f)ods|ots)" [hbrun]="!*.[Hh][Rr][Bb]" [vi]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [latex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [view]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [madplay]="!*.mp3" [compress]="*.Z" [pdfjadetex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [pbunzip2]="!*.?(t)bz?(2)" [lrunzip]="!*.lrz" [gunzip]="!*.@(Z|[gGd]z|t[ag]z)" [oowriter]="!*.@(sxw|stw|sxg|sgl|doc?([mx])|dot?([mx])|rtf|txt|htm|html|?(f)odt|ott|odm|pdf)" [epiphany]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [acroread]="!*.[pf]df" [znew]="*.Z" [kwrite]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [xemacs]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [gview]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [lzfgrep]="!*.@(tlz|lzma)" [lzless]="!*.@(tlz|lzma)" [cdiff]="!*.@(dif?(f)|?(d)patch)?(.@([gx]z|bz2|lzma))" [zipinfo]="!*.@(zip|[aegjswx]ar|exe|pk3|wsz|zargo|xpi|s[tx][cdiw]|sx[gm]|o[dt][tspgfc]|od[bm]|oxt|epub|apk|aab|ipa|do[ct][xm]|p[op]t[mx]|xl[st][xm]|pyz|whl)" [pdflatex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [portecle]="!@(*.@(ks|jks|jceks|p12|pfx|bks|ubr|gkr|cer|crt|cert|p7b|pkipath|pem|p10|csr|crl)|cacerts)" [modplugplay]="!*.@(669|abc|am[fs]|d[bs]m|dmf|far|it|mdl|m[eo]d|mid?(i)|mt[2m]|oct|okt?(a)|p[st]m|s[3t]m|ult|umx|wav|xm)" [lokalize]="!*.po" [lbzcat]="!*.?(t)bz?(2)" [qiv]="!*.@(gif|jp?(e)g|tif?(f)|png|p[bgp]m|bmp|x[bp]m|rle|rgb|pcx|fits|pm|svg)" [totem]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [ps2pdfwr]="!*.@(?(e)ps|pdf)" [dvitype]="!*.dvi" [unpigz]="!*.@(Z|[gGdz]z|t[ag]z)" [mozilla]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [pdfunite]="!*.pdf" [gpdf]="!*.[pf]df" [texi2dvi]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [bunzip2]="!*.?(t)bz?(2)" [zathura]="!*.@(cb[rz7t]|djv?(u)|?(e)ps|pdf)" [kaffeine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [mpg123]="!*.mp3" [lzegrep]="!*.@(tlz|lzma)" [xv]="!*.@(gif|jp?(e)g?(2)|j2[ck]|jp[2f]|tif?(f)|png|p[bgp]m|bmp|x[bp]m|rle|rgb|pcx|fits|pm|?(e)ps)" [xdvi]="!*.@(dvi|DVI)?(.@(gz|Z|bz2))" [xfig]="!*.fig" [xpdf]="!*.@(pdf|fdf)?(.@(gz|GZ|bz2|BZ2|Z))" [oobase]="!*.odb" [xelatex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [gharbour]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])" [bzcat]="!*.?(t)bz?(2)" [dragon]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [xanim]="!*.@(mpg|mpeg|avi|mov|qt)" [lualatex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [rgview]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [rvim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [xetex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [lomath]="!*.@(sxm|smf|mml|odf)" [zcat]="!*.@(Z|[gGd]z|t[ag]z)" [lynx]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [uncompress]="!*.Z" [xzcat]="!*.@(?(t)xz|tlz|lzma)" [vim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [loimpress]="!*.@(sxi|sti|pps?(x)|ppt?([mx])|pot?([mx])|?(f)odp|otp)" [dvipdf]="!*.dvi" [mpg321]="!*.mp3" [jadetex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [lobase]="!*.odb" [epdfview]="!*.pdf" [ps2pdf14]="!*.@(?(e)ps|pdf)" [ps2pdf13]="!*.@(?(e)ps|pdf)" [ps2pdf12]="!*.@(?(e)ps|pdf)" [poedit]="!*.po" [luatex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [kbabel]="!*.po" [bzme]="!*.@(zip|z|gz|tgz)" [dviselect]="!*.dvi" [realplay]="!*.@(rm?(j)|ra?(m)|smi?(l))" [kdvi]="!*.@(dvi|DVI)?(.@(gz|Z|bz2))" [elinks]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [kghostview]="!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))" [gtranslator]="!*.po" [unzip]="!*.@(zip|[aegjswx]ar|exe|pk3|wsz|zargo|xpi|s[tx][cdiw]|sx[gm]|o[dt][tspgfc]|od[bm]|oxt|epub|apk|aab|ipa|do[ct][xm]|p[op]t[mx]|xl[st][xm]|pyz|whl)" [ggv]="!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))" [oomath]="!*.@(sxm|smf|mml|odf)" [dvipdfmx]="!*.dvi" [makeinfo]="!*.texi*" [okular]="!*.@(okular|@(?(e|x)ps|?(E|X)PS|[pf]df|[PF]DF|dvi|DVI|cb[rz]|CB[RZ]|djv?(u)|DJV?(U)|dvi|DVI|gif|jp?(e)g|miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx|GIF|JP?(E)G|MIFF|TIF?(F)|PN[GM]|P[BGP]M|BMP|XPM|ICO|XWD|TGA|PCX|epub|EPUB|odt|ODT|fb?(2)|FB?(2)|mobi|MOBI|g3|G3|chm|CHM)?(.?(gz|GZ|bz2|BZ2|xz|XZ)))" [sxemacs]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [aviplay]="!*.@(avi|asf|wmv)" [rgvim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [dvipdfm]="!*.dvi" [ly2dvi]="!*.ly" [oodraw]="!*.@(sxd|std|sda|sdd|?(f)odg|otg)" [kpdf]="!*.@(?(e)ps|pdf)" [bibtex]="!*.aux" [netscape]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [emacs]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [rview]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [galeon]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [dillo]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [fbxine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [oocalc]="!*.@(sxc|stc|xls?([bmx])|xlw|xlt?([mx])|[ct]sv|?(f)ods|ots)" [harbour]="!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])" [lodraw]="!*.@(sxd|std|sda|sdd|?(f)odg|otg)" [dvips]="!*.dvi" [ps2pdf]="!*.@(?(e)ps|pdf)" [kate]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [kid3-qt]="!*.@(mp[234c]|og[ag]|@(fl|a)ac|m4[abp]|spx|tta|w?(a)v|wma|aif?(f)|asf|ape)" [pdftex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [gvim]="*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)" [timidity]="!*.@(mid?(i)|rmi|rcp|[gr]36|g18|mod|xm|it|x3m|s[3t]m|kar)" [ogg123]="!*.@(og[ag]|m3u|flac|spx)" [lzgrep]="!*.@(tlz|lzma)" [ee]="!*.@(gif|jp?(e)g|miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx)" [unlzma]="!*.@(tlz|lzma)" [lbunzip2]="!*.?(t)bz?(2)" [ooimpress]="!*.@(sxi|sti|pps?(x)|ppt?([mx])|pot?([mx])|?(f)odp|otp)" [xine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [amaya]="!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))" [gv]="!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))" [kid3]="!*.@(mp[234c]|og[ag]|@(fl|a)ac|m4[abp]|spx|tta|w?(a)v|wma|aif?(f)|asf|ape)" [lilypond]="!*.ly" [modplug123]="!*.@(669|abc|am[fs]|d[bs]m|dmf|far|it|mdl|m[eo]d|mid?(i)|mt[2m]|oct|okt?(a)|p[st]m|s[3t]m|ult|umx|wav|xm)" [pbzcat]="!*.?(t)bz?(2)" [unxz]="!*.@(?(t)xz|tlz|lzma)" [playmidi]="!*.@(mid?(i)|cmf)" [lzcat]="!*.@(tlz|lzma)" [slitex]="!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)" [aaxine]="!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmvx]|OG[AGMVX]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))" [advi]="!*.dvi" [lzmore]="!*.@(tlz|lzma)" )
__expand_tilde_by_ref ()
{
    if [[ ${!1-} == \~* ]]; then
        eval $1="$(printf ~%q "${!1#\~}")";
    fi
}
__get_cword_at_cursor_by_ref ()
{
    local cword words=();
    __reassemble_comp_words_by_ref "$1" words cword;
    local i cur="" index=$COMP_POINT lead=${COMP_LINE:0:COMP_POINT};
    if [[ $index -gt 0 && ( -n $lead && -n ${lead//[[:space:]]/} ) ]]; then
        cur=$COMP_LINE;
        for ((i = 0; i <= cword; ++i))
        do
            while [[ ${#cur} -ge ${#words[i]} && ${cur:0:${#words[i]}} != "${words[i]-}" ]]; do
                cur="${cur:1}";
                ((index > 0)) && ((index--));
            done;
            if ((i < cword)); then
                local old_size=${#cur};
                cur="${cur#"${words[i]}"}";
                local new_size=${#cur};
                ((index -= old_size - new_size));
            fi;
        done;
        [[ -n $cur && ! -n ${cur//[[:space:]]/} ]] && cur=;
        ((index < 0)) && index=0;
    fi;
    local "$2" "$3" "$4" && _upvars -a${#words[@]} $2 ${words+"${words[@]}"} -v $3 "$cword" -v $4 "${cur:0:index}"
}
__git_eread ()
{
    test -r "$1" && IFS='
' read "$2" < "$1"
}
__git_ps1 ()
{
    local exit=$?;
    local pcmode=no;
    local detached=no;
    local ps1pc_start='\u@\h:\w ';
    local ps1pc_end='\$ ';
    local printf_format=' (%s)';
    case "$#" in
        2 | 3)
            pcmode=yes;
            ps1pc_start="$1";
            ps1pc_end="$2";
            printf_format="${3:-$printf_format}";
            PS1="$ps1pc_start$ps1pc_end"
        ;;
        0 | 1)
            printf_format="${1:-$printf_format}"
        ;;
        *)
            return $exit
        ;;
    esac;
    local ps1_expanded=yes;
    [ -z "${ZSH_VERSION-}" ] || [[ -o PROMPT_SUBST ]] || ps1_expanded=no;
    [ -z "${BASH_VERSION-}" ] || shopt -q promptvars || ps1_expanded=no;
    local repo_info rev_parse_exit_code;
    repo_info="$(git rev-parse --git-dir --is-inside-git-dir            --is-bare-repository --is-inside-work-tree     --short HEAD 2>/dev/null)";
    rev_parse_exit_code="$?";
    if [ -z "$repo_info" ]; then
        return $exit;
    fi;
    local short_sha="";
    if [ "$rev_parse_exit_code" = "0" ]; then
        short_sha="${repo_info##*
}";
        repo_info="${repo_info%
*}";
    fi;
    local inside_worktree="${repo_info##*
}";
    repo_info="${repo_info%
*}";
    local bare_repo="${repo_info##*
}";
    repo_info="${repo_info%
*}";
    local inside_gitdir="${repo_info##*
}";
    local g="${repo_info%
*}";
    if [ "true" = "$inside_worktree" ] && [ -n "${GIT_PS1_HIDE_IF_PWD_IGNORED-}" ] && [ "$(git config --bool bash.hideIfPwdIgnored)" != "false" ] && git check-ignore -q .; then
        return $exit;
    fi;
    local sparse="";
    if [ -z "${GIT_PS1_COMPRESSSPARSESTATE-}" ] && [ -z "${GIT_PS1_OMITSPARSESTATE-}" ] && [ "$(git config --bool core.sparseCheckout)" = "true" ]; then
        sparse="|SPARSE";
    fi;
    local r="";
    local b="";
    local step="";
    local total="";
    if [ -d "$g/rebase-merge" ]; then
        __git_eread "$g/rebase-merge/head-name" b;
        __git_eread "$g/rebase-merge/msgnum" step;
        __git_eread "$g/rebase-merge/end" total;
        r="|REBASE";
    else
        if [ -d "$g/rebase-apply" ]; then
            __git_eread "$g/rebase-apply/next" step;
            __git_eread "$g/rebase-apply/last" total;
            if [ -f "$g/rebase-apply/rebasing" ]; then
                __git_eread "$g/rebase-apply/head-name" b;
                r="|REBASE";
            else
                if [ -f "$g/rebase-apply/applying" ]; then
                    r="|AM";
                else
                    r="|AM/REBASE";
                fi;
            fi;
        else
            if [ -f "$g/MERGE_HEAD" ]; then
                r="|MERGING";
            else
                if __git_sequencer_status; then
                    :;
                else
                    if [ -f "$g/BISECT_LOG" ]; then
                        r="|BISECTING";
                    fi;
                fi;
            fi;
        fi;
        if [ -n "$b" ]; then
            :;
        else
            if [ -h "$g/HEAD" ]; then
                b="$(git symbolic-ref HEAD 2>/dev/null)";
            else
                local head="";
                if ! __git_eread "$g/HEAD" head; then
                    return $exit;
                fi;
                b="${head#ref: }";
                if [ "$head" = "$b" ]; then
                    detached=yes;
                    b="$(
                                case "${GIT_PS1_DESCRIBE_STYLE-}" in
                                (contains)
                                        git describe --contains HEAD ;;
                                (branch)
                                        git describe --contains --all HEAD ;;
                                (tag)
                                        git describe --tags HEAD ;;
                                (describe)
                                        git describe HEAD ;;
                                (* | default)
                                        git describe --tags --exact-match HEAD ;;
                                esac 2>/dev/null)" || b="$short_sha...";
                    b="($b)";
                fi;
            fi;
        fi;
    fi;
    if [ -n "$step" ] && [ -n "$total" ]; then
        r="$r $step/$total";
    fi;
    local w="";
    local i="";
    local s="";
    local u="";
    local h="";
    local c="";
    local p="";
    if [ "true" = "$inside_gitdir" ]; then
        if [ "true" = "$bare_repo" ]; then
            c="BARE:";
        else
            b="GIT_DIR!";
        fi;
    else
        if [ "true" = "$inside_worktree" ]; then
            if [ -n "${GIT_PS1_SHOWDIRTYSTATE-}" ] && [ "$(git config --bool bash.showDirtyState)" != "false" ]; then
                git diff --no-ext-diff --quiet || w="*";
                git diff --no-ext-diff --cached --quiet || i="+";
                if [ -z "$short_sha" ] && [ -z "$i" ]; then
                    i="#";
                fi;
            fi;
            if [ -n "${GIT_PS1_SHOWSTASHSTATE-}" ] && git rev-parse --verify --quiet refs/stash > /dev/null; then
                s="$";
            fi;
            if [ -n "${GIT_PS1_SHOWUNTRACKEDFILES-}" ] && [ "$(git config --bool bash.showUntrackedFiles)" != "false" ]&& git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- ':/*' > /dev/null 2> /dev/null; then
                u="%${ZSH_VERSION+%}";
            fi;
            if [ -n "${GIT_PS1_COMPRESSSPARSESTATE-}" ] && [ "$(git config --bool core.sparseCheckout)" = "true" ]; then                h="?";
            fi;
            if [ -n "${GIT_PS1_SHOWUPSTREAM-}" ]; then
                __git_ps1_show_upstream;
            fi;
        fi;
    fi;
    local z="${GIT_PS1_STATESEPARATOR-" "}";
    if [ -n "${GIT_PS1_SHOWCOLORHINTS-}" ]; then
        if [ $pcmode = yes ] || [ -n "${ZSH_VERSION-}" ]; then
            __git_ps1_colorize_gitstring;
        fi;
    fi;
    b=${b##refs/heads/};
    if [ $pcmode = yes ] && [ $ps1_expanded = yes ]; then
        __git_ps1_branch_name=$b;
        b="\${__git_ps1_branch_name}";
    fi;
    local f="$h$w$i$s$u";
    local gitstring="$c$b${f:+$z$f}${sparse}$r$p";
    if [ $pcmode = yes ]; then
        if [ "${__git_printf_supports_v-}" != yes ]; then
            gitstring=$(printf -- "$printf_format" "$gitstring");
        else
            printf -v gitstring -- "$printf_format" "$gitstring";
        fi;
        PS1="$ps1pc_start$gitstring$ps1pc_end";
    else
        printf -- "$printf_format" "$gitstring";
    fi;
    return $exit
}
__git_ps1_colorize_gitstring ()
{
    if [[ -n ${ZSH_VERSION-} ]]; then
        local c_red='%F{red}';
        local c_green='%F{green}';
        local c_lblue='%F{blue}';
        local c_clear='%f';
    else
        local c_red='\[\e[31m\]';
        local c_green='\[\e[32m\]';
        local c_lblue='\[\e[1;34m\]';
        local c_clear='\[\e[0m\]';
    fi;
    local bad_color=$c_red;
    local ok_color=$c_green;
    local flags_color="$c_lblue";
    local branch_color="";
    if [ $detached = no ]; then
        branch_color="$ok_color";
    else
        branch_color="$bad_color";
    fi;
    c="$branch_color$c";
    z="$c_clear$z";
    if [ "$w" = "*" ]; then
        w="$bad_color$w";
    fi;
    if [ -n "$i" ]; then
        i="$ok_color$i";
    fi;
    if [ -n "$s" ]; then
        s="$flags_color$s";
    fi;
    if [ -n "$u" ]; then
        u="$bad_color$u";
    fi;
    r="$c_clear$r"
}
__git_ps1_show_upstream ()
{
    local key value;
    local svn_remote svn_url_pattern count n;
    local upstream=git legacy="" verbose="" name="";
    svn_remote=();
    local output="$(git config -z --get-regexp '^(svn-remote\..*\.url|bash\.showupstream)$' 2>/dev/null | tr '\0\n' '\n')";
    while read -r key value; do
        case "$key" in
            bash.showupstream)
                GIT_PS1_SHOWUPSTREAM="$value";
                if [[ -z "${GIT_PS1_SHOWUPSTREAM}" ]]; then
                    p="";
                    return;
                fi
            ;;
            svn-remote.*.url)
                svn_remote[$((${#svn_remote[@]} + 1))]="$value";
                svn_url_pattern="$svn_url_pattern\\|$value";
                upstream=svn+git
            ;;
        esac;
    done <<< "$output";
    local option;
    for option in ${GIT_PS1_SHOWUPSTREAM};
    do
        case "$option" in
            git | svn)
                upstream="$option"
            ;;
            verbose)
                verbose=1
            ;;
            legacy)
                legacy=1
            ;;
            name)
                name=1
            ;;
        esac;
    done;
    case "$upstream" in
        git)
            upstream="@{upstream}"
        ;;
        svn*)
            local -a svn_upstream;
            svn_upstream=($(git log --first-parent -1                                   --grep="^git-svn-id: \(${svn_url_pattern#??}\)" 2>/dev/null));
            if [[ 0 -ne ${#svn_upstream[@]} ]]; then
                svn_upstream=${svn_upstream[${#svn_upstream[@]} - 2]};
                svn_upstream=${svn_upstream%@*};
                local n_stop="${#svn_remote[@]}";
                for ((n=1; n <= n_stop; n++))
                do
                    svn_upstream=${svn_upstream#${svn_remote[$n]}};
                done;
                if [[ -z "$svn_upstream" ]]; then
                    upstream=${GIT_SVN_ID:-git-svn};
                else
                    upstream=${svn_upstream#/};
                fi;
            else
                if [[ "svn+git" = "$upstream" ]]; then
                    upstream="@{upstream}";
                fi;
            fi
        ;;
    esac;
    if [[ -z "$legacy" ]]; then
        count="$(git rev-list --count --left-right                              "$upstream"...HEAD 2>/dev/null)";
    else
        local commits;
        if commits="$(git rev-list --left-right "$upstream"...HEAD 2>/dev/null)"; then
            local commit behind=0 ahead=0;
            for commit in $commits;
            do
                case "$commit" in
                    "<"*)
                        ((behind++))
                    ;;
                    *)
                        ((ahead++))
                    ;;
                esac;
            done;
            count="$behind      $ahead";
        else
            count="";
        fi;
    fi;
    if [[ -z "$verbose" ]]; then
        case "$count" in
            "")
                p=""
            ;;
            "0  0")
                p="="
            ;;
            "0  "*)
                p=">"
            ;;
            *"  0")
                p="<"
            ;;
            *)
                p="<>"
            ;;
        esac;
    else
        case "$count" in
            "")
                p=""
            ;;
            "0  0")
                p=" u="
            ;;
            "0  "*)
                p=" u+${count#0 }"
            ;;
            *"  0")
                p=" u-${count%  0}"
            ;;
            *)
                p=" u+${count#* }-${count%      *}"
            ;;
        esac;
        if [[ -n "$count" && -n "$name" ]]; then
            __git_ps1_upstream_name=$(git rev-parse                             --abbrev-ref "$upstream" 2>/dev/null);
            if [ $pcmode = yes ] && [ $ps1_expanded = yes ]; then
                p="$p \${__git_ps1_upstream_name}";
            else
                p="$p ${__git_ps1_upstream_name}";
                unset __git_ps1_upstream_name;
            fi;
        fi;
    fi
}
__git_sequencer_status ()
{
    local todo;
    if test -f "$g/CHERRY_PICK_HEAD"; then
        r="|CHERRY-PICKING";
        return 0;
    else
        if test -f "$g/REVERT_HEAD"; then
            r="|REVERTING";
            return 0;
        else
            if __git_eread "$g/sequencer/todo" todo; then
                case "$todo" in
                    p[\ \       ] | pick[\ \    ]*)
                        r="|CHERRY-PICKING";
                        return 0
                    ;;
                    revert[\ \  ]*)
                        r="|REVERTING";
                        return 0
                    ;;
                esac;
            fi;
        fi;
    fi;
    return 1
}
__load_completion ()
{
    local -a dirs=(${BASH_COMPLETION_USER_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/bash-completion}/completions);
    local ifs=$IFS IFS=: dir cmd="${1##*/}" compfile;
    [[ -n $cmd ]] || return 1;
    for dir in ${XDG_DATA_DIRS:-/usr/local/share:/usr/share};
    do
        dirs+=($dir/bash-completion/completions);
    done;
    IFS=$ifs;
    if [[ $BASH_SOURCE == */* ]]; then
        dirs+=("${BASH_SOURCE%/*}/completions");
    else
        dirs+=(./completions);
    fi;
    local backslash=;
    if [[ $cmd == \\* ]]; then
        cmd="${cmd:1}";
        $(complete -p "$cmd" 2>/dev/null || echo false) "\\$cmd" && return 0;
        backslash=\\;
    fi;
    for dir in "${dirs[@]}";
    do
        [[ -d $dir ]] || continue;
        for compfile in "$cmd" "$cmd.bash" "_$cmd";
        do
            compfile="$dir/$compfile";
            if [[ -f $compfile ]] && . "$compfile" &> /dev/null; then
                [[ -n $backslash ]] && $(complete -p "$cmd") "\\$cmd";
                return 0;
            fi;
        done;
    done;
    [[ -v _xspecs[$cmd] ]] && complete -F _filedir_xspec "$cmd" "$backslash$cmd" && return 0;
    return 1
}
__ltrim_colon_completions ()
{
    if [[ $1 == *:* && $COMP_WORDBREAKS == *:* ]]; then
        local colon_word=${1%"${1##*:}"};
        local i=${#COMPREPLY[*]};
        while ((i-- > 0)); do
            COMPREPLY[i]=${COMPREPLY[i]#"$colon_word"};
        done;
    fi
}
__parse_options ()
{
    local option option2 i IFS='
,/|';
    option=;
    local -a array=($1);
    for i in "${array[@]}";
    do
        case "$i" in
            ---*)
                break
            ;;
            --?*)
                option=$i;
                break
            ;;
            -?*)
                [[ -n $option ]] || option=$i
            ;;
            *)
                break
            ;;
        esac;
    done;
    [[ -n $option ]] || return 0;
    IFS='
';
    if [[ $option =~ (\[((no|dont)-?)\]). ]]; then
        option2=${option/"${BASH_REMATCH[1]}"/};
        option2=${option2%%[<{().[]*};
        printf '%s\n' "${option2/=*/=}";
        option=${option/"${BASH_REMATCH[1]}"/"${BASH_REMATCH[2]}"};
    fi;
    option=${option%%[<{().[]*};
    printf '%s\n' "${option/=*/=}"
}
__reassemble_comp_words_by_ref ()
{
    local exclude i j line ref;
    if [[ -n $1 ]]; then
        exclude="[${1//[^$COMP_WORDBREAKS]/}]";
    fi;
    printf -v "$3" %s "$COMP_CWORD";
    if [[ -v exclude ]]; then
        line=$COMP_LINE;
        for ((i = 0, j = 0; i < ${#COMP_WORDS[@]}; i++, j++))
        do
            while [[ $i -gt 0 && ${COMP_WORDS[i]} == +($exclude) ]]; do
                [[ $line != [[:blank:]]* ]] && ((j >= 2)) && ((j--));
                ref="$2[$j]";
                printf -v "$ref" %s "${!ref-}${COMP_WORDS[i]}";
                ((i == COMP_CWORD)) && printf -v "$3" %s "$j";
                line=${line#*"${COMP_WORDS[i]}"};
                [[ $line == [[:blank:]]* ]] && ((j++));
                ((i < ${#COMP_WORDS[@]} - 1)) && ((i++)) || break 2;
            done;
            ref="$2[$j]";
            printf -v "$ref" %s "${!ref-}${COMP_WORDS[i]}";
            line=${line#*"${COMP_WORDS[i]}"};
            ((i == COMP_CWORD)) && printf -v "$3" %s "$j";
        done;
        ((i == COMP_CWORD)) && printf -v "$3" %s "$j";
    else
        for i in "${!COMP_WORDS[@]}";
        do
            printf -v "$2[i]" %s "${COMP_WORDS[i]}";
        done;
    fi
}
_allowed_groups ()
{
    if _complete_as_root; then
        local IFS='
';
        COMPREPLY=($(compgen -g -- "$1"));
    else
        local IFS='
 ';
        COMPREPLY=($(compgen -W             "$(id -Gn 2>/dev/null || groups 2>/dev/null)" -- "$1"));
    fi
}
_allowed_users ()
{
    if _complete_as_root; then
        local IFS='
';
        COMPREPLY=($(compgen -u -- "${1:-$cur}"));
    else
        local IFS='
 ';
        COMPREPLY=($(compgen -W             "$(id -un 2>/dev/null || whoami 2>/dev/null)" -- "${1:-$cur}"));
    fi
}
_available_interfaces ()
{
    local PATH=$PATH:/sbin;
    COMPREPLY=($({
        if [[ ${1:-} == -w ]]; then
            iwconfig
        elif [[ ${1:-} == -a ]]; then
            ifconfig || ip link show up
        else
            ifconfig -a || ip link show
        fi
    } 2>/dev/null | awk         '/^[^ \t]/ { if ($1 ~ /^[0-9]+:/) { print $2 } else { print $1 } }'));
    COMPREPLY=($(compgen -W '${COMPREPLY[@]/%[[:punct:]]/}' -- "$cur"))
}
_bashcomp_try_faketty ()
{
    if type unbuffer &> /dev/null; then
        unbuffer -p "$@";
    else
        if script --version 2>&1 | command grep -qF util-linux; then
            script -qaefc "$*" /dev/null;
        else
            "$@";
        fi;
    fi
}
_cd ()
{
    local cur prev words cword;
    _init_completion || return;
    local IFS='
' i j k;
    compopt -o filenames;
    if [[ -z ${CDPATH:-} || $cur == ?(.)?(.)/* ]]; then
        _filedir -d;
        return;
    fi;
    local -r mark_dirs=$(_rl_enabled mark-directories && echo y);
    local -r mark_symdirs=$(_rl_enabled mark-symlinked-directories && echo y);
    for i in ${CDPATH//:/'
'};
    do
        k="${#COMPREPLY[@]}";
        for j in $(compgen -d -- $i/$cur);
        do
            if [[ ( -n $mark_symdirs && -L $j || -n $mark_dirs && ! -L $j ) && ! -d ${j#$i/} ]]; then
                j+="/";
            fi;
            COMPREPLY[k++]=${j#$i/};
        done;
    done;
    _filedir -d;
    if ((${#COMPREPLY[@]} == 1)); then
        i=${COMPREPLY[0]};
        if [[ $i == "$cur" && $i != "*/" ]]; then
            COMPREPLY[0]="${i}/";
        fi;
    fi;
    return
}
_cd_devices ()
{
    COMPREPLY+=($(compgen -f -d -X "!*/?([amrs])cd*" -- "${cur:-/dev/}"))
}
_command ()
{
    local offset i;
    offset=1;
    for ((i = 1; i <= COMP_CWORD; i++))
    do
        if [[ ${COMP_WORDS[i]} != -* ]]; then
            offset=$i;
            break;
        fi;
    done;
    _command_offset $offset
}
_command_offset ()
{
    local word_offset=$1 i j;
    for ((i = 0; i < word_offset; i++))
    do
        for ((j = 0; j <= ${#COMP_LINE}; j++))
        do
            [[ $COMP_LINE == "${COMP_WORDS[i]}"* ]] && break;
            COMP_LINE=${COMP_LINE:1};
            ((COMP_POINT--));
        done;
        COMP_LINE=${COMP_LINE#"${COMP_WORDS[i]}"};
        ((COMP_POINT -= ${#COMP_WORDS[i]}));
    done;
    for ((i = 0; i <= COMP_CWORD - word_offset; i++))
    do
        COMP_WORDS[i]=${COMP_WORDS[i + word_offset]};
    done;
    for ((i; i <= COMP_CWORD; i++))
    do
        unset 'COMP_WORDS[i]';
    done;
    ((COMP_CWORD -= word_offset));
    COMPREPLY=();
    local cur;
    _get_comp_words_by_ref cur;
    if ((COMP_CWORD == 0)); then
        local IFS='
';
        compopt -o filenames;
        COMPREPLY=($(compgen -d -c -- "$cur"));
    else
        local cmd=${COMP_WORDS[0]} compcmd=${COMP_WORDS[0]};
        local cspec=$(complete -p $cmd 2>/dev/null);
        if [[ ! -n $cspec && $cmd == */* ]]; then
            cspec=$(complete -p ${cmd##*/} 2>/dev/null);
            [[ -n $cspec ]] && compcmd=${cmd##*/};
        fi;
        if [[ ! -n $cspec ]]; then
            compcmd=${cmd##*/};
            _completion_loader $compcmd;
            cspec=$(complete -p $compcmd 2>/dev/null);
        fi;
        if [[ -n $cspec ]]; then
            if [[ ${cspec#* -F } != "$cspec" ]]; then
                local func=${cspec#*-F };
                func=${func%% *};
                if ((${#COMP_WORDS[@]} >= 2)); then
                    $func $cmd "${COMP_WORDS[-1]}" "${COMP_WORDS[-2]}";
                else
                    $func $cmd "${COMP_WORDS[-1]}";
                fi;
                local opt;
                while [[ $cspec == *" -o "* ]]; do
                    cspec=${cspec#*-o };
                    opt=${cspec%% *};
                    compopt -o $opt;
                    cspec=${cspec#$opt};
                done;
            else
                cspec=${cspec#complete};
                cspec=${cspec%%$compcmd};
                COMPREPLY=($(eval compgen "$cspec" -- '$cur'));
            fi;
        else
            if ((${#COMPREPLY[@]} == 0)); then
                _minimal;
            fi;
        fi;
    fi
}
_complete_as_root ()
{
    [[ $EUID -eq 0 || -n ${root_command:-} ]]
}
_completion_loader ()
{
    local cmd="${1:-_EmptycmD_}";
    __load_completion "$cmd" && return 124;
    complete -F _minimal -- "$cmd" && return 124
}
_configured_interfaces ()
{
    if [[ -f /etc/debian_version ]]; then
        COMPREPLY=($(compgen -W "$(command sed -ne 's|^iface \([^ ]\{1,\}\).*$|\1|p'             /etc/network/interfaces /etc/network/interfaces.d/* 2>/dev/null)"             -- "$cur"));
    else
        if [[ -f /etc/SuSE-release ]]; then
            COMPREPLY=($(compgen -W "$(printf '%s\n'             /etc/sysconfig/network/ifcfg-* |
            command sed -ne 's|.*ifcfg-\([^*].*\)$|\1|p')" -- "$cur"));
        else
            if [[ -f /etc/pld-release ]]; then
                COMPREPLY=($(compgen -W "$(command ls -B             /etc/sysconfig/interfaces |
            command sed -ne 's|.*ifcfg-\([^*].*\)$|\1|p')" -- "$cur"));
            else
                COMPREPLY=($(compgen -W "$(printf '%s\n'             /etc/sysconfig/network-scripts/ifcfg-* |
            command sed -ne 's|.*ifcfg-\([^*].*\)$|\1|p')" -- "$cur"));
            fi;
        fi;
    fi
}
_count_args ()
{
    local i cword words;
    __reassemble_comp_words_by_ref "${1-}" words cword;
    args=1;
    for ((i = 1; i < cword; i++))
    do
        if [[ ${words[i]} != -* && ${words[i - 1]} != ${2-} || ${words[i]} == ${3-} ]]; then
            ((args++));
        fi;
    done
}
_dvd_devices ()
{
    COMPREPLY+=($(compgen -f -d -X "!*/?(r)dvd*" -- "${cur:-/dev/}"))
}
_expand ()
{
    case ${cur-} in
        ~*/*)
            __expand_tilde_by_ref cur
        ;;
        ~*)
            _tilde "$cur" || eval COMPREPLY[0]="$(printf ~%q "${COMPREPLY[0]#\~}")";
            return ${#COMPREPLY[@]}
        ;;
    esac
}
_filedir ()
{
    local IFS='
';
    _tilde "${cur-}" || return;
    local -a toks;
    local reset arg=${1-};
    if [[ $arg == -d ]]; then
        reset=$(shopt -po noglob);
        set -o noglob;
        toks=($(compgen -d -- "${cur-}"));
        IFS=' ';
        $reset;
        IFS='
';
    else
        local quoted;
        _quote_readline_by_ref "${cur-}" quoted;
        local xspec=${arg:+"!*.@($arg|${arg^^})"} plusdirs=();
        local opts=(-f -X "$xspec");
        [[ -n $xspec ]] && plusdirs=(-o plusdirs);
        [[ -n ${COMP_FILEDIR_FALLBACK-} || -z ${plusdirs-} ]] || opts+=("${plusdirs[@]}");
        reset=$(shopt -po noglob);
        set -o noglob;
        toks+=($(compgen "${opts[@]}" -- $quoted));
        IFS=' ';
        $reset;
        IFS='
';
        [[ -n ${COMP_FILEDIR_FALLBACK-} && -n $arg && ${#toks[@]} -lt 1 ]] && {
            reset=$(shopt -po noglob);
            set -o noglob;
            toks+=($(compgen -f ${plusdirs+"${plusdirs[@]}"} -- $quoted));
            IFS=' ';
            $reset;
            IFS='
'
        };
    fi;
    if ((${#toks[@]} != 0)); then
        compopt -o filenames 2> /dev/null;
        COMPREPLY+=("${toks[@]}");
    fi
}
_filedir_xspec ()
{
    local cur prev words cword;
    _init_completion || return;
    _tilde "$cur" || return;
    local IFS='
' xspec=${_xspecs[${1##*/}]} tmp;
    local -a toks;
    toks=($(
        compgen -d -- "$(quote_readline "$cur")" | {
            while read -r tmp; do
                printf '%s\n' $tmp
            done
        }
    ));
    eval xspec="${xspec}";
    local matchop=!;
    if [[ $xspec == !* ]]; then
        xspec=${xspec#!};
        matchop=@;
    fi;
    xspec="$matchop($xspec|${xspec^^})";
    toks+=($(
        eval compgen -f -X "'!$xspec'" -- '$(quote_readline "$cur")' | {
            while read -r tmp; do
                [[ -n $tmp ]] && printf '%s\n' $tmp
            done
        }
    ));
    [[ -n ${COMP_FILEDIR_FALLBACK:-} && ${#toks[@]} -lt 1 ]] && {
        local reset=$(shopt -po noglob);
        set -o noglob;
        toks+=($(compgen -f -- "$(quote_readline "$cur")"));
        IFS=' ';
        $reset;
        IFS='
'
    };
    if ((${#toks[@]} != 0)); then
        compopt -o filenames;
        COMPREPLY=("${toks[@]}");
    fi
}
_fstypes ()
{
    local fss;
    if [[ -e /proc/filesystems ]]; then
        fss="$(cut -d'  ' -f2 /proc/filesystems)
             $(awk '! /\*/ { print $NF }' /etc/filesystems 2>/dev/null)";
    else
        fss="$(awk '/^[ \t]*[^#]/ { print $3 }' /etc/fstab 2>/dev/null)
             $(awk '/^[ \t]*[^#]/ { print $3 }' /etc/mnttab 2>/dev/null)
             $(awk '/^[ \t]*[^#]/ { print $4 }' /etc/vfstab 2>/dev/null)
             $(awk '{ print $1 }' /etc/dfs/fstypes 2>/dev/null)
             $([[ -d /etc/fs ]] && command ls /etc/fs)";
    fi;
    [[ -n $fss ]] && COMPREPLY+=($(compgen -W "$fss" -- "$cur"))
}
_get_comp_words_by_ref ()
{
    local exclude flag i OPTIND=1;
    local cur cword words=();
    local upargs=() upvars=() vcur vcword vprev vwords;
    while getopts "c:i:n:p:w:" flag "$@"; do
        case $flag in
            c)
                vcur=$OPTARG
            ;;
            i)
                vcword=$OPTARG
            ;;
            n)
                exclude=$OPTARG
            ;;
            p)
                vprev=$OPTARG
            ;;
            w)
                vwords=$OPTARG
            ;;
            *)
                echo "bash_completion: $FUNCNAME: usage error" 1>&2;
                return 1
            ;;
        esac;
    done;
    while [[ $# -ge $OPTIND ]]; do
        case ${!OPTIND} in
            cur)
                vcur=cur
            ;;
            prev)
                vprev=prev
            ;;
            cword)
                vcword=cword
            ;;
            words)
                vwords=words
            ;;
            *)
                echo "bash_completion: $FUNCNAME: \`${!OPTIND}':" "unknown argument" 1>&2;
                return 1
            ;;
        esac;
        ((OPTIND += 1));
    done;
    __get_cword_at_cursor_by_ref "${exclude-}" words cword cur;
    [[ -v vcur ]] && {
        upvars+=("$vcur");
        upargs+=(-v $vcur "$cur")
    };
    [[ -v vcword ]] && {
        upvars+=("$vcword");
        upargs+=(-v $vcword "$cword")
    };
    [[ -v vprev && $cword -ge 1 ]] && {
        upvars+=("$vprev");
        upargs+=(-v $vprev "${words[cword - 1]}")
    };
    [[ -v vwords ]] && {
        upvars+=("$vwords");
        upargs+=(-a${#words[@]} $vwords ${words+"${words[@]}"})
    };
    ((${#upvars[@]})) && local "${upvars[@]}" && _upvars "${upargs[@]}"
}
_get_cword ()
{
    local LC_CTYPE=C;
    local cword words;
    __reassemble_comp_words_by_ref "${1-}" words cword;
    if [[ -n ${2-} && -n ${2//[^0-9]/} ]]; then
        printf "%s" "${words[cword - $2]}";
    else
        if ((${#words[cword]} == 0 && COMP_POINT == ${#COMP_LINE})); then
            :;
        else
            local i;
            local cur="$COMP_LINE";
            local index="$COMP_POINT";
            for ((i = 0; i <= cword; ++i))
            do
                while [[ ${#cur} -ge ${#words[i]} && ${cur:0:${#words[i]}} != "${words[i]}" ]]; do
                    cur="${cur:1}";
                    ((index > 0)) && ((index--));
                done;
                if ((i < cword)); then
                    local old_size="${#cur}";
                    cur="${cur#${words[i]}}";
                    local new_size="${#cur}";
                    ((index -= old_size - new_size));
                fi;
            done;
            if [[ ${words[cword]:0:${#cur}} != "$cur" ]]; then
                printf "%s" "${words[cword]}";
            else
                printf "%s" "${cur:0:index}";
            fi;
        fi;
    fi
}
_get_first_arg ()
{
    local i;
    arg=;
    for ((i = 1; i < COMP_CWORD; i++))
    do
        if [[ ${COMP_WORDS[i]} != -* ]]; then
            arg=${COMP_WORDS[i]};
            break;
        fi;
    done
}
_get_pword ()
{
    if ((COMP_CWORD >= 1)); then
        _get_cword "${@:-}" 1;
    fi
}
_gids ()
{
    if type getent &> /dev/null; then
        COMPREPLY=($(compgen -W '$(getent group | cut -d: -f3)' -- "$cur"));
    else
        if type perl &> /dev/null; then
            COMPREPLY=($(compgen -W '$(perl -e '"'"'while (($gid) = (getgrent)[2]) { print $gid . "\n" }'"'"')' -- "$cur"));
        else
            COMPREPLY=($(compgen -W '$(cut -d: -f3 /etc/group)' -- "$cur"));
        fi;
    fi
}
_have ()
{
    PATH=$PATH:/usr/sbin:/sbin:/usr/local/sbin type $1 &> /dev/null
}
_included_ssh_config_files ()
{
    (($# < 1)) && echo "bash_completion: $FUNCNAME: missing mandatory argument CONFIG" 1>&2;
    local configfile i f;
    configfile=$1;
    local reset=$(shopt -po noglob);
    set -o noglob;
    local included=($(command sed -ne 's/^[[:blank:]]*[Ii][Nn][Cc][Ll][Uu][Dd][Ee][[:blank:]]\(.*\)$/\1/p' "${configfile}"));
    $reset;
    [[ -n ${included-} ]] || return;
    for i in "${included[@]}";
    do
        if ! [[ $i =~ ^\~.*|^\/.* ]]; then
            if [[ $configfile =~ ^\/etc\/ssh.* ]]; then
                i="/etc/ssh/$i";
            else
                i="$HOME/.ssh/$i";
            fi;
        fi;
        __expand_tilde_by_ref i;
        set +o noglob;
        for f in $i;
        do
            if [[ -r $f ]]; then
                config+=("$f");
                _included_ssh_config_files $f;
            fi;
        done;
        $reset;
    done
}
_init_completion ()
{
    local exclude="" flag outx errx inx OPTIND=1;
    while getopts "n:e:o:i:s" flag "$@"; do
        case $flag in
            n)
                exclude+=$OPTARG
            ;;
            e)
                errx=$OPTARG
            ;;
            o)
                outx=$OPTARG
            ;;
            i)
                inx=$OPTARG
            ;;
            s)
                split=false;
                exclude+==
            ;;
            *)
                echo "bash_completion: $FUNCNAME: usage error" 1>&2;
                return 1
            ;;
        esac;
    done;
    COMPREPLY=();
    local redir="@(?([0-9])<|?([0-9&])>?(>)|>&)";
    _get_comp_words_by_ref -n "$exclude<>&" cur prev words cword;
    _variables && return 1;
    if [[ $cur == $redir* || ${prev-} == $redir ]]; then
        local xspec;
        case $cur in
            2'>'*)
                xspec=${errx-}
            ;;
            *'>'*)
                xspec=${outx-}
            ;;
            *'<'*)
                xspec=${inx-}
            ;;
            *)
                case $prev in
                    2'>'*)
                        xspec=${errx-}
                    ;;
                    *'>'*)
                        xspec=${outx-}
                    ;;
                    *'<'*)
                        xspec=${inx-}
                    ;;
                esac
            ;;
        esac;
        cur="${cur##$redir}";
        _filedir $xspec;
        return 1;
    fi;
    local i skip;
    for ((i = 1; i < ${#words[@]}; 1))
    do
        if [[ ${words[i]} == $redir* ]]; then
            [[ ${words[i]} == $redir ]] && skip=2 || skip=1;
            words=("${words[@]:0:i}" "${words[@]:i+skip}");
            ((i <= cword)) && ((cword -= skip));
        else
            ((i++));
        fi;
    done;
    ((cword <= 0)) && return 1;
    prev=${words[cword - 1]};
    [[ -n ${split-} ]] && _split_longopt && split=true;
    return 0
}
_installed_modules ()
{
    COMPREPLY=($(compgen -W "$(PATH="$PATH:/sbin" lsmod |
        awk '{if (NR != 1) print $1}')" -- "$1"))
}
_ip_addresses ()
{
    local n;
    case ${1-} in
        -a)
            n='6\?'
        ;;
        -6)
            n='6'
        ;;
        *)
            n=
        ;;
    esac;
    local PATH=$PATH:/sbin;
    local addrs=$({
        LC_ALL=C ifconfig -a || ip addr show
    } 2>/dev/null |
        command sed -e 's/[[:space:]]addr:/ /' -ne             "s|.*inet${n}[[:space:]]\{1,\}\([^[:space:]/]*\).*|\1|p");
    COMPREPLY+=($(compgen -W "$addrs" -- "${cur-}"))
}
_kernel_versions ()
{
    COMPREPLY=($(compgen -W '$(command ls /lib/modules)' -- "$cur"))
}
_known_hosts ()
{
    local cur prev words cword;
    _init_completion -n : || return;
    local options;
    [[ ${1-} == -a || ${2-} == -a ]] && options=-a;
    [[ ${1-} == -c || ${2-} == -c ]] && options+=" -c";
    _known_hosts_real ${options-} -- "$cur"
}
_known_hosts_real ()
{
    local configfile flag prefix="" ifs=$IFS;
    local cur suffix="" aliases i host ipv4 ipv6;
    local -a kh tmpkh=() khd=() config=();
    local OPTIND=1;
    while getopts "ac46F:p:" flag "$@"; do
        case $flag in
            a)
                aliases='yes'
            ;;
            c)
                suffix=':'
            ;;
            F)
                configfile=$OPTARG
            ;;
            p)
                prefix=$OPTARG
            ;;
            4)
                ipv4=1
            ;;
            6)
                ipv6=1
            ;;
            *)
                echo "bash_completion: $FUNCNAME: usage error" 1>&2;
                return 1
            ;;
        esac;
    done;
    if (($# < OPTIND)); then
        echo "bash_completion: $FUNCNAME: missing mandatory argument CWORD" 1>&2;
        return 1;
    fi;
    cur=${!OPTIND};
    ((OPTIND += 1));
    if (($# >= OPTIND)); then
        echo "bash_completion: $FUNCNAME($*): unprocessed arguments:" "$(while (($# >= OPTIND)); do
                printf '%s ' ${!OPTIND}
                shift
            done)" 1>&2;
        return 1;
    fi;
    [[ $cur == *@* ]] && prefix=$prefix${cur%@*}@ && cur=${cur#*@};
    kh=();
    if [[ -v configfile ]]; then
        [[ -r $configfile ]] && config+=("$configfile");
    else
        for i in /etc/ssh/ssh_config ~/.ssh/config ~/.ssh2/config;
        do
            [[ -r $i ]] && config+=("$i");
        done;
    fi;
    local reset=$(shopt -po noglob);
    set -o noglob;
    if ((${#config[@]} > 0)); then
        for i in "${config[@]}";
        do
            _included_ssh_config_files "$i";
        done;
    fi;
    if ((${#config[@]} > 0)); then
        local IFS='
';
        tmpkh=($(awk 'sub("^[ \t]*([Gg][Ll][Oo][Bb][Aa][Ll]|[Uu][Ss][Ee][Rr])[Kk][Nn][Oo][Ww][Nn][Hh][Oo][Ss][Tt][Ss][Ff][Ii][Ll][Ee][ \t]+", "") { print $0 }' "${config[@]}" | sort -u));
        IFS=$ifs;
    fi;
    if ((${#tmpkh[@]} != 0)); then
        local j;
        for i in "${tmpkh[@]}";
        do
            while [[ $i =~ ^([^\"]*)\"([^\"]*)\"(.*)$ ]]; do
                i=${BASH_REMATCH[1]}${BASH_REMATCH[3]};
                j=${BASH_REMATCH[2]};
                __expand_tilde_by_ref j;
                [[ -r $j ]] && kh+=("$j");
            done;
            for j in $i;
            do
                __expand_tilde_by_ref j;
                [[ -r $j ]] && kh+=("$j");
            done;
        done;
    fi;
    if [[ ! -v configfile ]]; then
        for i in /etc/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts2 /etc/known_hosts /etc/known_hosts2 ~/.ssh/known_hosts ~/.ssh/known_hosts2;
        do
            [[ -r $i ]] && kh+=("$i");
        done;
        for i in /etc/ssh2/knownhosts ~/.ssh2/hostkeys;
        do
            [[ -d $i ]] && khd+=("$i"/*pub);
        done;
    fi;
    if ((${#kh[@]} + ${#khd[@]} > 0)); then
        if ((${#kh[@]} > 0)); then
            for i in "${kh[@]}";
            do
                while read -ra tmpkh; do
                    ((${#tmpkh[@]} == 0)) && continue;
                    set -- "${tmpkh[@]}";
                    [[ $1 == [\|\#]* ]] && continue;
                    [[ $1 == @* ]] && shift;
                    local IFS=,;
                    for host in $1;
                    do
                        [[ $host == *[*?]* ]] && continue;
                        host="${host#[}";
                        host="${host%]?(:+([0-9]))}";
                        COMPREPLY+=($host);
                    done;
                    IFS=$ifs;
                done < "$i";
            done;
            COMPREPLY=($(compgen -W '${COMPREPLY[@]}' -- "$cur"));
        fi;
        if ((${#khd[@]} > 0)); then
            for i in "${khd[@]}";
            do
                if [[ $i == *key_22_$cur*.pub && -r $i ]]; then
                    host=${i/#*key_22_/};
                    host=${host/%.pub/};
                    COMPREPLY+=($host);
                fi;
            done;
        fi;
        for i in ${!COMPREPLY[*]};
        do
            COMPREPLY[i]=$prefix${COMPREPLY[i]}$suffix;
        done;
    fi;
    if [[ ${#config[@]} -gt 0 && -v aliases ]]; then
        local -a hosts=($(command sed -ne 's/^[[:blank:]]*[Hh][Oo][Ss][Tt][[:blank:]]\(.*\)$/\1/p' "${config[@]}"));
        if ((${#hosts[@]} != 0)); then
            COMPREPLY+=($(compgen -P "$prefix"                 -S "$suffix" -W '${hosts[@]%%[*?%]*}' -X '\!*' -- "$cur"));
        fi;
    fi;
    if [[ -n ${COMP_KNOWN_HOSTS_WITH_AVAHI-} ]] && type avahi-browse &> /dev/null; then
        COMPREPLY+=($(compgen -P "$prefix" -S "$suffix" -W             "$(avahi-browse -cpr _workstation._tcp 2>/dev/null |
                awk -F';' '/^=/ { print $7 }' | sort -u)" -- "$cur"));
    fi;
    if type ruptime &> /dev/null; then
        COMPREPLY+=($(compgen -W             "$(ruptime 2>/dev/null | awk '!/^ruptime:/ { print $1 }')"             -- "$cur"));
    fi;
    if [[ -n ${COMP_KNOWN_HOSTS_WITH_HOSTFILE-1} ]]; then
        COMPREPLY+=($(compgen -A hostname -P "$prefix" -S "$suffix" -- "$cur"));
    fi;
    $reset;
    if [[ -v ipv4 ]]; then
        COMPREPLY=("${COMPREPLY[@]/*:*$suffix/}");
    fi;
    if [[ -v ipv6 ]]; then
        COMPREPLY=("${COMPREPLY[@]/+([0-9]).+([0-9]).+([0-9]).+([0-9])$suffix/}");
    fi;
    if [[ -v ipv4 || -v ipv6 ]]; then
        for i in "${!COMPREPLY[@]}";
        do
            [[ -n ${COMPREPLY[i]} ]] || unset -v "COMPREPLY[i]";
        done;
    fi;
    __ltrim_colon_completions "$prefix$cur"
}
_longopt ()
{
    local cur prev words cword split;
    _init_completion -s || return;
    case "${prev,,}" in
        --help | --usage | --version)
            return
        ;;
        --!(no-*)dir*)
            _filedir -d;
            return
        ;;
        --!(no-*)@(file|path)*)
            _filedir;
            return
        ;;
        --+([-a-z0-9_]))
            local argtype=$(LC_ALL=C $1 --help 2>&1 | command sed -ne                 "s|.*$prev\[\{0,1\}=[<[]\{0,1\}\([-A-Za-z0-9_]\{1,\}\).*|\1|p");
            case ${argtype,,} in
                *dir*)
                    _filedir -d;
                    return
                ;;
                *file* | *path*)
                    _filedir;
                    return
                ;;
            esac
        ;;
    esac;
    $split && return;
    if [[ $cur == -* ]]; then
        COMPREPLY=($(compgen -W "$(LC_ALL=C $1 --help 2>&1 |
            while read -r line; do
                [[ $line =~ --[A-Za-z0-9]+([-_][A-Za-z0-9]+)*=? ]] &&
                    printf '%s\n' ${BASH_REMATCH[0]}
            done)" -- "$cur"));
        [[ ${COMPREPLY-} == *= ]] && compopt -o nospace;
    else
        if [[ $1 == *@(rmdir|chroot) ]]; then
            _filedir -d;
        else
            [[ $1 == *mkdir ]] && compopt -o nospace;
            _filedir;
        fi;
    fi
}
_mac_addresses ()
{
    local re='\([A-Fa-f0-9]\{2\}:\)\{5\}[A-Fa-f0-9]\{2\}';
    local PATH="$PATH:/sbin:/usr/sbin";
    COMPREPLY+=($(
        {
            LC_ALL=C ifconfig -a || ip link show
        } 2>/dev/null | command sed -ne             "s/.*[[:space:]]HWaddr[[:space:]]\{1,\}\($re\)[[:space:]].*/\1/p" -ne             "s/.*[[:space:]]HWaddr[[:space:]]\{1,\}\($re\)[[:space:]]*$/\1/p" -ne             "s|.*[[:space:]]\(link/\)\{0,1\}ether[[:space:]]\{1,\}\($re\)[[:space:]].*|\2|p" -ne             "s|.*[[:space:]]\(link/\)\{0,1\}ether[[:space:]]\{1,\}\($re\)[[:space:]]*$|\2|p"
    ));
    COMPREPLY+=($({
        arp -an || ip neigh show
    } 2>/dev/null | command sed -ne         "s/.*[[:space:]]\($re\)[[:space:]].*/\1/p" -ne         "s/.*[[:space:]]\($re\)[[:space:]]*$/\1/p"));
    COMPREPLY+=($(command sed -ne         "s/^[[:space:]]*\($re\)[[:space:]].*/\1/p" /etc/ethers 2>/dev/null));
    COMPREPLY=($(compgen -W '${COMPREPLY[@]}' -- "$cur"));
    __ltrim_colon_completions "$cur"
}
_minimal ()
{
    local cur prev words cword split;
    _init_completion -s || return;
    $split && return;
    _filedir
}
_modules ()
{
    local modpath;
    modpath=/lib/modules/$1;
    COMPREPLY=($(compgen -W "$(command ls -RL $modpath 2>/dev/null |
        command sed -ne 's/^\(.*\)\.k\{0,1\}o\(\.[gx]z\)\{0,1\}$/\1/p')" -- "$cur"))
}
_ncpus ()
{
    local var=NPROCESSORS_ONLN;
    [[ $OSTYPE == *linux* ]] && var=_$var;
    local n=$(getconf $var 2>/dev/null);
    printf %s ${n:-1}
}
_parse_help ()
{
    eval local cmd="$(quote "$1")";
    local line;
    {
        case $cmd in
            -)
                cat
            ;;
            *)
                LC_ALL=C "$(dequote "$cmd")" ${2:---help} 2>&1
            ;;
        esac
    } | while read -r line; do
        [[ $line == *([[:blank:]])-* ]] || continue;
        while [[ $line =~ ((^|[^-])-[A-Za-z0-9?][[:space:]]+)\[?[A-Z0-9]+([,_-]+[A-Z0-9]+)?(\.\.+)?\]? ]]; do
            line=${line/"${BASH_REMATCH[0]}"/"${BASH_REMATCH[1]}"};
        done;
        __parse_options "${line// or /, }";
    done
}
_parse_usage ()
{
    eval local cmd="$(quote "$1")";
    local line match option i char;
    {
        case $cmd in
            -)
                cat
            ;;
            *)
                LC_ALL=C "$(dequote "$cmd")" ${2:---usage} 2>&1
            ;;
        esac
    } | while read -r line; do
        while [[ $line =~ \[[[:space:]]*(-[^]]+)[[:space:]]*\] ]]; do
            match=${BASH_REMATCH[0]};
            option=${BASH_REMATCH[1]};
            case $option in
                -?(\[)+([a-zA-Z0-9?]))
                    for ((i = 1; i < ${#option}; i++))
                    do
                        char=${option:i:1};
                        [[ $char != '[' ]] && printf '%s\n' -$char;
                    done
                ;;
                *)
                    __parse_options "$option"
                ;;
            esac;
            line=${line#*"$match"};
        done;
    done
}
_pci_ids ()
{
    COMPREPLY+=($(compgen -W         "$(PATH="$PATH:/sbin" lspci -n | awk '{print $3}')" -- "$cur"))
}
_pgids ()
{
    COMPREPLY=($(compgen -W '$(command ps axo pgid=)' -- "$cur"))
}
_pids ()
{
    COMPREPLY=($(compgen -W '$(command ps axo pid=)' -- "$cur"))
}
_pnames ()
{
    local -a procs;
    if [[ ${1-} == -s ]]; then
        procs=($(command ps axo comm | command sed -e 1d));
    else
        local line i=-1 ifs=$IFS;
        IFS='
';
        local -a psout=($(command ps axo command=));
        IFS=$ifs;
        for line in "${psout[@]}";
        do
            if ((i == -1)); then
                if [[ $line =~ ^(.*[[:space:]])COMMAND([[:space:]]|$) ]]; then
                    i=${#BASH_REMATCH[1]};
                else
                    break;
                fi;
            else
                line=${line:i};
                line=${line%% *};
                procs+=($line);
            fi;
        done;
        if ((i == -1)); then
            for line in "${psout[@]}";
            do
                if [[ $line =~ ^[[(](.+)[])]$ ]]; then
                    procs+=(${BASH_REMATCH[1]});
                else
                    line=${line%% *};
                    line=${line##@(*/|-)};
                    procs+=($line);
                fi;
            done;
        fi;
    fi;
    COMPREPLY=($(compgen -X "<defunct>" -W '${procs[@]}' -- "$cur"))
}
_quote_readline_by_ref ()
{
    if [ -z "$1" ]; then
        printf -v $2 %s "$1";
    else
        if [[ $1 == \'* ]]; then
            printf -v $2 %s "${1:1}";
        else
            if [[ $1 == \~* ]]; then
                printf -v $2 \~%q "${1:1}";
            else
                printf -v $2 %q "$1";
            fi;
        fi;
    fi;
    [[ ${!2} == \$* ]] && eval $2=${!2}
}
_realcommand ()
{
    type -P "$1" > /dev/null && {
        if type -p realpath > /dev/null; then
            realpath "$(type -P "$1")";
        else
            if type -p greadlink > /dev/null; then
                greadlink -f "$(type -P "$1")";
            else
                if type -p readlink > /dev/null; then
                    readlink -f "$(type -P "$1")";
                else
                    type -P "$1";
                fi;
            fi;
        fi
    }
}
_rl_enabled ()
{
    [[ "$(bind -v)" == *$1+([[:space:]])on* ]]
}
_root_command ()
{
    local PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin;
    local root_command=$1;
    _command
}
_service ()
{
    local cur prev words cword;
    _init_completion || return;
    ((cword > 2)) && return;
    if [[ $cword -eq 1 && $prev == ?(*/)service ]]; then
        _services;
        [[ -e /etc/mandrake-release ]] && _xinetd_services;
    else
        local sysvdirs;
        _sysvdirs;
        COMPREPLY=($(compgen -W '`command sed -e "y/|/ /" \
            -ne "s/^.*\(U\|msg_u\)sage.*{\(.*\)}.*$/\2/p" \
            ${sysvdirs[0]}/${prev##*/} 2>/dev/null` start stop' -- "$cur"));
    fi
}
_services ()
{
    local sysvdirs;
    _sysvdirs;
    local IFS='
' reset=$(shopt -p nullglob);
    shopt -s nullglob;
    COMPREPLY=($(printf '%s\n' ${sysvdirs[0]}/!($_backup_glob|functions|README)));
    $reset;
    COMPREPLY+=($({
        systemctl list-units --full --all ||
            systemctl list-unit-files
    } 2>/dev/null |
        awk '$1 ~ /\.service$/ { sub("\\.service$", "", $1); print $1 }'));
    if [[ -x /sbin/upstart-udev-bridge ]]; then
        COMPREPLY+=($(initctl list 2>/dev/null | cut -d' ' -f1));
    fi;
    COMPREPLY=($(compgen -W '${COMPREPLY[@]#${sysvdirs[0]}/}' -- "$cur"))
}
_shells ()
{
    local shell rest;
    while read -r shell rest; do
        [[ $shell == /* && $shell == "$cur"* ]] && COMPREPLY+=($shell);
    done 2> /dev/null < /etc/shells
}
_signals ()
{
    local -a sigs=($(compgen -P "${1-}" -A signal "SIG${cur#${1-}}"));
    COMPREPLY+=("${sigs[@]/#${1-}SIG/${1-}}")
}
_split_longopt ()
{
    if [[ $cur == --?*=* ]]; then
        prev="${cur%%?(\\)=*}";
        cur="${cur#*=}";
        return 0;
    fi;
    return 1
}
_sysvdirs ()
{
    sysvdirs=();
    [[ -d /etc/rc.d/init.d ]] && sysvdirs+=(/etc/rc.d/init.d);
    [[ -d /etc/init.d ]] && sysvdirs+=(/etc/init.d);
    [[ -f /etc/slackware-version ]] && sysvdirs=(/etc/rc.d);
    return 0
}
_terms ()
{
    COMPREPLY+=($(compgen -W "$({
        command sed -ne 's/^\([^[:space:]#|]\{2,\}\)|.*/\1/p' /etc/termcap
        {
            toe -a || toe
        } | awk '{ print $1 }'
        find /{etc,lib,usr/lib,usr/share}/terminfo/? -type f -maxdepth 1 |
            awk -F/ '{ print $NF }'
    } 2>/dev/null)" -- "$cur"))
}
_tilde ()
{
    local result=0;
    if [[ ${1-} == \~* && $1 != */* ]]; then
        COMPREPLY=($(compgen -P '~' -u -- "${1#\~}"));
        result=${#COMPREPLY[@]};
        ((result > 0)) && compopt -o filenames 2> /dev/null;
    fi;
    return $result
}
_uids ()
{
    if type getent &> /dev/null; then
        COMPREPLY=($(compgen -W '$(getent passwd | cut -d: -f3)' -- "$cur"));
    else
        if type perl &> /dev/null; then
            COMPREPLY=($(compgen -W '$(perl -e '"'"'while (($uid) = (getpwent)[2]) { print $uid . "\n" }'"'"')' -- "$cur"));
        else
            COMPREPLY=($(compgen -W '$(cut -d: -f3 /etc/passwd)' -- "$cur"));
        fi;
    fi
}
_upvar ()
{
    echo "bash_completion: $FUNCNAME: deprecated function," "use _upvars instead" 1>&2;
    if unset -v "$1"; then
        if (($# == 2)); then
            eval $1=\"\$2\";
        else
            eval $1=\(\"\$"{@:2}"\"\);
        fi;
    fi
}
_upvars ()
{
    if ! (($#)); then
        echo "bash_completion: $FUNCNAME: usage: $FUNCNAME" "[-v varname value] | [-aN varname [value ...]] ..." 1>&2;
        return 2;
    fi;
    while (($#)); do
        case $1 in
            -a*)
                [[ -n ${1#-a} ]] || {
                    echo "bash_completion: $FUNCNAME:" "\`$1': missing number specifier" 1>&2;
                    return 1
                };
                printf %d "${1#-a}" &> /dev/null || {
                    echo bash_completion: "$FUNCNAME: \`$1': invalid number specifier" 1>&2;
                    return 1
                };
                [[ -n "$2" ]] && unset -v "$2" && eval $2=\(\"\$"{@:3:${1#-a}}"\"\) && shift $((${1#-a} + 2)) || {
                    echo bash_completion: "$FUNCNAME: \`$1${2+ }$2': missing argument(s)" 1>&2;
                    return 1
                }
            ;;
            -v)
                [[ -n "$2" ]] && unset -v "$2" && eval $2=\"\$3\" && shift 3 || {
                    echo "bash_completion: $FUNCNAME: $1:" "missing argument(s)" 1>&2;
                    return 1
                }
            ;;
            *)
                echo "bash_completion: $FUNCNAME: $1: invalid option" 1>&2;
                return 1
            ;;
        esac;
    done
}
_usb_ids ()
{
    COMPREPLY+=($(compgen -W         "$(PATH="$PATH:/sbin" lsusb | awk '{print $6}')" -- "$cur"))
}
_user_at_host ()
{
    local cur prev words cword;
    _init_completion -n : || return;
    if [[ $cur == *@* ]]; then
        _known_hosts_real "$cur";
    else
        COMPREPLY=($(compgen -u -S @ -- "$cur"));
        compopt -o nospace;
    fi
}
_usergroup ()
{
    if [[ $cur == *\\\\* || $cur == *:*:* ]]; then
        return;
    else
        if [[ $cur == *\\:* ]]; then
            local prefix;
            prefix=${cur%%*([^:])};
            prefix=${prefix//\\/};
            local mycur="${cur#*[:]}";
            if [[ ${1-} == -u ]]; then
                _allowed_groups "$mycur";
            else
                local IFS='
';
                COMPREPLY=($(compgen -g -- "$mycur"));
            fi;
            COMPREPLY=($(compgen -P "$prefix" -W "${COMPREPLY[@]}"));
        else
            if [[ $cur == *:* ]]; then
                local mycur="${cur#*:}";
                if [[ ${1-} == -u ]]; then
                    _allowed_groups "$mycur";
                else
                    local IFS='
';
                    COMPREPLY=($(compgen -g -- "$mycur"));
                fi;
            else
                if [[ ${1-} == -u ]]; then
                    _allowed_users "$cur";
                else
                    local IFS='
';
                    COMPREPLY=($(compgen -u -- "$cur"));
                fi;
            fi;
        fi;
    fi
}
_userland ()
{
    local userland=$(uname -s);
    [[ $userland == @(Linux|GNU/*) ]] && userland=GNU;
    [[ $userland == "$1" ]]
}
_variable_assignments ()
{
    local cur=${1-};
    if [[ $cur =~ ^([A-Za-z_][A-Za-z0-9_]*)=(.*)$ ]]; then
        prev=${BASH_REMATCH[1]};
        cur=${BASH_REMATCH[2]};
    else
        return 1;
    fi;
    case $prev in
        TZ)
            cur=/usr/share/zoneinfo/$cur;
            _filedir;
            for i in "${!COMPREPLY[@]}";
            do
                if [[ ${COMPREPLY[i]} == *.tab ]]; then
                    unset 'COMPREPLY[i]';
                    continue;
                else
                    if [[ -d ${COMPREPLY[i]} ]]; then
                        COMPREPLY[i]+=/;
                        compopt -o nospace;
                    fi;
                fi;
                COMPREPLY[i]=${COMPREPLY[i]#/usr/share/zoneinfo/};
            done
        ;;
        TERM)
            _terms
        ;;
        LANG | LC_*)
            COMPREPLY=($(compgen -W '$(locale -a 2>/dev/null)'                 -- "$cur"))
        ;;
        *)
            _variables && return 0;
            _filedir
        ;;
    esac;
    return 0
}
_variables ()
{
    if [[ $cur =~ ^(\$(\{[!#]?)?)([A-Za-z0-9_]*)$ ]]; then
        if [[ $cur == '${'* ]]; then
            local arrs vars;
            vars=($(compgen -A variable -P ${BASH_REMATCH[1]} -S '}' -- ${BASH_REMATCH[3]}));
            arrs=($(compgen -A arrayvar -P ${BASH_REMATCH[1]} -S '[' -- ${BASH_REMATCH[3]}));
            if ((${#vars[@]} == 1 && ${#arrs[@]} != 0)); then
                compopt -o nospace;
                COMPREPLY+=(${arrs[*]});
            else
                COMPREPLY+=(${vars[*]});
            fi;
        else
            COMPREPLY+=($(compgen -A variable -P '$' -- "${BASH_REMATCH[3]}"));
        fi;
        return 0;
    else
        if [[ $cur =~ ^(\$\{[#!]?)([A-Za-z0-9_]*)\[([^]]*)$ ]]; then
            local IFS='
';
            COMPREPLY+=($(compgen -W '$(printf %s\\n "${!'${BASH_REMATCH[2]}'[@]}")'             -P "${BASH_REMATCH[1]}${BASH_REMATCH[2]}[" -S ']}' -- "${BASH_REMATCH[3]}"));
            if [[ ${BASH_REMATCH[3]} == [@*] ]]; then
                COMPREPLY+=("${BASH_REMATCH[1]}${BASH_REMATCH[2]}[${BASH_REMATCH[3]}]}");
            fi;
            __ltrim_colon_completions "$cur";
            return 0;
        else
            if [[ $cur =~ ^\$\{[#!]?[A-Za-z0-9_]*\[.*\]$ ]]; then
                COMPREPLY+=("$cur}");
                __ltrim_colon_completions "$cur";
                return 0;
            fi;
        fi;
    fi;
    return 1
}
_xfunc ()
{
    set -- "$@";
    local srcfile=$1;
    shift;
    declare -F $1 &> /dev/null || __load_completion "$srcfile";
    "$@"
}
_xinetd_services ()
{
    local xinetddir=${BASHCOMP_XINETDDIR:-/etc/xinetd.d};
    if [[ -d $xinetddir ]]; then
        local IFS='
' reset=$(shopt -p nullglob);
        shopt -s nullglob;
        local -a svcs=($(printf '%s\n' $xinetddir/!($_backup_glob)));
        $reset;
        ((!${#svcs[@]})) || COMPREPLY+=($(compgen -W '${svcs[@]#$xinetddir/}' -- "${cur-}"));
    fi
}
dequote ()
{
    eval printf %s "$1" 2> /dev/null
}
gawklibpath_append ()
{
    [ -z "$AWKLIBPATH" ] && AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`;
    export AWKLIBPATH="$AWKLIBPATH:$*"
}
gawklibpath_default ()
{
    unset AWKLIBPATH;
    export AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`
}
gawklibpath_prepend ()
{
    [ -z "$AWKLIBPATH" ] && AWKLIBPATH=`gawk 'BEGIN {print ENVIRON["AWKLIBPATH"]}'`;
    export AWKLIBPATH="$*:$AWKLIBPATH"
}
gawkpath_append ()
{
    [ -z "$AWKPATH" ] && AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`;
    export AWKPATH="$AWKPATH:$*"
}
gawkpath_default ()
{
    unset AWKPATH;
    export AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`
}
gawkpath_prepend ()
{
    [ -z "$AWKPATH" ] && AWKPATH=`gawk 'BEGIN {print ENVIRON["AWKPATH"]}'`;
    export AWKPATH="$*:$AWKPATH"
}
quote ()
{
    local quoted=${1//\'/\'\\\'\'};
    printf "'%s'" "$quoted"
}
quote_readline ()
{
    local ret;
    _quote_readline_by_ref "$1" ret;
    printf %s "$ret"
}
vagrant@k8s:~$ env
SHELL=/bin/bash
PWD=/home/vagrant
LOGNAME=vagrant
XDG_SESSION_TYPE=tty
MOTD_SHOWN=pam
HOME=/home/vagrant
LANG=en_US.utf8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=10.0.2.2 58605 10.0.2.15 22
LESSCLOSE=/usr/bin/lesspipe %s %s
XDG_SESSION_CLASS=user
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=vagrant
SHLVL=1
XDG_SESSION_ID=3
XDG_RUNTIME_DIR=/run/user/1000
SSH_CLIENT=10.0.2.2 58605 22
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
SSH_TTY=/dev/pts/0
_=/usr/bin/env
vagrant@k8s:~$ echo $SHELL
/bin/bash
vagrant@k8s:~$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
vagrant@k8s:~$ which echo
/usr/bin/echo
vagrant@k8s:~$ THIS_CLASS=linux
vagrant@k8s:~$ echo $THIS_CLASS
linux
vagrant@k8s:~$ set | grep THIS_CLASS
THIS_CLASS=linux
vagrant@k8s:~$ grep THIS_CLASS
;
^C
vagrant@k8s:~$ echo $COLUMNS
120
vagrant@k8s:~$ env | grep THIS_CLASS
vagrant@k8s:~$ export THIS_CLASS
vagrant@k8s:~$ env | grep THIS_CLASS
THIS_CLASS=linux
vagrant@k8s:~$ export OTHER_CLASS=java
vagrant@k8s:~$ env | grep OTHER_CLASS
OTHER_CLASS=java
vagrant@k8s:~$ TEST1=okok
vagrant@k8s:~$ TEST2=nono
vagrant@k8s:~$ export TEST1
vagrant@k8s:~$ set | grep TEST
TEST1=okok
TEST2=nono
_=TEST1
vagrant@k8s:~$ env | grep TEST
TEST1=okok
vagrant@k8s:~$ exit
logout
Connection to 127.0.0.1 closed.

C:\Users\bitcamp\vm-projects\host2>vagrant ssh
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Last login: Wed Mar 22 09:49:21 2023 from 10.0.2.2
vagrant@k8s:~$ set | grep TEST
TEST1=okok
vagrant@k8s:~$ env | grep TEST
TEST1=okok
vagrant@k8s:~$ env | grep TEST1
TEST1=okok
vagrant@k8s:~$ declare TEST3=okok
vagrant@k8s:~$ declare -x TEST4=nono
vagrant@k8s:~$ env | grep TEST
TEST1=okok
TEST4=nono
vagrant@k8s:~$ set | grep TEST
TEST1=okok
TEST3=okok
TEST4=nono
_=TEST4=nono
vagrant@k8s:~$ unset TEST4
vagrant@k8s:~$ set | grep TEST
TEST1=okok
TEST3=okok
_=TEST4
vagrant@k8s:~$ env | grep TEST
TEST1=okok
vagrant@k8s:~$ sh
$ TEST5=okok
$ export TEST6=okok
$ env | grep TEST
TEST6=okok
_=TEST6=okok
TEST1=okok
$ set | grep TEST
TEST1='okok'
TEST5='okok'
TEST6='okok'
_='TEST6=okok'
$ exit
vagrant@k8s:~$ env | grep TEST
TEST1=okok
vagrant@k8s:~$ set | grep TEST
TEST1=okok
TEST3=okok
vagrant@k8s:~$ export TEST4=okok
vagrant@k8s:~$ env | grep TEST
TEST1=okok
TEST4=okok
vagrant@k8s:~$ sh
$ env | grep TEST
TEST4=okok
TEST1=okok
$ sh
$ csh
sh: 1: csh: not found
$ exit
$ exit
vagrant@k8s:~$ expr 5+4
5+4
vagrant@k8s:~$ expr 5 + 4
9
vagrant@k8s:~$ expr 5 - 4
1
vagrant@k8s:~$ expr 5 * 4
expr: syntax error: unexpected argument ‘bashrc_copy’
vagrant@k8s:~$ expr 5 \* 4
20
vagrant@k8s:~$ expr 5 / 4
1
vagrant@k8s:~$ expr 5 % 4
1
vagrant@k8s:~$ V1=100
vagrant@k8s:~$ V2=27
vagrant@k8s:~$ expr $V1 + $V2
127
vagrant@k8s:~$ expr $V1 - $V2
73
vagrant@k8s:~$ expr $V1 \* $V2
2700
vagrant@k8s:~$ expr $V1 / $V2
3
vagrant@k8s:~$ expr $V1 % $V2
19
vagrant@k8s:~$ echo $((5 + 4))
9
vagrant@k8s:~$ echo $(($V1 + $V2))
127
vagrant@k8s:~$ echo $V1 + $V2
100 + 27
vagrant@k8s:~$ echo $(($V1 + $V2))
127
vagrant@k8s:~$ echo $($V1 + $V2)
-bash: 100: command not found

vagrant@k8s:~$ echo $[$V1 + $V2]
127
vagrant@k8s:~$ nano greeting.sh
vagrant@k8s:~$ greeting.sh
-bash: greeting.sh: command not found
vagrant@k8s:~$ dir
bashrc_copy  hello   hello.c       host_link  ls_err.txt  ls_log3  mybin  temp2
greeting.sh  hello1  Hello\ World  ls_err2    ls_log2     ls.txt   ok     test.txt
vagrant@k8s:~$ sh greeting.sh
greeting.sh: 6: function: not found
안녕하세요, Alice(25)님!
greeting.sh: 8: Syntax error: "}" unexpected
vagrant@k8s:~$ nano greeting.sh
vagrant@k8s:~$ nano greeting.sh
vagrant@k8s:~$ bash greeting.sh
안녕하세요, Alice(25)님!
성인입니다.
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ bash greeting2.sh
Alice
vagrant@k8s:~$ chmod 755 greeting.sh
vagrant@k8s:~$ ls
 bashrc_copy    greeting.sh   hello1   'Hello World'   ls_err2      ls_log2   ls.txt   ok      test.txt
 greeting2.sh   hello         hello.c   host_link      ls_err.txt   ls_log3   mybin    temp2
vagrant@k8s:~$ ./greeting.sh
안녕하세요, Alice(25)님!
성인입니다.
vagrant@k8s:~$ shebang
-bash: shebang: command not found
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ bash greeting2.sh
Access granted
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ bash greeting2.sh
Access granted
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ bashant@k8s:~$ nano greeting2.sh
Access granted
vagrant@k8s:~$ bash greeting2.sh
Access granted
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ bash greeting2.sh
greeting2.sh: line 5: [admin: command not found
Access denied
vagrant@k8s:~$ nano greeting2.sh
vagrant@k8s:~$ vagrant@k8s:~$
vagrant@k8s:~$ ls
 bashrc_copy    greeting.sh   hello1   'Hello World'   ls_err2      ls_log2   ls.txt   ok      test.txt
 greeting2.sh   hello         hello.c   host_link      ls_err.txt   ls_log3   mybin    temp2
vagrant@k8s:~$ ls -al
total 112
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 10:51  .
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ..
-rw------- 1 vagrant vagrant 4877 Mar 22 10:00  .bash_history
-rw-r--r-- 1 vagrant vagrant  220 Feb 25  2020  .bash_logout
-rw-r--r-- 1 vagrant vagrant 3790 Mar 22 09:59  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ touch file1 file2
vagrant@k8s:~$ ls -al
total 112
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 10:53  .
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ..
-rw------- 1 vagrant vagrant 4877 Mar 22 10:00  .bash_history
-rw-r--r-- 1 vagrant vagrant  220 Feb 25  2020  .bash_logout
-rw-r--r-- 1 vagrant vagrant 3790 Mar 22 09:59  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ echo $[ -e file1 ]
-bash: -e file1 : syntax error in expression (error token is "file1 ")
vagrant@k8s:~$ echo $[ -e $file1 ]
0
vagrant@k8s:~$ file1=file1
vagrant@k8s:~$ echo $[ -e file1 ]
-bash: file1: expression recursion level exceeded (error token is "file1")
vagrant@k8s:~$ echo $[ -e $file1 ]
-bash: file1: expression recursion level exceeded (error token is "file1")
vagrant@k8s:~$ nano filename.sh
vagrant@k8s:~$ bash filename.sh
file1 exists
vagrant@k8s:~$ if [ -e $filename ]
> ;
-bash: syntax error near unexpected token `;'
vagrant@k8s:~$ [ -e file1 ]
vagrant@k8s:~$ echo [ -e file1 ]
[ -e file1 ]
vagrant@k8s:~$ [ -e file1 ] && echo "exists"
exists
vagrant@k8s:~$ [ -e file2 ] && echo "exists"
exists
vagrant@k8s:~$ [ -e file3 ] && echo "exists"
vagrant@k8s:~$ [ -e $file3 ] && echo "exists"
exists
vagrant@k8s:~$ [ -e $file43 ] && echo "exists"
exists
vagrant@k8s:~$ [ -d file1 ] && echo "okok"
vagrant@k8s:~$ [ -e file1 ] && echo "okok"
okok
vagrant@k8s:~$ [ -f file1 ] && echo "okok"
okok
vagrant@k8s:~$ [ -r file1 ] && echo "okok"
okok
vagrant@k8s:~$ [ -w file1 ] && echo "okok"
okok
vagrant@k8s:~$ [ -x file1 ] && echo "okok"
vagrant@k8s:~$ [ -u file1 ] && echo "okok"
vagrant@k8s:~$ [ -g file1 ] && echo "okok"
vagrant@k8s:~$ [ -s file1 ] && echo "okok"
vagrant@k8s:~$ [ -s greeting.sh ] && echo "okok"
okok
vagrant@k8s:~$ nano color.sh
vagrant@k8s:~$ vagrant@k8s:~$ bash color.sh
what is your favorite color?
red
you like red
vagrant@k8s:~$ bash color.sh
what is your favorite color?
gg
you did not enter a valid color
vagrant@k8s:~$ nano color.sh
vagrant@k8s:~$ bash color.sh
color.sh: line 1: !/bin/bash: No such file or directory
what is your favorite color?
blue
you like blue
vagrant@k8s:~$ nano test4.sh
vagrant@k8s:~$ vagrant@k8s:~$ bash test4.sh
I like apple
I like banana
I like orange
vagrant@k8s:~$ nano test5.sh
vagrant@k8s:~$ bash test5.sh
Count is 1
Count is 2
Count is 3
Count is 4


vagrant@k8s:~$ bash test5.sh
Count is 1
Count is 2
Count is 3
Count is 4
Count is 5
vagrant@k8s:~$ nano test5
vagrant@k8s:~$ rm test5
rm: cannot remove 'test5': No such file or directory
vagrant@k8s:~$ ls -al
total 132
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 11:14  .
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ..
-rw------- 1 vagrant vagrant 4877 Mar 22 10:00  .bash_history
-rw-r--r-- 1 vagrant vagrant  220 Feb 25  2020  .bash_logout
-rw-r--r-- 1 vagrant vagrant 3790 Mar 22 09:59  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache
-rw-rw-r-- 1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2
-rw-rw-r-- 1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ nano test5.sh
vagrant@k8s:~$ nano test6.sh
vagrant@k8s:~$ bash test6.sh
Count is 1
Count is 2
Count is 3
Count is 4
Count is 5
vagrant@k8s:~$ nano test7.sh
vagrant@k8s:~$ bash test7.sh
I like apple
vagrant@k8s:~$ nano test8.sh
vagrant@k8s:~$ bash test8.sh
Count is 1
Count is 2
Count is 4
Count is 5
vagrant@k8s:~$ nano test9.sh
vagrant@k8s:~$ bash test9.sh
Hello, world!
vagrant@k8s:~$ nano test10.sh
vagrant@k8s:~$ ./test10.sh 3 4
-bash: ./test10.sh: Permission denied
vagrant@k8s:~$ sudo ./test10.sh 3 4
sudo: ./test10.sh: command not found
vagrant@k8s:~$ bash test10.sh 3 4
The sum of 3 and 4 is 7
vagrant@k8s:~$ bash test10.sh 3 4^C
vagrant@k8s:~$ nano test9.sh
vagrant@k8s:~$ bash test9.sh


vagrant@k8s:~$ bash test11.sh
The product of 2 and 3 is 6
The product of 4 and 5 is 20
vagrant@k8s:~$ ll
total 152
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 11:26  ./
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ../
-rw------- 1 vagrant vagrant 4877 Mar 22 10:00  .bash_history
-rw-r--r-- 1 vagrant vagrant  220 Feb 25  2020  .bash_logout
-rw-r--r-- 1 vagrant vagrant 3790 Mar 22 09:59  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache/
-rw-rw-r-- 1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh*
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello*
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local/
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin/
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok/
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh/
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2/
-rw-rw-r-- 1 vagrant vagrant   66 Mar 22 11:25  test10.sh
-rw-rw-r-- 1 vagrant vagrant  126 Mar 22 11:26  test11.sh
-rw-rw-r-- 1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r-- 1 vagrant vagrant  117 Mar 22 11:15  test7.sh
-rw-rw-r-- 1 vagrant vagrant  156 Mar 22 11:16  test8.sh
-rw-rw-r-- 1 vagrant vagrant   58 Mar 22 11:25  test9.sh
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ nano test10.sh
vagrant@k8s:~$ dash test9.sh
Hello, world!
vagrant@k8s:~$ bash test9.sh
Hello, world!
vagrant@k8s:~$ sh test9.sh
Hello, world!
vagrant@k8s:~$ nano test11.sh
vagrant@k8s:~$ nano test12.sh
vagrant@k8s:~$ vagrant@k8s:~$ nano test12.sh
vagrant@k8s:~$ bash test12.sh
Hello, world!
vagrant@k8s:~$ nano test12.sh
vagrant@k8s:~$ bash test12.sh
Hello, world!

vagrant@k8s:~$ nano test12.sh
vagrant@k8s:~$ bash test12.sh
Hello, world!
Hello, world!
vagrant@k8s:~$ nano test13.sh
vagrant@k8s:~$ cat test13.sh
#!/bin/bash

echo "Script name $0"
echo "PID of the script: $$"
echo Number of arguments passed: $#
echo All arguments passed: $@
echo Exit status of the last command executed: $?
vagrant@k8s:~$ bash test13.sh
Script name test13.sh
PID of the script: 1395
Number of arguments passed: 0
All arguments passed:
Exit status of the last command executed: 0
vagrant@k8s:~$ nano test13.sh
vagrant@k8s:~$ bash test13.sh
Script name test13.sh
$1:
PID of the script: 1397
Number of arguments passed: 0
All arguments passed:
Exit status of the last command executed: 0
vagrant@k8s:~$ bash test13.sh aaa bbb ccc
Script name test13.sh
$1: aaa
PID of the script: 1398
Number of arguments passed: 3
All arguments passed: aaa bbb ccc
Exit status of the last command executed: 0
vagrant@k8s:~$ bash test13.sh aaa        ^Cb ccc
vagrant@k8s:~$ nano test13.sh
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
test14.sh: line 4: return: too many arguments
1
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
44
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh




vagrant@k8s:~$ bash test14.sh
100
200
44
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
100
200
300


vagrant@k8s:~$ bash test14.sh
100
200
300
result2
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
100
200
300
44
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
100
200
300
0
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
100

test14.sh: line 6: 100 + : syntax error: operand expected (error token is "+ ")
0
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
test14.sh: line 4: 100 + : syntax error: operand expected (error token is "+ ")
1
vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ vagrant@k8s:~$ bash test14.sh

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
test14.sh: line 9: 100: command not found

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
test14.sh: line 9: plus 100 200: syntax error in expression (error token is "100 200")

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh
test14.sh: line 4: return: too many arguments

vagrant@k8s:~$ nano test14.sh
vagrant@k8s:~$ bash test14.sh

vagrant@k8s:~$ /etc/profile -a
-bash: /etc/profile: Permission denied
vagrant@k8s:~$ ls /etc/profile
/etc/profile
vagrant@k8s:~$ ls /sdf
ls: cannot access '/sdf': No such file or directory
vagrant@k8s:~$ ls -a /etc/profile
/etc/profile
vagrant@k8s:~$ ls /etc/bash.bashrc
/etc/bash.bashrc
vagrant@k8s:~$ ls /etc/profile.d/*.sh
/etc/profile.d/01-locale-fix.sh  /etc/profile.d/bash_completion.sh  /etc/profile.d/gawk.sh
vagrant@k8s:~$ echo $PS1
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$
vagrant@k8s:~$ \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$
-bash: [e]0: command not found
-bash: u@h:: command not found
-bash: 32m]u@h[033[00m]:[033[01: command not found
-bash: 34m]w[033[00m]$: command not found
vagrant@k8s:~$ nano .bashrc
vagrant@k8s:~$ source .bashrc
vagrant@k8s:~$ nano .bashrc
vagrant@k8s:~$ source .bashrc
vagrant@[]]k8s:~$ nano .bashrc
vagrant@[]]k8s:~$ source .bashrc
vagrant@k8s:~$ ?
-bash: ?: command not found
vagrant@k8s:~$ nano .bashrc
vagrant@k8s:~$ source .bashrc
vagrant@k8s:~$ nano .bashrc
vagrant@k8s:~$ nano .bash_logout
vagrant@k8s:~$ source .bash_logout
안녕히가세요
vagrant@k8s:~$ exit
logout
안녕히가세요
Connection to 127.0.0.1 closed.

C:\Users\bitcamp\vm-projects\host2>vagrant ssh
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Last login: Wed Mar 22 10:00:20 2023 from 10.0.2.2
vagrant@k8s:~$ ls -al /dev/std*
lrwxrwxrwx 1 root root 15 Mar 22 09:33 /dev/stderr -> /proc/self/fd/2
lrwxrwxrwx 1 root root 15 Mar 22 09:33 /dev/stdin -> /proc/self/fd/0
lrwxrwxrwx 1 root root 15 Mar 22 09:33 /dev/stdout -> /proc/self/fd/1
vagrant@k8s:~$ ls -al /proc/self/fd/
total 0
dr-x------ 2 vagrant vagrant  0 Mar 22 12:31 .
dr-xr-xr-x 9 vagrant vagrant  0 Mar 22 12:31 ..
lrwx------ 1 vagrant vagrant 64 Mar 22 12:31 0 -> /dev/pts/0
lrwx------ 1 vagrant vagrant 64 Mar 22 12:31 1 -> /dev/pts/0
lrwx------ 1 vagrant vagrant 64 Mar 22 12:31 2 -> /dev/pts/0
lr-x------ 1 vagrant vagrant 64 Mar 22 12:31 3 -> /proc/1524/fd
vagrant@k8s:~$ ls -ail /proc/self/fd/
total 0
23160 dr-x------ 2 vagrant vagrant  0 Mar 22 12:32 .
23159 dr-xr-xr-x 9 vagrant vagrant  0 Mar 22 12:32 ..
23165 lrwx------ 1 vagrant vagrant 64 Mar 22 12:32 0 -> /dev/pts/0
23166 lrwx------ 1 vagrant vagrant 64 Mar 22 12:32 1 -> /dev/pts/0
23167 lrwx------ 1 vagrant vagrant 64 Mar 22 12:32 2 -> /dev/pts/0
23168 lr-x------ 1 vagrant vagrant 64 Mar 22 12:32 3 -> /proc/1525/fd
vagrant@k8s:~$ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin
systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin
messagebus:x:103:106::/nonexistent:/usr/sbin/nologin
syslog:x:104:110::/home/syslog:/usr/sbin/nologin
_apt:x:105:65534::/nonexistent:/usr/sbin/nologin
tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false
uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin
tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin
pollinate:x:110:1::/var/cache/pollinate:/bin/false
sshd:x:111:65534::/run/sshd:/usr/sbin/nologin
systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin
vagrant:x:1000:1000:Hoon:/home/vagrant:/bin/bash
lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false
dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin
usbmux:x:109:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin
fwupd-refresh:x:113:115:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin
vagrant@k8s:~$ cat /etc/group
root:x:0:
daemon:x:1:
bin:x:2:
sys:x:3:
adm:x:4:syslog,vagrant
tty:x:5:syslog
disk:x:6:
lp:x:7:
mail:x:8:
news:x:9:
uucp:x:10:
man:x:12:
proxy:x:13:
kmem:x:15:
dialout:x:20:
fax:x:21:
voice:x:22:
cdrom:x:24:vagrant
floppy:x:25:
tape:x:26:
sudo:x:27:vagrant
audio:x:29:
dip:x:30:vagrant
www-data:x:33:
backup:x:34:
operator:x:37:
list:x:38:
irc:x:39:
src:x:40:
gnats:x:41:
shadow:x:42:
utmp:x:43:
video:x:44:
sasl:x:45:
plugdev:x:46:vagrant
staff:x:50:
games:x:60:
users:x:100:
nogroup:x:65534:
systemd-journal:x:101:
systemd-network:x:102:
systemd-resolve:x:103:
systemd-timesync:x:104:
crontab:x:105:
messagebus:x:106:
input:x:107:
kvm:x:108:
render:x:109:
syslog:x:110:
tss:x:111:
uuidd:x:112:
tcpdump:x:113:
lxd:x:116:vagrant
systemd-coredump:x:999:
vagrant:x:1000:
netdev:x:117:
fwupd-refresh:x:115:
sgx:x:118:
_ssh:x:114:
vagrant@k8s:~$ cat /etc/shadow
cat: /etc/shadow: Permission denied
vagrant@k8s:~$ sudo cat /etc/shadow
root:$6$0wMk8OhyIdUoD6uj$hZNp9f61HC708c1yGqnP.gYH37ZUizZQurLh1U0lVSvlt0r08XbGwdNh3JvXWk4c3oyQSyHSua0kkCcl3eawX0:18706:0:99999:7:::
daemon:*:18659:0:99999:7:::
bin:*:18659:0:99999:7:::
sys:*:18659:0:99999:7:::
sync:*:18659:0:99999:7:::
games:*:18659:0:99999:7:::
man:*:18659:0:99999:7:::
lp:*:18659:0:99999:7:::
mail:*:18659:0:99999:7:::
news:*:18659:0:99999:7:::
uucp:*:18659:0:99999:7:::
proxy:*:18659:0:99999:7:::
www-data:*:18659:0:99999:7:::
backup:*:18659:0:99999:7:::
list:*:18659:0:99999:7:::
irc:*:18659:0:99999:7:::
gnats:*:18659:0:99999:7:::
nobody:*:18659:0:99999:7:::
systemd-network:*:18659:0:99999:7:::
systemd-resolve:*:18659:0:99999:7:::
systemd-timesync:*:18659:0:99999:7:::
messagebus:*:18659:0:99999:7:::
syslog:*:18659:0:99999:7:::
_apt:*:18659:0:99999:7:::
tss:*:18659:0:99999:7:::
uuidd:*:18659:0:99999:7:::
tcpdump:*:18659:0:99999:7:::
pollinate:*:18659:0:99999:7:::
sshd:*:18706:0:99999:7:::
systemd-coredump:!!:18706::::::
vagrant:$6$lND/emZfi3wRYXcT$/J4YEu7s/ojG2d2clDfR3uyruebIN51ZvfPb57bUy0Ury2vwbo.qXVx0GaXzzXW8DQqrjge6ofKXVmNOpYzHc1:18706:0:99999:7:::
lxd:!:18706::::::
dnsmasq:*:18706:0:99999:7:::
usbmux:*:19308:0:99999:7:::
fwupd-refresh:*:19308:0:99999:7:::
vagrant@k8s:~$ who am i
vagrant  pts/0        2023-03-22 12:30 (10.0.2.2)
vagrant@k8s:~$ who
vagrant  pts/0        2023-03-22 12:30 (10.0.2.2)
vagrant  pts/1        2023-03-22 10:00 (10.0.2.2)
vagrant@k8s:~$ whoami
vagrant
vagrant@k8s:~$ id
uid=1000(vagrant) gid=1000(vagrant) groups=1000(vagrant),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lxd)
vagrant@k8s:~$ groups
vagrant adm cdrom sudo dip plugdev lxd
vagrant@k8s:~$ groups vagrant
vagrant : vagrant adm cdrom sudo dip plugdev lxd
vagrant@k8s:~$ chown
chown: missing operand
Try 'chown --help' for more information.
vagrant@k8s:~$ chown --help
Usage: chown [OPTION]... [OWNER][:[GROUP]] FILE...
  or:  chown [OPTION]... --reference=RFILE FILE...
Change the owner and/or group of each FILE to OWNER and/or GROUP.
With --reference, change the owner and group of each FILE to those of RFILE.

  -c, --changes          like verbose but report only when a change is made
  -f, --silent, --quiet  suppress most error messages
  -v, --verbose          output a diagnostic for every file processed
      --dereference      affect the referent of each symbolic link (this is
                         the default), rather than the symbolic link itself
  -h, --no-dereference   affect symbolic links instead of any referenced file
                         (useful only on systems that can change the
                         ownership of a symlink)
      --from=CURRENT_OWNER:CURRENT_GROUP
                         change the owner and/or group of each file only if
                         its current owner and/or group match those specified
                         here.  Either may be omitted, in which case a match
                         is not required for the omitted attribute
      --no-preserve-root  do not treat '/' specially (the default)
      --preserve-root    fail to operate recursively on '/'
      --reference=RFILE  use RFILE's owner and group rather than
                         specifying OWNER:GROUP values
  -R, --recursive        operate on files and directories recursively

The following options modify how a hierarchy is traversed when the -R
option is also specified.  If more than one is specified, only the final
one takes effect.

  -H                     if a command line argument is a symbolic link
                         to a directory, traverse it
  -L                     traverse every symbolic link to a directory
                         encountered
  -P                     do not traverse any symbolic links (default)

      --help     display this help and exit
      --version  output version information and exit

Owner is unchanged if missing.  Group is unchanged if missing, but changed
to login group if implied by a ':' following a symbolic OWNER.
OWNER and GROUP may be numeric as well as symbolic.

Examples:
  chown root /u        Change the owner of /u to "root".
  chown root:staff /u  Likewise, but also change its group to "staff".
  chown -hR root /u    Change the owner of /u and subfiles to "root".

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/chown>
or available locally via: info '(coreutils) chown invocation'
vagrant@k8s:~$
vagrant@k8s:~$ ls
 bashrc_copy   filename.sh    hello1         ls_err2      ls.txt   test10.sh   test14.sh   test7.sh
 color.sh      greeting2.sh   hello.c        ls_err.txt   mybin    test11.sh   test4.sh    test8.sh
 file1         greeting.sh   'Hello World'   ls_log2      ok       test12.sh   test5.sh    test9.sh
 file2         hello          host_link      ls_log3      temp2    test13.sh   test6.sh    test.txt
vagrant@k8s:~$ file1
-bash: file1: command not found
vagrant@k8s:~$ ll
total 164
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 12:29  ./
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ../
-rw------- 1 vagrant vagrant 7978 Mar 22 12:29  .bash_history
-rw-r--r-- 1 vagrant vagrant  247 Mar 22 12:29  .bash_logout
-rw-r--r-- 1 vagrant vagrant 4034 Mar 22 12:27  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache/
-rw-rw-r-- 1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh*
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello*
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local/
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin/
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok/
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh/
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2/
-rw-rw-r-- 1 vagrant vagrant   66 Mar 22 11:25  test10.sh
-rw-rw-r-- 1 vagrant vagrant  126 Mar 22 11:26  test11.sh
-rw-rw-r-- 1 vagrant vagrant   77 Mar 22 11:48  test12.sh
-rw-rw-r-- 1 vagrant vagrant  222 Mar 22 11:53  test13.sh
-rw-rw-r-- 1 vagrant vagrant   80 Mar 22 12:12  test14.sh
-rw-rw-r-- 1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r-- 1 vagrant vagrant  117 Mar 22 11:15  test7.sh
-rw-rw-r-- 1 vagrant vagrant  156 Mar 22 11:16  test8.sh
-rw-rw-r-- 1 vagrant vagrant   58 Mar 22 11:25  test9.sh
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ chmod o+rwx
chmod: missing operand after ‘o+rwx’
Try 'chmod --help' for more information.
vagrant@k8s:~$ chmod --help
Usage: chmod [OPTION]... MODE[,MODE]... FILE...
  or:  chmod [OPTION]... OCTAL-MODE FILE...
  or:  chmod [OPTION]... --reference=RFILE FILE...
Change the mode of each FILE to MODE.
With --reference, change the mode of each FILE to that of RFILE.

  -c, --changes          like verbose but report only when a change is made
  -f, --silent, --quiet  suppress most error messages
  -v, --verbose          output a diagnostic for every file processed
      --no-preserve-root  do not treat '/' specially (the default)
      --preserve-root    fail to operate recursively on '/'
      --reference=RFILE  use RFILE's mode instead of MODE values
  -R, --recursive        change files and directories recursively
      --help     display this help and exit
      --version  output version information and exit

Each MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.

GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Full documentation <https://www.gnu.org/software/coreutils/chmod>
or available locally via: info '(coreutils) chmod invocation'
vagrant@k8s:~$ chmod o+rwx file1
vagrant@k8s:~$ ll
total 164
drwxr-xr-x 8 vagrant vagrant 4096 Mar 22 12:29  ./
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ../
-rw------- 1 vagrant vagrant 7978 Mar 22 12:29  .bash_history
-rw-r--r-- 1 vagrant vagrant  247 Mar 22 12:29  .bash_logout
-rw-r--r-- 1 vagrant vagrant 4034 Mar 22 12:27  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache/
-rw-rw-r-- 1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-rwx 1 vagrant vagrant    0 Mar 22 10:53  file1*
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh*
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello*
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local/
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin/
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok/
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh/
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2/
-rw-rw-r-- 1 vagrant vagrant   66 Mar 22 11:25  test10.sh
-rw-rw-r-- 1 vagrant vagrant  126 Mar 22 11:26  test11.sh
-rw-rw-r-- 1 vagrant vagrant   77 Mar 22 11:48  test12.sh
-rw-rw-r-- 1 vagrant vagrant  222 Mar 22 11:53  test13.sh
-rw-rw-r-- 1 vagrant vagrant   80 Mar 22 12:12  test14.sh
-rw-rw-r-- 1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r-- 1 vagrant vagrant  117 Mar 22 11:15  test7.sh
-rw-rw-r-- 1 vagrant vagrant  156 Mar 22 11:16  test8.sh
-rw-rw-r-- 1 vagrant vagrant   58 Mar 22 11:25  test9.sh
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ touch a.txt
vagrant@k8s:~$ mkdir a
vagrant@k8s:~$ ls -al a
total 8
drwxrwxr-x 2 vagrant vagrant 4096 Mar 22 14:13 .
drwxr-xr-x 9 vagrant vagrant 4096 Mar 22 14:13 ..
vagrant@k8s:~$ ls -al a*
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 14:12 a.txt

a:
total 8
drwxrwxr-x 2 vagrant vagrant 4096 Mar 22 14:13 .
drwxr-xr-x 9 vagrant vagrant 4096 Mar 22 14:13 ..
vagrant@k8s:~$ ls -al
total 168
drwxr-xr-x 9 vagrant vagrant 4096 Mar 22 14:13  .
drwxr-xr-x 3 root    root    4096 Mar 20  2021  ..
drwxrwxr-x 2 vagrant vagrant 4096 Mar 22 14:13  a
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 14:12  a.txt
-rw------- 1 vagrant vagrant 7978 Mar 22 12:29  .bash_history
-rw-r--r-- 1 vagrant vagrant  247 Mar 22 12:29  .bash_logout
-rw-r--r-- 1 vagrant vagrant 4034 Mar 22 12:27  .bashrc
-rw-r--r-- 1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
drwx------ 2 vagrant vagrant 4096 Mar 20  2021  .cache
-rw-rw-r-- 1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-rwx 1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r-- 1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r-- 1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r-- 1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x 1 vagrant vagrant  245 Mar 22 10:37  greeting.sh
-rwxrwxr-x 1 vagrant vagrant   31 Mar 21 16:05  hello
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r-- 1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r-- 1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx 1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw------- 1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 14:05  .local
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r-- 1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r-- 1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r-- 1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r-- 1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 15:04  mybin
drwxrwxr-x 2 vagrant vagrant 4096 Mar 21 12:28  ok
-rw-r--r-- 1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------ 2 vagrant vagrant 4096 Mar 21 10:34  .ssh
-rw-r--r-- 1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x 3 vagrant vagrant 4096 Mar 21 12:34  temp2
-rw-rw-r-- 1 vagrant vagrant   66 Mar 22 11:25  test10.sh
-rw-rw-r-- 1 vagrant vagrant  126 Mar 22 11:26  test11.sh
-rw-rw-r-- 1 vagrant vagrant   77 Mar 22 11:48  test12.sh
-rw-rw-r-- 1 vagrant vagrant  222 Mar 22 11:53  test13.sh
-rw-rw-r-- 1 vagrant vagrant   80 Mar 22 12:12  test14.sh
-rw-rw-r-- 1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r-- 1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r-- 1 vagrant vagrant  117 Mar 22 11:15  test7.sh
-rw-rw-r-- 1 vagrant vagrant  156 Mar 22 11:16  test8.sh
-rw-rw-r-- 1 vagrant vagrant   58 Mar 22 11:25  test9.sh
-rw-rw-r-- 1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r-- 1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw------- 1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ umask
0002
vagrant@k8s:~$ umask -s
-bash: umask: -s: invalid option
umask: usage: umask [-p] [-S] [mode]
vagrant@k8s:~$ umask -S
u=rwx,g=rwx,o=rx
vagrant@k8s:~$ umask 0077
vagrant@k8s:~$ umask
0077
vagrant@k8s:~$ touch b.txt
vagrant@k8s:~$ mkdir
mkdir: missing operand
Try 'mkdir --help' for more information.
vagrant@k8s:~$ mkdir b
vagrant@k8s:~$ ls -al
total 172
drwxr-xr-x 10 vagrant vagrant 4096 Mar 22 14:15  .
drwxr-xr-x  3 root    root    4096 Mar 20  2021  ..
drwxrwxr-x  2 vagrant vagrant 4096 Mar 22 14:13  a
-rw-rw-r--  1 vagrant vagrant    0 Mar 22 14:12  a.txt
drwx------  2 vagrant vagrant 4096 Mar 22 14:15  b
-rw-------  1 vagrant vagrant 7978 Mar 22 12:29  .bash_history
-rw-r--r--  1 vagrant vagrant  247 Mar 22 12:29  .bash_logout
-rw-r--r--  1 vagrant vagrant 4034 Mar 22 12:27  .bashrc
-rw-r--r--  1 vagrant vagrant 3771 Mar 21 14:04  bashrc_copy
-rw-------  1 vagrant vagrant    0 Mar 22 14:15  b.txt
drwx------  2 vagrant vagrant 4096 Mar 20  2021  .cache
-rw-rw-r--  1 vagrant vagrant  182 Mar 22 11:08  color.sh
-rw-rw-rwx  1 vagrant vagrant    0 Mar 22 10:53  file1
-rw-rw-r--  1 vagrant vagrant    0 Mar 22 10:53  file2
-rw-rw-r--  1 vagrant vagrant  116 Mar 22 10:57  filename.sh
-rw-rw-r--  1 vagrant vagrant  155 Mar 22 10:51  greeting2.sh
-rwxr-xr-x  1 vagrant vagrant  245 Mar 22 10:37  greeting.sh
-rwxrwxr-x  1 vagrant vagrant   31 Mar 21 16:05  hello
-rw-rw-r--  1 vagrant vagrant    0 Mar 21 12:36  hello1
-rw-rw-r--  1 vagrant vagrant  232 Mar 21 15:47  hello.c
-rw-rw-r--  1 vagrant vagrant    0 Mar 21 15:12 'Hello World'
lrwxrwxrwx  1 root    root      10 Mar 21 11:54  host_link -> /etc/hosts
-rw-------  1 vagrant vagrant   20 Mar 21 12:25  .lesshst
drwxrwxr-x  3 vagrant vagrant 4096 Mar 21 14:05  .local
-rw-rw-r--  1 vagrant vagrant   51 Mar 21 15:57  ls_err2
-rw-rw-r--  1 vagrant vagrant   51 Mar 21 15:55  ls_err.txt
-rw-rw-r--  1 vagrant vagrant 1504 Mar 21 15:57  ls_log2
-rw-rw-r--  1 vagrant vagrant 1612 Mar 21 16:02  ls_log3
-rw-rw-r--  1 vagrant vagrant 1330 Mar 21 15:53  ls.txt
drwxrwxr-x  2 vagrant vagrant 4096 Mar 21 15:04  mybin
drwxrwxr-x  2 vagrant vagrant 4096 Mar 21 12:28  ok
-rw-r--r--  1 vagrant vagrant  807 Feb 25  2020  .profile
drwx------  2 vagrant vagrant 4096 Mar 21 10:34  .ssh
-rw-r--r--  1 vagrant vagrant    0 Mar 20  2021  .sudo_as_admin_successful
drwxrwxr-x  3 vagrant vagrant 4096 Mar 21 12:34  temp2
-rw-rw-r--  1 vagrant vagrant   66 Mar 22 11:25  test10.sh
-rw-rw-r--  1 vagrant vagrant  126 Mar 22 11:26  test11.sh
-rw-rw-r--  1 vagrant vagrant   77 Mar 22 11:48  test12.sh
-rw-rw-r--  1 vagrant vagrant  222 Mar 22 11:53  test13.sh
-rw-rw-r--  1 vagrant vagrant   80 Mar 22 12:12  test14.sh
-rw-rw-r--  1 vagrant vagrant   73 Mar 22 11:11  test4.sh
-rw-rw-r--  1 vagrant vagrant   95 Mar 22 11:12  test5.sh
-rw-rw-r--  1 vagrant vagrant   95 Mar 22 11:13  test6.sh
-rw-rw-r--  1 vagrant vagrant  117 Mar 22 11:15  test7.sh
-rw-rw-r--  1 vagrant vagrant  156 Mar 22 11:16  test8.sh
-rw-rw-r--  1 vagrant vagrant   58 Mar 22 11:25  test9.sh
-rw-rw-r--  1 vagrant vagrant 6762 Mar 21 16:12  test.txt
-rw-rw-r--  1 vagrant vagrant  180 Mar 20  2021  .wget-hsts
-rw-------  1 vagrant vagrant   49 Mar 20  2021  .Xauthority
vagrant@k8s:~$ umask 0002
vagrant@k8s:~$ nano .bashrc
vagrant@k8s:~$ source .bashrc
vagrant@k8s:~$ sudo apt remove docker docker-engine docker.io containerd runc
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package docker-engine
vagrant@k8s:~$ ls /var/lib
apt                dpkg       man-db          plymouth      sudo                     ucf              usbutils
cloud              fwupd      misc            polkit-1      systemd                  udisks2          vim
command-not-found  git        NetworkManager  private       tpm                      update-manager
dbus               grub       PackageKit      python        ubuntu-advantage         update-notifier
dhcp               logrotate  pam             shells.state  ubuntu-release-upgrader  upower
vagrant@k8s:~$ sudo rm -rf /var/lib/docker
vagrant@k8s:~$ sudo rm -rf /var/lib/containerd
vagrant@k8s:~$ host
Usage: host [-aCdilrTvVw] [-c class] [-N ndots] [-t type] [-W time]
            [-R number] [-m flag] [-p port] hostname [server]
       -a is equivalent to -v -t ANY
       -A is like -a but omits RRSIG, NSEC, NSEC3
       -c specifies query class for non-IN data
       -C compares SOA records on authoritative nameservers
       -d is equivalent to -v
       -l lists all hosts in a domain, using AXFR
       -m set memory debugging flag (trace|record|usage)
       -N changes the number of dots allowed before root lookup is done
       -p specifies the port on the server to query
       -r disables recursive processing
       -R specifies number of retries for UDP packets
       -s a SERVFAIL response should stop query
       -t specifies the query type
       -T enables TCP/IP mode
       -U enables UDP mode
       -v enables verbose output
       -V print version number and exit
       -w specifies to wait forever for a reply
       -W specifies how long to wait for a reply
       -4 use IPv4 query transport only
       -6 use IPv6 query transport only
vagrant@k8s:~$ whoami
vagrant
vagrant@k8s:~$ username
-bash: username: command not found
vagrant@k8s:~$ hostname
k8s
vagrant@k8s:~$ sudo apt-get update
Hit:1 http://kr.archive.ubuntu.com/ubuntu jammy InRelease
Get:2 http://kr.archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]
Get:3 http://kr.archive.ubuntu.com/ubuntu jammy-backports InRelease [107 kB]
Get:4 http://kr.archive.ubuntu.com/ubuntu jammy-security InRelease [110 kB]
Get:5 http://kr.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [949 kB]
Get:6 http://kr.archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [205 kB]
Get:7 http://kr.archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [684 kB]
Get:8 http://kr.archive.ubuntu.com/ubuntu jammy-updates/restricted Translation-en [107 kB]
Get:9 http://kr.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [893 kB]
Get:10 http://kr.archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [179 kB]
Get:11 http://kr.archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [24.1 kB]
Get:12 http://kr.archive.ubuntu.com/ubuntu jammy-updates/multiverse Translation-en [6,312 B]
Get:13 http://kr.archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [40.7 kB]
Get:14 http://kr.archive.ubuntu.com/ubuntu jammy-backports/main Translation-en [9,800 B]
Get:15 http://kr.archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [19.5 kB]
Get:16 http://kr.archive.ubuntu.com/ubuntu jammy-backports/universe Translation-en [14.0 kB]
Get:17 http://kr.archive.ubuntu.com/ubuntu jammy-security/main amd64 Packages [692 kB]
Get:18 http://kr.archive.ubuntu.com/ubuntu jammy-security/main Translation-en [142 kB]
Get:19 http://kr.archive.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [642 kB]
Get:20 http://kr.archive.ubuntu.com/ubuntu jammy-security/restricted Translation-en [100 kB]
Get:21 http://kr.archive.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [713 kB]
Get:22 http://kr.archive.ubuntu.com/ubuntu jammy-security/universe Translation-en [118 kB]
Get:23 http://kr.archive.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [19.4 kB]
Get:24 http://kr.archive.ubuntu.com/ubuntu jammy-security/multiverse Translation-en [4,068 B]
Fetched 5,896 kB in 8s (749 kB/s)
Reading package lists... Done
vagrant@k8s:~$ sudo apt-get install curl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  libcurl4
The following packages will be upgraded:
  curl libcurl4
2 upgraded, 0 newly installed, 0 to remove and 101 not upgraded.
Need to get 484 kB of archives.
After this operation, 6,144 B of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 http://kr.archive.ubuntu.com/ubuntu jammy-updates/main amd64 curl amd64 7.81.0-1ubuntu1.10 [194 kB]
Get:2 http://kr.archive.ubuntu.com/ubuntu jammy-updates/main amd64 libcurl4 amd64 7.81.0-1ubuntu1.10 [290 kB]
Fetched 484 kB in 3s (180 kB/s)
(Reading database ... 70079 files and directories currently installed.)
Preparing to unpack .../curl_7.81.0-1ubuntu1.10_amd64.deb ...
Unpacking curl (7.81.0-1ubuntu1.10) over (7.81.0-1ubuntu1.6) ...
Preparing to unpack .../libcurl4_7.81.0-1ubuntu1.10_amd64.deb ...
Unpacking libcurl4:amd64 (7.81.0-1ubuntu1.10) over (7.81.0-1ubuntu1.6) ...
Setting up libcurl4:amd64 (7.81.0-1ubuntu1.10) ...
Setting up curl (7.81.0-1ubuntu1.10) ...
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for libc-bin (2.35-0ubuntu3.1) ...
vagrant@k8s:~$ curl https://get.docker.com
#!/bin/sh
set -e
# Docker CE for Linux installation script
#
# See https://docs.docker.com/engine/install/ for the installation steps.
#
# This script is meant for quick & easy install via:
#   $ curl -fsSL https://get.docker.com -o get-docker.sh
#   $ sh get-docker.sh
#
# For test builds (ie. release candidates):
#   $ curl -fsSL https://test.docker.com -o test-docker.sh
#   $ sh test-docker.sh
#
# NOTE: Make sure to verify the contents of the script
#       you downloaded matches the contents of install.sh
#       located at https://github.com/docker/docker-install
#       before executing.
#
# Git commit from https://github.com/docker/docker-install when
# the script was uploaded (Should only be modified by upload job):
SCRIPT_COMMIT_SHA="66474034547a96caa0a25be56051ff8b726a1b28"

# strip "v" prefix if present
VERSION="${VERSION#v}"

# The channel to install from:
#   * nightly
#   * test
#   * stable
#   * edge (deprecated)
DEFAULT_CHANNEL_VALUE="stable"
if [ -z "$CHANNEL" ]; then
        CHANNEL=$DEFAULT_CHANNEL_VALUE
fi

DEFAULT_DOWNLOAD_URL="https://download.docker.com"
if [ -z "$DOWNLOAD_URL" ]; then
        DOWNLOAD_URL=$DEFAULT_DOWNLOAD_URL
fi

DEFAULT_REPO_FILE="docker-ce.repo"
if [ -z "$REPO_FILE" ]; then
        REPO_FILE="$DEFAULT_REPO_FILE"
fi

mirror=''
DRY_RUN=${DRY_RUN:-}
while [ $# -gt 0 ]; do
        case "$1" in
                --mirror)
                        mirror="$2"
                        shift
                        ;;
                --dry-run)
                        DRY_RUN=1
                        ;;
                --*)
                        echo "Illegal option $1"
                        ;;
        esac
        shift $(( $# > 0 ? 1 : 0 ))
done

case "$mirror" in
        Aliyun)
                DOWNLOAD_URL="https://mirrors.aliyun.com/docker-ce"
                ;;
        AzureChinaCloud)
                DOWNLOAD_URL="https://mirror.azure.cn/docker-ce"
                ;;
esac

command_exists() {
        command -v "$@" > /dev/null 2>&1
}

# version_gte checks if the version specified in $VERSION is at least
# the given CalVer (YY.MM) version. returns 0 (success) if $VERSION is either
# unset (=latest) or newer or equal than the specified version. Returns 1 (fail)
# otherwise.
#
# examples:
#
# VERSION=20.10
# version_gte 20.10 // 0 (success)
# version_gte 19.03 // 0 (success)
# version_gte 21.10 // 1 (fail)
version_gte() {
        if [ -z "$VERSION" ]; then
                        return 0
        fi
        eval calver_compare "$VERSION" "$1"
}

# calver_compare compares two CalVer (YY.MM) version strings. returns 0 (success)
# if version A is newer or equal than version B, or 1 (fail) otherwise. Patch
# releases and pre-release (-alpha/-beta) are not taken into account
#
# examples:
#
# calver_compare 20.10 19.03 // 0 (success)
# calver_compare 20.10 20.10 // 0 (success)
# calver_compare 19.03 20.10 // 1 (fail)
calver_compare() (
        set +x

        yy_a="$(echo "$1" | cut -d'.' -f1)"
        yy_b="$(echo "$2" | cut -d'.' -f1)"
        if [ "$yy_a" -lt "$yy_b" ]; then
                return 1
        fi
        if [ "$yy_a" -gt "$yy_b" ]; then
                return 0
        fi
        mm_a="$(echo "$1" | cut -d'.' -f2)"
        mm_b="$(echo "$2" | cut -d'.' -f2)"
        if [ "${mm_a#0}" -lt "${mm_b#0}" ]; then
                return 1
        fi

        return 0
)

is_dry_run() {
        if [ -z "$DRY_RUN" ]; then
                return 1
        else
                return 0
        fi
}

is_wsl() {
        case "$(uname -r)" in
        *microsoft* ) true ;; # WSL 2
        *Microsoft* ) true ;; # WSL 1
        * ) false;;
        esac
}

is_darwin() {
        case "$(uname -s)" in
        *darwin* ) true ;;
        *Darwin* ) true ;;
        * ) false;;
        esac
}

deprecation_notice() {
        distro=$1
        distro_version=$2
        echo
        printf "\033[91;1mDEPRECATION WARNING\033[0m\n"
        printf "    This Linux distribution (\033[1m%s %s\033[0m) reached end-of-life and is no longer supported by this script.\n" "$distro" "$distro_version"
        echo   "    No updates or security fixes will be released for this distribution, and users are recommended"
        echo   "    to upgrade to a currently maintained version of $distro."
        echo
        printf   "Press \033[1mCtrl+C\033[0m now to abort this script, or wait for the installation to continue."
        echo
        sleep 10
}

get_distribution() {
        lsb_dist=""
        # Every system that we officially support has /etc/os-release
        if [ -r /etc/os-release ]; then
                lsb_dist="$(. /etc/os-release && echo "$ID")"
        fi
        # Returning an empty string here should be alright since the
        # case statements don't act unless you provide an actual value
        echo "$lsb_dist"
}

echo_docker_as_nonroot() {
        if is_dry_run; then
                return
        fi
        if command_exists docker && [ -e /var/run/docker.sock ]; then
                (
                        set -x
                        $sh_c 'docker version'
                ) || true
        fi

        # intentionally mixed spaces and tabs here -- tabs are stripped by "<<-EOF", spaces are kept in the output
        echo
        echo "================================================================================"
        echo
        if version_gte "20.10"; then
                echo "To run Docker as a non-privileged user, consider setting up the"
                echo "Docker daemon in rootless mode for your user:"
                echo
                echo "    dockerd-rootless-setuptool.sh install"
                echo
                echo "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode."
                echo
        fi
        echo
        echo "To run the Docker daemon as a fully privileged service, but granting non-root"
        echo "users access, refer to https://docs.docker.com/go/daemon-access/"
        echo
        echo "WARNING: Access to the remote API on a privileged Docker daemon is equivalent"
        echo "         to root access on the host. Refer to the 'Docker daemon attack surface'"
        echo "         documentation for details: https://docs.docker.com/go/attack-surface/"
        echo
        echo "================================================================================"
        echo
}

# Check if this is a forked Linux distro
check_forked() {

        # Check for lsb_release command existence, it usually exists in forked distros
        if command_exists lsb_release; then
                # Check if the `-u` option is supported
                set +e
                lsb_release -a -u > /dev/null 2>&1
                lsb_release_exit_code=$?
                set -e

                # Check if the command has exited successfully, it means we're in a forked distro
                if [ "$lsb_release_exit_code" = "0" ]; then
                        # Print info about current distro
                        cat <<-EOF
                        You're using '$lsb_dist' version '$dist_version'.
                        EOF

                        # Get the upstream release info
                        lsb_dist=$(lsb_release -a -u 2>&1 | tr '[:upper:]' '[:lower:]' | grep -E 'id' | cut -d ':' -f 2| tr -d '[:space:]')
                        dist_version=$(lsb_release -a -u 2>&1 | tr '[:upper:]' '[:lower:]' | grep -E 'codename' | cut -d ':' -f 2 | tr -d '[:space:]')

                        # Print info about upstream distro
                        cat <<-EOF
                        Upstream release is '$lsb_dist' version '$dist_version'.
                        EOF
                else
                        if [ -r /etc/debian_version ] && [ "$lsb_dist" != "ubuntu" ] && [ "$lsb_dist" != "raspbian" ]; then
                                if [ "$lsb_dist" = "osmc" ]; then
                                        # OSMC runs Raspbian
                                        lsb_dist=raspbian
                                else
                                        # We're Debian and don't even know it!
                                        lsb_dist=debian
                                fi
                                dist_version="$(sed 's/\/.*//' /etc/debian_version | sed 's/\..*//')"
                                case "$dist_version" in
                                        11)
                                                dist_version="bullseye"
                                        ;;
                                        10)
                                                dist_version="buster"
                                        ;;
                                        9)
                                                dist_version="stretch"
                                        ;;
                                        8)
                                                dist_version="jessie"
                                        ;;
                                esac
                        fi
                fi
        fi
}

do_install() {
        echo "# Executing docker install script, commit: $SCRIPT_COMMIT_SHA"

        if command_exists docker; then
                cat >&2 <<-'EOF'
                        Warning: the "docker" command appears to already exist on this system.

                        If you already have Docker installed, this script can cause trouble, which is
                        why we're displaying this warning and provide the opportunity to cancel the
                        installation.

                        If you installed the current Docker package using this script and are using it
                        again to update Docker, you can safely ignore this message.

                        You may press Ctrl+C now to abort this script.
                EOF
                ( set -x; sleep 20 )
        fi

        user="$(id -un 2>/dev/null || true)"

        sh_c='sh -c'
        if [ "$user" != 'root' ]; then
                if command_exists sudo; then
                        sh_c='sudo -E sh -c'
                elif command_exists su; then
                        sh_c='su -c'
                else
                        cat >&2 <<-'EOF'
                        Error: this installer needs the ability to run commands as root.
                        We are unable to find either "sudo" or "su" available to make this happen.
                        EOF
                        exit 1
                fi
        fi

        if is_dry_run; then
                sh_c="echo"
        fi

        # perform some very rudimentary platform detection
        lsb_dist=$( get_distribution )
        lsb_dist="$(echo "$lsb_dist" | tr '[:upper:]' '[:lower:]')"

        if is_wsl; then
                echo
                echo "WSL DETECTED: We recommend using Docker Desktop for Windows."
                echo "Please get Docker Desktop from https://www.docker.com/products/docker-desktop"
                echo
                cat >&2 <<-'EOF'

                        You may press Ctrl+C now to abort this script.
                EOF
                ( set -x; sleep 20 )
        fi

        case "$lsb_dist" in

                ubuntu)
                        if command_exists lsb_release; then
                                dist_version="$(lsb_release --codename | cut -f2)"
                        fi
                        if [ -z "$dist_version" ] && [ -r /etc/lsb-release ]; then
                                dist_version="$(. /etc/lsb-release && echo "$DISTRIB_CODENAME")"
                        fi
                ;;

                debian|raspbian)
                        dist_version="$(sed 's/\/.*//' /etc/debian_version | sed 's/\..*//')"
                        case "$dist_version" in
                                11)
                                        dist_version="bullseye"
                                ;;
                                10)
                                        dist_version="buster"
                                ;;
                                9)
                                        dist_version="stretch"
                                ;;
                                8)
                                        dist_version="jessie"
                                ;;
                        esac
                ;;

                centos|rhel|sles)
                        if [ -z "$dist_version" ] && [ -r /etc/os-release ]; then
                                dist_version="$(. /etc/os-release && echo "$VERSION_ID")"
                        fi
                ;;

                *)
                        if command_exists lsb_release; then
                                dist_version="$(lsb_release --release | cut -f2)"
                        fi
                        if [ -z "$dist_version" ] && [ -r /etc/os-release ]; then
                                dist_version="$(. /etc/os-release && echo "$VERSION_ID")"
                        fi
                ;;

        esac

        # Check if this is a forked Linux distro
        check_forked

        # Print deprecation warnings for distro versions that recently reached EOL,
        # but may still be commonly used (especially LTS versions).
        case "$lsb_dist.$dist_version" in
                debian.stretch|debian.jessie)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                raspbian.stretch|raspbian.jessie)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                ubuntu.xenial|ubuntu.trusty)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                fedora.*)
                        if [ "$dist_version" -lt 33 ]; then
                                deprecation_notice "$lsb_dist" "$dist_version"
                        fi
                        ;;
        esac

        # Run setup for each distro accordingly
        case "$lsb_dist" in
                ubuntu|debian|raspbian)
                        pre_reqs="apt-transport-https ca-certificates curl"
                        if ! command -v gpg > /dev/null; then
                                pre_reqs="$pre_reqs gnupg"
                        fi
                        apt_repo="deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] $DOWNLOAD_URL/linux/$lsb_dist $dist_version $CHANNEL"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c 'apt-get update -qq >/dev/null'
                                $sh_c "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $pre_reqs >/dev/null"
                                $sh_c 'mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings'
                                $sh_c "curl -fsSL \"$DOWNLOAD_URL/linux/$lsb_dist/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg"
                                $sh_c "chmod a+r /etc/apt/keyrings/docker.gpg"
                                $sh_c "echo \"$apt_repo\" > /etc/apt/sources.list.d/docker.list"
                                $sh_c 'apt-get update -qq >/dev/null'
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        # Will work for incomplete versions IE (17.12), but may not actually grab the "latest" if in the test channel
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/~ce~.*/g" | sed "s/-/.*/g")"
                                        search_command="apt-cache madison 'docker-ce' | grep '$pkg_pattern' | head -1 |awk '{\$1=\$1};1' | cut -d' ' -f 3"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst apt-cache madison results"
                                                echo
                                                exit 1
                                        fi
                                        if version_gte "18.09"; then
                                                        search_command="apt-cache madison 'docker-ce-cli' | grep '$pkg_pattern' | head -1 | awk '{\$1=\$1};1' | cut -d' ' -f 3"
                                                        echo "INFO: $search_command"
                                                        cli_pkg_version="=$($sh_c "$search_command")"
                                        fi
                                        pkg_version="=$pkg_version"
                                fi
                        fi
                        (
                                pkgs="docker-ce${pkg_version%=}"
                                if version_gte "18.09"; then
                                                # older versions didn't ship the cli and containerd as separate packages
                                                pkgs="$pkgs docker-ce-cli${cli_pkg_version%=} containerd.io"
                                fi
                                if version_gte "20.10" && [ "$(uname -m)" = "x86_64" ]; then
                                                # also install the latest version of the "docker scan" cli-plugin (onlysupported on x86 currently)
                                                pkgs="$pkgs docker-scan-plugin"
                                fi
                                if version_gte "20.10"; then
                                                pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $pkgs >/dev/null"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                centos|fedora|rhel)
                        if [ "$(uname -m)" != "s390x" ] && [ "$lsb_dist" = "rhel" ]; then
                                echo "Packages for RHEL are currently only available for s390x."
                                exit 1
                        fi
                        if [ "$lsb_dist" = "fedora" ]; then
                                pkg_manager="dnf"
                                config_manager="dnf config-manager"
                                enable_channel_flag="--set-enabled"
                                disable_channel_flag="--set-disabled"
                                pre_reqs="dnf-plugins-core"
                                pkg_suffix="fc$dist_version"
                        else
                                pkg_manager="yum"
                                config_manager="yum-config-manager"
                                enable_channel_flag="--enable"
                                disable_channel_flag="--disable"
                                pre_reqs="yum-utils"
                                pkg_suffix="el"
                        fi
                        repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "$pkg_manager install -y -q $pre_reqs"
                                $sh_c "$config_manager --add-repo $repo_file_url"

                                if [ "$CHANNEL" != "stable" ]; then
                                        $sh_c "$config_manager $disable_channel_flag docker-ce-*"
                                        $sh_c "$config_manager $enable_channel_flag docker-ce-$CHANNEL"
                                fi
                                $sh_c "$pkg_manager makecache"
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/\\\\.ce.*/g" | sed "s/-/.*/g").*$pkg_suffix"
                                        search_command="$pkg_manager list --showduplicates 'docker-ce' | grep '$pkg_pattern' | tail -1 | awk '{print \$2}'"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst $pkg_manager list results"
                                                echo
                                                exit 1
                                        fi
                                        if version_gte "18.09"; then
                                                # older versions don't support a cli package
                                                search_command="$pkg_manager list --showduplicates 'docker-ce-cli' | grep '$pkg_pattern' | tail -1 | awk '{print \$2}'"
                                                cli_pkg_version="$($sh_c "$search_command" | cut -d':' -f 2)"
                                        fi
                                        # Cut out the epoch and prefix with a '-'
                                        pkg_version="-$(echo "$pkg_version" | cut -d':' -f 2)"
                                fi
                        fi
                        (
                                pkgs="docker-ce$pkg_version"
                                if version_gte "18.09"; then
                                        # older versions didn't ship the cli and containerd as separate packages
                                        if [ -n "$cli_pkg_version" ]; then
                                                pkgs="$pkgs docker-ce-cli-$cli_pkg_version containerd.io"
                                        else
                                                pkgs="$pkgs docker-ce-cli containerd.io"
                                        fi
                                fi
                                if version_gte "20.10" && [ "$(uname -m)" = "x86_64" ]; then
                                                # also install the latest version of the "docker scan" cli-plugin (onlysupported on x86 currently)
                                                pkgs="$pkgs docker-scan-plugin"
                                fi
                                if version_gte "20.10"; then
                                        pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "$pkg_manager install -y -q $pkgs"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                sles)
                        if [ "$(uname -m)" != "s390x" ]; then
                                echo "Packages for SLES are currently only available for s390x"
                                exit 1
                        fi
                        if [ "$dist_version" = "15.3" ]; then
                                sles_version="SLE_15_SP3"
                        else
                                sles_minor_version="${dist_version##*.}"
                                sles_version="15.$sles_minor_version"
                        fi
                        opensuse_repo="https://download.opensuse.org/repositories/security:SELinux/$sles_version/security:SELinux.repo"
                        repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
                        pre_reqs="ca-certificates curl libseccomp2 awk"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "zypper install -y $pre_reqs"
                                $sh_c "zypper addrepo $repo_file_url"
                                if ! is_dry_run; then
                                                cat >&2 <<-'EOF'
                                                WARNING!!
                                                openSUSE repository (https://download.opensuse.org/repositories/security:SELinux) will be enabled now.
                                                Do you wish to continue?
                                                You may press Ctrl+C now to abort this script.
                                                EOF
                                                ( set -x; sleep 30 )
                                fi
                                $sh_c "zypper addrepo $opensuse_repo"
                                $sh_c "zypper --gpg-auto-import-keys refresh"
                                $sh_c "zypper lr -d"
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/\\\\.ce.*/g" | sed "s/-/.*/g")"
                                        search_command="zypper search -s --match-exact 'docker-ce' | grep '$pkg_pattern' | tail -1 | awk '{print \$6}'"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst zypper list results"
                                                echo
                                                exit 1
                                        fi
                                        search_command="zypper search -s --match-exact 'docker-ce-cli' | grep '$pkg_pattern' | tail -1 | awk '{print \$6}'"
                                        # It's okay for cli_pkg_version to be blank, since older versions don't supporta cli package
                                        cli_pkg_version="$($sh_c "$search_command")"
                                        pkg_version="-$pkg_version"
                                fi
                        fi
                        (
                                pkgs="docker-ce$pkg_version"
                                if version_gte "18.09"; then
                                        if [ -n "$cli_pkg_version" ]; then
                                                # older versions didn't ship the cli and containerd as separate packages
                                                pkgs="$pkgs docker-ce-cli-$cli_pkg_version containerd.io"
                                        else
                                                pkgs="$pkgs docker-ce-cli containerd.io"
                                        fi
                                fi
                                if version_gte "20.10"; then
                                        pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "zypper -q install -y $pkgs"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                *)
                        if [ -z "$lsb_dist" ]; then
                                if is_darwin; then
                                        echo
                                        echo "ERROR: Unsupported operating system 'macOS'"
                                        echo "Please get Docker Desktop from https://www.docker.com/products/docker-desktop"
                                        echo
                                        exit 1
                                fi
                        fi
                        echo
                        echo "ERROR: Unsupported distribution '$lsb_dist'"
                        echo
                        exit 1
                        ;;
        esac
        exit 1
}

# wrapped up in a function so that we have some protection against only getting
# half the file during "curl | sh"
do_install
vagrant@k8s:~$ curl https://get.docker.com > docker-install.sh
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 18906  100 18906    0     0   266k      0 --:--:-- --:--:-- --:--:--  267k
vagrant@k8s:~$ cat docker-install.sh
#!/bin/sh
set -e
# Docker CE for Linux installation script
#
# See https://docs.docker.com/engine/install/ for the installation steps.
#
# This script is meant for quick & easy install via:
#   $ curl -fsSL https://get.docker.com -o get-docker.sh
#   $ sh get-docker.sh
#
# For test builds (ie. release candidates):
#   $ curl -fsSL https://test.docker.com -o test-docker.sh
#   $ sh test-docker.sh
#
# NOTE: Make sure to verify the contents of the script
#       you downloaded matches the contents of install.sh
#       located at https://github.com/docker/docker-install
#       before executing.
#
# Git commit from https://github.com/docker/docker-install when
# the script was uploaded (Should only be modified by upload job):
SCRIPT_COMMIT_SHA="66474034547a96caa0a25be56051ff8b726a1b28"

# strip "v" prefix if present
VERSION="${VERSION#v}"

# The channel to install from:
#   * nightly
#   * test
#   * stable
#   * edge (deprecated)
DEFAULT_CHANNEL_VALUE="stable"
if [ -z "$CHANNEL" ]; then
        CHANNEL=$DEFAULT_CHANNEL_VALUE
fi

DEFAULT_DOWNLOAD_URL="https://download.docker.com"
if [ -z "$DOWNLOAD_URL" ]; then
        DOWNLOAD_URL=$DEFAULT_DOWNLOAD_URL
fi

DEFAULT_REPO_FILE="docker-ce.repo"
if [ -z "$REPO_FILE" ]; then
        REPO_FILE="$DEFAULT_REPO_FILE"
fi

mirror=''
DRY_RUN=${DRY_RUN:-}
while [ $# -gt 0 ]; do
        case "$1" in
                --mirror)
                        mirror="$2"
                        shift
                        ;;
                --dry-run)
                        DRY_RUN=1
                        ;;
                --*)
                        echo "Illegal option $1"
                        ;;
        esac
        shift $(( $# > 0 ? 1 : 0 ))
done

case "$mirror" in
        Aliyun)
                DOWNLOAD_URL="https://mirrors.aliyun.com/docker-ce"
                ;;
        AzureChinaCloud)
                DOWNLOAD_URL="https://mirror.azure.cn/docker-ce"
                ;;
esac

command_exists() {
        command -v "$@" > /dev/null 2>&1
}

# version_gte checks if the version specified in $VERSION is at least
# the given CalVer (YY.MM) version. returns 0 (success) if $VERSION is either
# unset (=latest) or newer or equal than the specified version. Returns 1 (fail)
# otherwise.
#
# examples:
#
# VERSION=20.10
# version_gte 20.10 // 0 (success)
# version_gte 19.03 // 0 (success)
# version_gte 21.10 // 1 (fail)
version_gte() {
        if [ -z "$VERSION" ]; then
                        return 0
        fi
        eval calver_compare "$VERSION" "$1"
}

# calver_compare compares two CalVer (YY.MM) version strings. returns 0 (success)
# if version A is newer or equal than version B, or 1 (fail) otherwise. Patch
# releases and pre-release (-alpha/-beta) are not taken into account
#
# examples:
#
# calver_compare 20.10 19.03 // 0 (success)
# calver_compare 20.10 20.10 // 0 (success)
# calver_compare 19.03 20.10 // 1 (fail)
calver_compare() (
        set +x

        yy_a="$(echo "$1" | cut -d'.' -f1)"
        yy_b="$(echo "$2" | cut -d'.' -f1)"
        if [ "$yy_a" -lt "$yy_b" ]; then
                return 1
        fi
        if [ "$yy_a" -gt "$yy_b" ]; then
                return 0
        fi
        mm_a="$(echo "$1" | cut -d'.' -f2)"
        mm_b="$(echo "$2" | cut -d'.' -f2)"
        if [ "${mm_a#0}" -lt "${mm_b#0}" ]; then
                return 1
        fi

        return 0
)

is_dry_run() {
        if [ -z "$DRY_RUN" ]; then
                return 1
        else
                return 0
        fi
}

is_wsl() {
        case "$(uname -r)" in
        *microsoft* ) true ;; # WSL 2
        *Microsoft* ) true ;; # WSL 1
        * ) false;;
        esac
}

is_darwin() {
        case "$(uname -s)" in
        *darwin* ) true ;;
        *Darwin* ) true ;;
        * ) false;;
        esac
}

deprecation_notice() {
        distro=$1
        distro_version=$2
        echo
        printf "\033[91;1mDEPRECATION WARNING\033[0m\n"
        printf "    This Linux distribution (\033[1m%s %s\033[0m) reached end-of-life and is no longer supported by this script.\n" "$distro" "$distro_version"
        echo   "    No updates or security fixes will be released for this distribution, and users are recommended"
        echo   "    to upgrade to a currently maintained version of $distro."
        echo
        printf   "Press \033[1mCtrl+C\033[0m now to abort this script, or wait for the installation to continue."
        echo
        sleep 10
}

get_distribution() {
        lsb_dist=""
        # Every system that we officially support has /etc/os-release
        if [ -r /etc/os-release ]; then
                lsb_dist="$(. /etc/os-release && echo "$ID")"
        fi
        # Returning an empty string here should be alright since the
        # case statements don't act unless you provide an actual value
        echo "$lsb_dist"
}

echo_docker_as_nonroot() {
        if is_dry_run; then
                return
        fi
        if command_exists docker && [ -e /var/run/docker.sock ]; then
                (
                        set -x
                        $sh_c 'docker version'
                ) || true
        fi

        # intentionally mixed spaces and tabs here -- tabs are stripped by "<<-EOF", spaces are kept in the output
        echo
        echo "================================================================================"
        echo
        if version_gte "20.10"; then
                echo "To run Docker as a non-privileged user, consider setting up the"
                echo "Docker daemon in rootless mode for your user:"
                echo
                echo "    dockerd-rootless-setuptool.sh install"
                echo
                echo "Visit https://docs.docker.com/go/rootless/ to learn about rootless mode."
                echo
        fi
        echo
        echo "To run the Docker daemon as a fully privileged service, but granting non-root"
        echo "users access, refer to https://docs.docker.com/go/daemon-access/"
        echo
        echo "WARNING: Access to the remote API on a privileged Docker daemon is equivalent"
        echo "         to root access on the host. Refer to the 'Docker daemon attack surface'"
        echo "         documentation for details: https://docs.docker.com/go/attack-surface/"
        echo
        echo "================================================================================"
        echo
}

# Check if this is a forked Linux distro
check_forked() {

        # Check for lsb_release command existence, it usually exists in forked distros
        if command_exists lsb_release; then
                # Check if the `-u` option is supported
                set +e
                lsb_release -a -u > /dev/null 2>&1
                lsb_release_exit_code=$?
                set -e

                # Check if the command has exited successfully, it means we're in a forked distro
                if [ "$lsb_release_exit_code" = "0" ]; then
                        # Print info about current distro
                        cat <<-EOF
                        You're using '$lsb_dist' version '$dist_version'.
                        EOF

                        # Get the upstream release info
                        lsb_dist=$(lsb_release -a -u 2>&1 | tr '[:upper:]' '[:lower:]' | grep -E 'id' | cut -d ':' -f 2| tr -d '[:space:]')
                        dist_version=$(lsb_release -a -u 2>&1 | tr '[:upper:]' '[:lower:]' | grep -E 'codename' | cut -d ':' -f 2 | tr -d '[:space:]')

                        # Print info about upstream distro
                        cat <<-EOF
                        Upstream release is '$lsb_dist' version '$dist_version'.
                        EOF
                else
                        if [ -r /etc/debian_version ] && [ "$lsb_dist" != "ubuntu" ] && [ "$lsb_dist" != "raspbian" ]; then
                                if [ "$lsb_dist" = "osmc" ]; then
                                        # OSMC runs Raspbian
                                        lsb_dist=raspbian
                                else
                                        # We're Debian and don't even know it!
                                        lsb_dist=debian
                                fi
                                dist_version="$(sed 's/\/.*//' /etc/debian_version | sed 's/\..*//')"
                                case "$dist_version" in
                                        11)
                                                dist_version="bullseye"
                                        ;;
                                        10)
                                                dist_version="buster"
                                        ;;
                                        9)
                                                dist_version="stretch"
                                        ;;
                                        8)
                                                dist_version="jessie"
                                        ;;
                                esac
                        fi
                fi
        fi
}

do_install() {
        echo "# Executing docker install script, commit: $SCRIPT_COMMIT_SHA"

        if command_exists docker; then
                cat >&2 <<-'EOF'
                        Warning: the "docker" command appears to already exist on this system.

                        If you already have Docker installed, this script can cause trouble, which is
                        why we're displaying this warning and provide the opportunity to cancel the
                        installation.

                        If you installed the current Docker package using this script and are using it
                        again to update Docker, you can safely ignore this message.

                        You may press Ctrl+C now to abort this script.
                EOF
                ( set -x; sleep 20 )
        fi

        user="$(id -un 2>/dev/null || true)"

        sh_c='sh -c'
        if [ "$user" != 'root' ]; then
                if command_exists sudo; then
                        sh_c='sudo -E sh -c'
                elif command_exists su; then
                        sh_c='su -c'
                else
                        cat >&2 <<-'EOF'
                        Error: this installer needs the ability to run commands as root.
                        We are unable to find either "sudo" or "su" available to make this happen.
                        EOF
                        exit 1
                fi
        fi

        if is_dry_run; then
                sh_c="echo"
        fi

        # perform some very rudimentary platform detection
        lsb_dist=$( get_distribution )
        lsb_dist="$(echo "$lsb_dist" | tr '[:upper:]' '[:lower:]')"

        if is_wsl; then
                echo
                echo "WSL DETECTED: We recommend using Docker Desktop for Windows."
                echo "Please get Docker Desktop from https://www.docker.com/products/docker-desktop"
                echo
                cat >&2 <<-'EOF'

                        You may press Ctrl+C now to abort this script.
                EOF
                ( set -x; sleep 20 )
        fi

        case "$lsb_dist" in

                ubuntu)
                        if command_exists lsb_release; then
                                dist_version="$(lsb_release --codename | cut -f2)"
                        fi
                        if [ -z "$dist_version" ] && [ -r /etc/lsb-release ]; then
                                dist_version="$(. /etc/lsb-release && echo "$DISTRIB_CODENAME")"
                        fi
                ;;

                debian|raspbian)
                        dist_version="$(sed 's/\/.*//' /etc/debian_version | sed 's/\..*//')"
                        case "$dist_version" in
                                11)
                                        dist_version="bullseye"
                                ;;
                                10)
                                        dist_version="buster"
                                ;;
                                9)
                                        dist_version="stretch"
                                ;;
                                8)
                                        dist_version="jessie"
                                ;;
                        esac
                ;;

                centos|rhel|sles)
                        if [ -z "$dist_version" ] && [ -r /etc/os-release ]; then
                                dist_version="$(. /etc/os-release && echo "$VERSION_ID")"
                        fi
                ;;

                *)
                        if command_exists lsb_release; then
                                dist_version="$(lsb_release --release | cut -f2)"
                        fi
                        if [ -z "$dist_version" ] && [ -r /etc/os-release ]; then
                                dist_version="$(. /etc/os-release && echo "$VERSION_ID")"
                        fi
                ;;

        esac

        # Check if this is a forked Linux distro
        check_forked

        # Print deprecation warnings for distro versions that recently reached EOL,
        # but may still be commonly used (especially LTS versions).
        case "$lsb_dist.$dist_version" in
                debian.stretch|debian.jessie)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                raspbian.stretch|raspbian.jessie)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                ubuntu.xenial|ubuntu.trusty)
                        deprecation_notice "$lsb_dist" "$dist_version"
                        ;;
                fedora.*)
                        if [ "$dist_version" -lt 33 ]; then
                                deprecation_notice "$lsb_dist" "$dist_version"
                        fi
                        ;;
        esac

        # Run setup for each distro accordingly
        case "$lsb_dist" in
                ubuntu|debian|raspbian)
                        pre_reqs="apt-transport-https ca-certificates curl"
                        if ! command -v gpg > /dev/null; then
                                pre_reqs="$pre_reqs gnupg"
                        fi
                        apt_repo="deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] $DOWNLOAD_URL/linux/$lsb_dist $dist_version $CHANNEL"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c 'apt-get update -qq >/dev/null'
                                $sh_c "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $pre_reqs >/dev/null"
                                $sh_c 'mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings'
                                $sh_c "curl -fsSL \"$DOWNLOAD_URL/linux/$lsb_dist/gpg\" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg"
                                $sh_c "chmod a+r /etc/apt/keyrings/docker.gpg"
                                $sh_c "echo \"$apt_repo\" > /etc/apt/sources.list.d/docker.list"
                                $sh_c 'apt-get update -qq >/dev/null'
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        # Will work for incomplete versions IE (17.12), but may not actually grab the "latest" if in the test channel
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/~ce~.*/g" | sed "s/-/.*/g")"
                                        search_command="apt-cache madison 'docker-ce' | grep '$pkg_pattern' | head -1 |awk '{\$1=\$1};1' | cut -d' ' -f 3"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst apt-cache madison results"
                                                echo
                                                exit 1
                                        fi
                                        if version_gte "18.09"; then
                                                        search_command="apt-cache madison 'docker-ce-cli' | grep '$pkg_pattern' | head -1 | awk '{\$1=\$1};1' | cut -d' ' -f 3"
                                                        echo "INFO: $search_command"
                                                        cli_pkg_version="=$($sh_c "$search_command")"
                                        fi
                                        pkg_version="=$pkg_version"
                                fi
                        fi
                        (
                                pkgs="docker-ce${pkg_version%=}"
                                if version_gte "18.09"; then
                                                # older versions didn't ship the cli and containerd as separate packages
                                                pkgs="$pkgs docker-ce-cli${cli_pkg_version%=} containerd.io"
                                fi
                                if version_gte "20.10" && [ "$(uname -m)" = "x86_64" ]; then
                                                # also install the latest version of the "docker scan" cli-plugin (onlysupported on x86 currently)
                                                pkgs="$pkgs docker-scan-plugin"
                                fi
                                if version_gte "20.10"; then
                                                pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $pkgs >/dev/null"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                centos|fedora|rhel)
                        if [ "$(uname -m)" != "s390x" ] && [ "$lsb_dist" = "rhel" ]; then
                                echo "Packages for RHEL are currently only available for s390x."
                                exit 1
                        fi
                        if [ "$lsb_dist" = "fedora" ]; then
                                pkg_manager="dnf"
                                config_manager="dnf config-manager"
                                enable_channel_flag="--set-enabled"
                                disable_channel_flag="--set-disabled"
                                pre_reqs="dnf-plugins-core"
                                pkg_suffix="fc$dist_version"
                        else
                                pkg_manager="yum"
                                config_manager="yum-config-manager"
                                enable_channel_flag="--enable"
                                disable_channel_flag="--disable"
                                pre_reqs="yum-utils"
                                pkg_suffix="el"
                        fi
                        repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "$pkg_manager install -y -q $pre_reqs"
                                $sh_c "$config_manager --add-repo $repo_file_url"

                                if [ "$CHANNEL" != "stable" ]; then
                                        $sh_c "$config_manager $disable_channel_flag docker-ce-*"
                                        $sh_c "$config_manager $enable_channel_flag docker-ce-$CHANNEL"
                                fi
                                $sh_c "$pkg_manager makecache"
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/\\\\.ce.*/g" | sed "s/-/.*/g").*$pkg_suffix"
                                        search_command="$pkg_manager list --showduplicates 'docker-ce' | grep '$pkg_pattern' | tail -1 | awk '{print \$2}'"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst $pkg_manager list results"
                                                echo
                                                exit 1
                                        fi
                                        if version_gte "18.09"; then
                                                # older versions don't support a cli package
                                                search_command="$pkg_manager list --showduplicates 'docker-ce-cli' | grep '$pkg_pattern' | tail -1 | awk '{print \$2}'"
                                                cli_pkg_version="$($sh_c "$search_command" | cut -d':' -f 2)"
                                        fi
                                        # Cut out the epoch and prefix with a '-'
                                        pkg_version="-$(echo "$pkg_version" | cut -d':' -f 2)"
                                fi
                        fi
                        (
                                pkgs="docker-ce$pkg_version"
                                if version_gte "18.09"; then
                                        # older versions didn't ship the cli and containerd as separate packages
                                        if [ -n "$cli_pkg_version" ]; then
                                                pkgs="$pkgs docker-ce-cli-$cli_pkg_version containerd.io"
                                        else
                                                pkgs="$pkgs docker-ce-cli containerd.io"
                                        fi
                                fi
                                if version_gte "20.10" && [ "$(uname -m)" = "x86_64" ]; then
                                                # also install the latest version of the "docker scan" cli-plugin (onlysupported on x86 currently)
                                                pkgs="$pkgs docker-scan-plugin"
                                fi
                                if version_gte "20.10"; then
                                        pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "$pkg_manager install -y -q $pkgs"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                sles)
                        if [ "$(uname -m)" != "s390x" ]; then
                                echo "Packages for SLES are currently only available for s390x"
                                exit 1
                        fi
                        if [ "$dist_version" = "15.3" ]; then
                                sles_version="SLE_15_SP3"
                        else
                                sles_minor_version="${dist_version##*.}"
                                sles_version="15.$sles_minor_version"
                        fi
                        opensuse_repo="https://download.opensuse.org/repositories/security:SELinux/$sles_version/security:SELinux.repo"
                        repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
                        pre_reqs="ca-certificates curl libseccomp2 awk"
                        (
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "zypper install -y $pre_reqs"
                                $sh_c "zypper addrepo $repo_file_url"
                                if ! is_dry_run; then
                                                cat >&2 <<-'EOF'
                                                WARNING!!
                                                openSUSE repository (https://download.opensuse.org/repositories/security:SELinux) will be enabled now.
                                                Do you wish to continue?
                                                You may press Ctrl+C now to abort this script.
                                                EOF
                                                ( set -x; sleep 30 )
                                fi
                                $sh_c "zypper addrepo $opensuse_repo"
                                $sh_c "zypper --gpg-auto-import-keys refresh"
                                $sh_c "zypper lr -d"
                        )
                        pkg_version=""
                        if [ -n "$VERSION" ]; then
                                if is_dry_run; then
                                        echo "# WARNING: VERSION pinning is not supported in DRY_RUN"
                                else
                                        pkg_pattern="$(echo "$VERSION" | sed "s/-ce-/\\\\.ce.*/g" | sed "s/-/.*/g")"
                                        search_command="zypper search -s --match-exact 'docker-ce' | grep '$pkg_pattern' | tail -1 | awk '{print \$6}'"
                                        pkg_version="$($sh_c "$search_command")"
                                        echo "INFO: Searching repository for VERSION '$VERSION'"
                                        echo "INFO: $search_command"
                                        if [ -z "$pkg_version" ]; then
                                                echo
                                                echo "ERROR: '$VERSION' not found amongst zypper list results"
                                                echo
                                                exit 1
                                        fi
                                        search_command="zypper search -s --match-exact 'docker-ce-cli' | grep '$pkg_pattern' | tail -1 | awk '{print \$6}'"
                                        # It's okay for cli_pkg_version to be blank, since older versions don't supporta cli package
                                        cli_pkg_version="$($sh_c "$search_command")"
                                        pkg_version="-$pkg_version"
                                fi
                        fi
                        (
                                pkgs="docker-ce$pkg_version"
                                if version_gte "18.09"; then
                                        if [ -n "$cli_pkg_version" ]; then
                                                # older versions didn't ship the cli and containerd as separate packages
                                                pkgs="$pkgs docker-ce-cli-$cli_pkg_version containerd.io"
                                        else
                                                pkgs="$pkgs docker-ce-cli containerd.io"
                                        fi
                                fi
                                if version_gte "20.10"; then
                                        pkgs="$pkgs docker-compose-plugin docker-ce-rootless-extras$pkg_version"
                                fi
                                if version_gte "23.0"; then
                                                pkgs="$pkgs docker-buildx-plugin"
                                fi
                                if ! is_dry_run; then
                                        set -x
                                fi
                                $sh_c "zypper -q install -y $pkgs"
                        )
                        echo_docker_as_nonroot
                        exit 0
                        ;;
                *)
                        if [ -z "$lsb_dist" ]; then
                                if is_darwin; then
                                        echo
                                        echo "ERROR: Unsupported operating system 'macOS'"
                                        echo "Please get Docker Desktop from https://www.docker.com/products/docker-desktop"
                                        echo
                                        exit 1
                                fi
                        fi
                        echo
                        echo "ERROR: Unsupported distribution '$lsb_dist'"
                        echo
                        exit 1
                        ;;
        esac
        exit 1
}

# wrapped up in a function so that we have some protection against only getting
# half the file during "curl | sh"
do_install
vagrant@k8s:~$ chmod 755 docker-install.sh
vagrant@k8s:~$ ls
 a             color.sh            greeting2.sh  'Hello World'   ls_log3   test10.sh   test4.sh   test9.sh
 a.txt         docker-install.sh   greeting.sh    host_link      ls.txt    test11.sh   test5.sh   test.txt
 b             file1               hello          ls_err2        mybin     test12.sh   test6.sh
 bashrc_copy   file2               hello1         ls_err.txt     ok        test13.sh   test7.sh
 b.txt         filename.sh         hello.c        ls_log2        temp2     test14.sh   test8.sh
vagrant@k8s:~$ sudo ./docker-install.sh
# Executing docker install script, commit: 66474034547a96caa0a25be56051ff8b726a1b28
+ sh -c apt-get update -qq >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings
+ sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg
+ sh -c echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list
+ sh -c apt-get update -qq >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-scan-plugin docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null
+ sh -c docker version
Client: Docker Engine - Community
 Version:           23.0.1
 API version:       1.42
 Go version:        go1.19.5
 Git commit:        a5ee5b1
 Built:             Thu Feb  9 19:47:01 2023
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          23.0.1
  API version:      1.42 (minimum version 1.12)
  Go version:       go1.19.5
  Git commit:       bc3805a
  Built:            Thu Feb  9 19:47:01 2023
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.18
  GitCommit:        2456e983eb9e37e47538f59ea18f2043c9a73640
 runc:
  Version:          1.1.4
  GitCommit:        v1.1.4-0-g5fd4c4d
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================

vagrant@k8s:~$ docker --version
Docker version 23.0.1, build a5ee5b1
vagrant@k8s:~$ docker-compose --version
-bash: docker-compose: command not found
vagrant@k8s:~$ sudo docker run -i -t ubuntu:14.04
Unable to find image 'ubuntu:14.04' locally
14.04: Pulling from library/ubuntu
2e6e20c8e2e6: Pull complete
0551a797c01d: Pull complete
512123a864da: Pull complete
Digest: sha256:64483f3496c1373bfd55348e88694d1c4d0c9b660dee6bfef5e12f43b9933b30
Status: Downloaded newer image for ubuntu:14.04
root@3d3b9fe513e4:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:02
          inet addr:172.17.0.2  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@3d3b9fe513e4:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@3d3b9fe513e4:/# hostname
3d3b9fe513e4
root@3d3b9fe513e4:/# exit
exit
vagrant@k8s:~$ sudo docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.10.2)
  compose*    Docker Compose (Docker Inc., v2.16.0)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  scan*       Docker Scan (Docker Inc., v0.23.0)
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/root/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
vagrant@k8s:~$ docker ps
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json": dial unix /var/run/docker.sock: connect: permission denied
vagrant@k8s:~$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS                      PORTS     NAMES
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   5 minutes ago   Exited (0) 55 seconds ago             interesting_williams
vagrant@k8s:~$ sudo docker start interesting_williams
interesting_williams
vagrant@k8s:~$ sudo docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS          PORTS     NAMES
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   8 minutes ago   Up 22 seconds             interesting_williams
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS          PORTS     NAMES
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   8 minutes ago   Up 41 seconds             interesting_williams
vagrant@k8s:~$ sudo docker attach interesting_williams
root@3d3b9fe513e4:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@3d3b9fe513e4:/# read escape sequence
vagrant@k8s:~$ sudo docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS         PORTS     NAMES
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   10 minutes ago   Up 2 minutes             interesting_williams
vagrant@k8s:~$ sudo docker images
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
ubuntu       14.04     13b66b487594   24 months ago   197MB
vagrant@k8s:~$ sudo docker pull centos:7
7: Pulling from library/centos
2d473b07cdd5: Pull complete
Digest: sha256:be65f488b7764ad3638f236b7b515b3678369a5124c47b8d32916d6487418ea4
Status: Downloaded newer image for centos:7
docker.io/library/centos:7
vagrant@k8s:~$ sudo docker images
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
centos       7         eeb6ee3f44bd   18 months ago   204MB
ubuntu       14.04     13b66b487594   24 months ago   197MB
vagrant@k8s:~$ sudo docker create -i -t --name mycentos centos:7
418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   56 seconds ago   Created                   mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   20 minutes ago   Up 12 minutes             interesting_williams
vagrant@k8s:~$ sudo docker start mycentos
mycentos
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED              STATUS          PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   About a minute ago   Up 13 seconds             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   20 minutes ago       Up 12 minutes             interesting_williams
vagrant@k8s:~$ sudo docker attach mycentos
[root@418b9f0b33b7 /]# ls
anaconda-post.log  bin  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
[root@418b9f0b33b7 /]# sudo docker ps
bash: sudo: command not found
[root@418b9f0b33b7 /]# read escape sequence
vagrant@k8s:~$ sudo docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   4 minutes ago    Up 3 minutes              mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   23 minutes ago   Up 15 minutes             interesting_williams
vagrant@k8s:~$ sudo docker attach mycentos
[root@418b9f0b33b7 /]# exit
exit
vagrant@k8s:~$ sudo docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS     NAMES
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   23 minutes ago   Up 16 minutes             interesting_williams
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   5 minutes ago    Exited (127) 25 seconds ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   24 minutes ago   Up 16 minutes                           interesting_williams
vagrant@k8s:~$ sudo docker inspect mycentos | grep Id
        "Id": "418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5",
vagrant@k8s:~$ sudo docker inspect mycentos
[
    {
        "Id": "418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5",
        "Created": "2023-03-22T06:00:25.228127364Z",
        "Path": "/bin/bash",
        "Args": [],
        "State": {
            "Status": "exited",
            "Running": false,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 0,
            "ExitCode": 127,
            "Error": "",
            "StartedAt": "2023-03-22T06:01:41.026032372Z",
            "FinishedAt": "2023-03-22T06:05:19.412586728Z"
        },
        "Image": "sha256:eeb6ee3f44bd0b5103bb561b4c16bcb82328cfe5809ab675bb17ab3a16c517c9",
        "ResolvConfPath": "/var/lib/docker/containers/418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5/hostname",
        "HostsPath": "/var/lib/docker/containers/418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5/hosts",
        "LogPath": "/var/lib/docker/containers/418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5/418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5-json.log",
        "Name": "/mycentos",
        "RestartCount": 0,
        "Driver": "overlay2",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "docker-default",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "ConsoleSize": [
                42,
                120
            ],
            "CapAdd": null,
            "CapDrop": null,
            "CgroupnsMode": "private",
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "private",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": [],
            "BlkioDeviceWriteBps": [],
            "BlkioDeviceReadIOps": [],
            "BlkioDeviceWriteIOps": [],
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DeviceRequests": null,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": null,
            "PidsLimit": null,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/asound",
                "/proc/acpi",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware"
            ],
            "ReadonlyPaths": [
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/abdb455b3cbdddc0fe333845c73796bde4f63ba92d445422f39249d443710d08-init/diff:/var/lib/docker/overlay2/5f815f1418eb84739ab53849fe3eafa033bc5c0525d113506b1aa59fb6b2ba79/diff",
                "MergedDir": "/var/lib/docker/overlay2/abdb455b3cbdddc0fe333845c73796bde4f63ba92d445422f39249d443710d08/merged",
                "UpperDir": "/var/lib/docker/overlay2/abdb455b3cbdddc0fe333845c73796bde4f63ba92d445422f39249d443710d08/diff",
                "WorkDir": "/var/lib/docker/overlay2/abdb455b3cbdddc0fe333845c73796bde4f63ba92d445422f39249d443710d08/work"
            },
            "Name": "overlay2"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "418b9f0b33b7",
            "Domainname": "",
            "User": "",
            "AttachStdin": true,
            "AttachStdout": true,
            "AttachStderr": true,
            "Tty": true,
            "OpenStdin": true,
            "StdinOnce": true,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "centos:7",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "org.label-schema.build-date": "20201113",
                "org.label-schema.license": "GPLv2",
                "org.label-schema.name": "CentOS Base Image",
                "org.label-schema.schema-version": "1.0",
                "org.label-schema.vendor": "CentOS",
                "org.opencontainers.image.created": "2020-11-13 00:00:00+00:00",
                "org.opencontainers.image.licenses": "GPL-2.0-only",
                "org.opencontainers.image.title": "CentOS Base Image",
                "org.opencontainers.image.vendor": "CentOS"
            }
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "9d81f4887c54d308b972c2a6b5330955092a19d6c1b2816acee70a26d8e816eb",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {},
            "SandboxKey": "/var/run/docker/netns/9d81f4887c54",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "",
            "Gateway": "",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "",
            "IPPrefixLen": 0,
            "IPv6Gateway": "",
            "MacAddress": "",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "404f065e90d98a159c6b45c0582bb2caa9bbdf95aed6bc466d42ac1742defb09",
                    "EndpointID": "",
                    "Gateway": "",
                    "IPAddress": "",
                    "IPPrefixLen": 0,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "",
                    "DriverOpts": null
                }
            }
        }
    }
]
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                       PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   9 minutes ago    Exited (127) 4 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   28 minutes ago   Up 21 minutes                          interesting_williams
vagrant@k8s:~$ sudo docker rename interesting_williams myubuntu
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                       PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   10 minutes ago   Exited (127) 5 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   29 minutes ago   Up 21 minutes                          myubuntu
vagrant@k8s:~$ sudo docker create -i -t --name myubuntu2
"docker create" requires at least 1 argument.
See 'docker create --help'.

Usage:  docker create [OPTIONS] IMAGE [COMMAND] [ARG...]

Create a new container
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   27 minutes ago   Exited (127) 22 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   46 minutes ago   Up 39 minutes                           myubuntu
vagrant@k8s:~$ sudo docker create -i -t --name myubuntu2 ubuntu:14.04
550b5e6aad570cd0b7edb16195bebea8a96cd44a6b3fdf39537b0473d2490763
vagrant@k8s:~$ sudo docker start myubuntu2
myubuntu2
vagrant@k8s:~$ sudo docker attach myubuntu2
root@550b5e6aad57:/# exit
exit
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
550b5e6aad57   ubuntu:14.04   "/bin/bash"   40 seconds ago   Exited (0) 4 seconds ago                myubuntu2
418b9f0b33b7   centos:7       "/bin/bash"   28 minutes ago   Exited (127) 23 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   47 minutes ago   Up 39 minutes                           myubuntu
vagrant@k8s:~$ sudo docker rm myubuntu2
myubuntu2
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   29 minutes ago   Exited (127) 25 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   48 minutes ago   Up 41 minutes                           myubuntu
vagrant@k8s:~$ sudo docker rm myubuntu
Error response from daemon: You cannot remove a running container 3d3b9fe513e44ae152097faeb7be690515d0e5f13c260c96cb1739b56d24eaa1. Stop the container before attempting removal or force remove
vagrant@k8s:~$ sudo docker stop myubuntu
myubuntu
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
418b9f0b33b7   centos:7       "/bin/bash"   30 minutes ago   Exited (127) 25 minutes ago             mycentos
3d3b9fe513e4   ubuntu:14.04   "/bin/bash"   49 minutes ago   Exited (0) 4 seconds ago                myubuntu
vagrant@k8s:~$ sudo docker rm myubuntu
myubuntu
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE      COMMAND       CREATED          STATUS                        PORTS     NAMES
418b9f0b33b7   centos:7   "/bin/bash"   31 minutes ago   Exited (127) 26 minutes ago             mycentos
vagrant@k8s:~$ sudo docker create -i -t --name myubuntu1 ubuntu:14.04
a1af3b11386a70572ae6cb1dec5852a6ffe0460ef6df6dd50aebd346abb423de
vagrant@k8s:~$ sudo docker create -i -t --name myubuntu2 ubuntu:14.04
5af2b60447b88db61fce621d7069fdc35ae74c36352c8a4c7bdb5f808fcb35c4
vagrant@k8s:~$ sudo docker create -i -t --name myubuntu3 ubuntu:14.04
974e2aa53cda8a0774139707a898ffc5de9b038c3a64e3dcc8c8121f7fb3b99c
vagrant@k8s:~$ sudo docker start myubuntu2
myubuntu2
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                        PORTS     NAMES
974e2aa53cda   ubuntu:14.04   "/bin/bash"   44 seconds ago   Created                                 myubuntu3
5af2b60447b8   ubuntu:14.04   "/bin/bash"   49 seconds ago   Up 30 seconds                           myubuntu2
a1af3b11386a   ubuntu:14.04   "/bin/bash"   59 seconds ago   Created                                 myubuntu1
418b9f0b33b7   centos:7       "/bin/bash"   33 minutes ago   Exited (127) 28 minutes ago             mycentos
vagrant@k8s:~$ sudo docker rm -f myubuntu2
myubuntu2
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED              STATUS                        PORTS     NAMES
974e2aa53cda   ubuntu:14.04   "/bin/bash"   About a minute ago   Created                                 myubuntu3
a1af3b11386a   ubuntu:14.04   "/bin/bash"   About a minute ago   Created                                 myubuntu1
418b9f0b33b7   centos:7       "/bin/bash"   33 minutes ago       Exited (127) 29 minutes ago             mycentos
vagrant@k8s:~$ sudo docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
974e2aa53cda8a0774139707a898ffc5de9b038c3a64e3dcc8c8121f7fb3b99c
a1af3b11386a70572ae6cb1dec5852a6ffe0460ef6df6dd50aebd346abb423de
418b9f0b33b75ad07c705228b0baec80f0ac2e4a5f00e2f3d63877432c75e3f5

Total reclaimed space: 23B
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
vagrant@k8s:~$ sudo docker run -i -t --name network_test ubuntu:14.04
root@bf862e6385c4:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:02
          inet addr:172.17.0.2  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@bf862e6385c4:/# vagrant@k8s:~$ sudo docker attach network_test
root@bf862e6385c4:/#
root@bf862e6385c4:/# apt-get update
Get:1 http://security.ubuntu.com trusty-security InRelease [56.4 kB]
Ign http://archive.ubuntu.com trusty InRelease
Get:2 http://archive.ubuntu.com trusty-updates InRelease [56.4 kB]
Get:3 https://esm.ubuntu.com trusty-infra-security InRelease
Get:4 https://esm.ubuntu.com trusty-infra-updates InRelease
Get:5 http://security.ubuntu.com trusty-security/main amd64 Packages [1557 kB]
Get:6 https://esm.ubuntu.com trusty-infra-security/main amd64 Packages
Get:7 http://archive.ubuntu.com trusty-backports InRelease [65.9 kB]
Hit http://archive.ubuntu.com trusty Release.gpg
Get:8 http://archive.ubuntu.com trusty-updates/main amd64 Packages [2183 kB]
Get:9 https://esm.ubuntu.com trusty-infra-updates/main amd64 Packages
Get:10 http://security.ubuntu.com trusty-security/restricted amd64 Packages [24.6 kB]
Get:11 http://security.ubuntu.com trusty-security/universe amd64 Packages [529 kB]
Get:12 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [6133 B]
Get:13 http://archive.ubuntu.com trusty-updates/restricted amd64 Packages [28.7 kB]
Get:14 http://archive.ubuntu.com trusty-updates/universe amd64 Packages [931 kB]
Get:15 http://archive.ubuntu.com trusty-updates/multiverse amd64 Packages [21.7 kB]
Get:16 http://archive.ubuntu.com trusty-backports/main amd64 Packages [14.7 kB]
Get:17 http://archive.ubuntu.com trusty-backports/restricted amd64 Packages [40 B]
Get:18 http://archive.ubuntu.com trusty-backports/universe amd64 Packages [52.5 kB]
Get:19 http://archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1392 B]
Hit http://archive.ubuntu.com trusty Release
Get:20 http://archive.ubuntu.com trusty/main amd64 Packages [1743 kB]
Get:21 http://archive.ubuntu.com trusty/restricted amd64 Packages [16.0 kB]
Get:22 http://archive.ubuntu.com trusty/universe amd64 Packages [7589 kB]
Get:23 http://archive.ubuntu.com trusty/multiverse amd64 Packages [169 kB]
Fetched 15.8 MB in 10s (1560 kB/s)
Reading package lists... Done
root@bf862e6385c4:/# apt-get install apache2 -y
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
  libaprutil1-ldap libxml2 sgml-base ssl-cert xml-core
Suggested packages:
  www-browser apache2-doc apache2-suexec-pristine apache2-suexec-custom ufw
  apache2-utils sgml-base-doc openssl-blacklist debhelper
The following NEW packages will be installed:
  apache2 apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
  libaprutil1-ldap libxml2 sgml-base ssl-cert xml-core
0 upgraded, 11 newly installed, 0 to remove and 1 not upgraded.
Need to get 1898 kB of archives.
After this operation, 7526 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libxml2 amd64 2.9.1+dfsg1-3ubuntu4.13 [573 kB]
Get:2 http://archive.ubuntu.com/ubuntu/ trusty/main sgml-base all 1.26+nmu4ubuntu1 [12.5 kB]
Get:3 http://archive.ubuntu.com/ubuntu/ trusty/main libapr1 amd64 1.5.0-1 [85.1 kB]
Get:4 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1 amd64 1.5.3-1 [76.4 kB]
Get:5 http://archive.ubuntu.com/ubuntu/ trusty/main xml-core all 0.13+nmu2 [23.3 kB]
Get:6 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1-dbd-sqlite3 amd64 1.5.3-1 [10.5 kB]
Get:7 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1-ldap amd64 1.5.3-1 [8634 B]
Get:8 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2-bin amd64 2.4.7-1ubuntu4.22 [845 kB]
Get:9 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2-data all 2.4.7-1ubuntu4.22 [160 kB]
Get:10 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2 amd64 2.4.7-1ubuntu4.22 [87.4 kB]
Get:11 http://archive.ubuntu.com/ubuntu/ trusty/main ssl-cert all 1.0.33 [16.6 kB]
Fetched 1898 kB in 5s (349 kB/s)
Preconfiguring packages ...
Selecting previously unselected package libxml2:amd64.
(Reading database ... 12097 files and directories currently installed.)
Preparing to unpack .../libxml2_2.9.1+dfsg1-3ubuntu4.13_amd64.deb ...
Unpacking libxml2:amd64 (2.9.1+dfsg1-3ubuntu4.13) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../sgml-base_1.26+nmu4ubuntu1_all.deb ...
Unpacking sgml-base (1.26+nmu4ubuntu1) ...
Selecting previously unselected package libapr1:amd64.
Preparing to unpack .../libapr1_1.5.0-1_amd64.deb ...
Unpacking libapr1:amd64 (1.5.0-1) ...
Selecting previously unselected package libaprutil1:amd64.
Preparing to unpack .../libaprutil1_1.5.3-1_amd64.deb ...
Unpacking libaprutil1:amd64 (1.5.3-1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../xml-core_0.13+nmu2_all.deb ...
Unpacking xml-core (0.13+nmu2) ...
Selecting previously unselected package libaprutil1-dbd-sqlite3:amd64.
Preparing to unpack .../libaprutil1-dbd-sqlite3_1.5.3-1_amd64.deb ...
Unpacking libaprutil1-dbd-sqlite3:amd64 (1.5.3-1) ...
Selecting previously unselected package libaprutil1-ldap:amd64.
Preparing to unpack .../libaprutil1-ldap_1.5.3-1_amd64.deb ...
Unpacking libaprutil1-ldap:amd64 (1.5.3-1) ...
Selecting previously unselected package apache2-bin.
Preparing to unpack .../apache2-bin_2.4.7-1ubuntu4.22_amd64.deb ...
Unpacking apache2-bin (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package apache2-data.
Preparing to unpack .../apache2-data_2.4.7-1ubuntu4.22_all.deb ...
Unpacking apache2-data (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package apache2.
Preparing to unpack .../apache2_2.4.7-1ubuntu4.22_amd64.deb ...
Unpacking apache2 (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package ssl-cert.
Preparing to unpack .../ssl-cert_1.0.33_all.deb ...
Unpacking ssl-cert (1.0.33) ...
Processing triggers for ureadahead (0.100.0-16) ...
Setting up libxml2:amd64 (2.9.1+dfsg1-3ubuntu4.13) ...
Setting up sgml-base (1.26+nmu4ubuntu1) ...
Setting up libapr1:amd64 (1.5.0-1) ...
Setting up libaprutil1:amd64 (1.5.3-1) ...
Setting up xml-core (0.13+nmu2) ...
Setting up libaprutil1-dbd-sqlite3:amd64 (1.5.3-1) ...
Setting up libaprutil1-ldap:amd64 (1.5.3-1) ...
Setting up apache2-bin (2.4.7-1ubuntu4.22) ...
Setting up apache2-data (2.4.7-1ubuntu4.22) ...
Setting up apache2 (2.4.7-1ubuntu4.22) ...
Enabling module mpm_event.
Enabling module authz_core.
Enabling module authz_host.
Enabling module authn_core.
Enabling module auth_basic.
Enabling module access_compat.
Enabling module authn_file.
Enabling module authz_user.
Enabling module alias.
Enabling module dir.
Enabling module autoindex.
Enabling module env.
Enabling module mime.
Enabling module negotiation.
Enabling module setenvif.
Enabling module filter.
Enabling module deflate.
Enabling module status.
Enabling conf charset.
Enabling conf localized-error-pages.
Enabling conf other-vhosts-access-log.
Enabling conf security.
Enabling conf serve-cgi-bin.
Enabling site 000-default.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up ssl-cert (1.0.33) ...
Processing triggers for libc-bin (2.19-0ubuntu6.15) ...
Processing triggers for sgml-base (1.26+nmu4ubuntu1) ...
Processing triggers for ureadahead (0.100.0-16) ...
root@bf862e6385c4:/# service apache2 start
 * Starting web server apache2AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
 *
root@bf862e6385c4:/# read escape sequence
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS         PORTS     NAMES
bf862e6385c4   ubuntu:14.04   "/bin/bash"   3 minutes ago   Up 3 minutes             network_test
vagrant@k8s:~$ ping 172.17.0.2
PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.
64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.042 ms
64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.040 ms
64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.031 ms
64 bytes from 172.17.0.2: icmp_seq=4 ttl=64 time=0.079 ms
64 bytes from 172.17.0.2: icmp_seq=5 ttl=64 time=0.077 ms
64 bytes from 172.17.0.2: icmp_seq=6 ttl=64 time=0.032 ms
64 bytes from 172.17.0.2: icmp_seq=7 ttl=64 time=0.081 ms
64 bytes from 172.17.0.2: icmp_seq=8 ttl=64 time=0.069 ms
64 bytes from 172.17.0.2: icmp_seq=9 ttl=64 time=0.078 ms
64 bytes from 172.17.0.2: icmp_seq=10 ttl=64 time=0.088 ms
64 bytes from 172.17.0.2: icmp_seq=11 ttl=64 time=0.076 ms
64 bytes from 172.17.0.2: icmp_seq=12 ttl=64 time=0.036 ms
64 bytes from 172.17.0.2: icmp_seq=13 ttl=64 time=0.065 ms
64 bytes from 172.17.0.2: icmp_seq=14 ttl=64 time=0.078 ms
64 bytes from 172.17.0.2: icmp_seq=15 ttl=64 time=0.078 ms
64 bytes from 172.17.0.2: icmp_seq=16 ttl=64 time=0.077 ms
^C
--- 172.17.0.2 ping statistics ---
16 packets transmitted, 16 received, 0% packet loss, time 15341ms
rtt min/avg/max/mdev = 0.031/0.064/0.088/0.019 ms
vagrant@k8s:~$ curl http://172.17.0.2

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <!--
    Modified from the Debian original for Ubuntu
    Last updated: 2014-03-19
    See: https://launchpad.net/bugs/1288690
  -->
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Apache2 Ubuntu Default Page: It works</title>
    <style type="text/css" media="screen">
  * {
    margin: 0px 0px 0px 0px;
    padding: 0px 0px 0px 0px;
  }

  body, html {
    padding: 3px 3px 3px 3px;

    background-color: #D8DBE2;

    font-family: Verdana, sans-serif;
    font-size: 11pt;
    text-align: center;
  }

  div.main_page {
    position: relative;
    display: table;

    width: 800px;

    margin-bottom: 3px;
    margin-left: auto;
    margin-right: auto;
    padding: 0px 0px 0px 0px;

    border-width: 2px;
    border-color: #212738;
    border-style: solid;

    background-color: #FFFFFF;

    text-align: center;
  }

  div.page_header {
    height: 99px;
    width: 100%;

    background-color: #F5F6F7;
  }

  div.page_header span {
    margin: 15px 0px 0px 50px;

    font-size: 180%;
    font-weight: bold;
  }

  div.page_header img {
    margin: 3px 0px 0px 40px;

    border: 0px 0px 0px;
  }

  div.table_of_contents {
    clear: left;

    min-width: 200px;

    margin: 3px 3px 3px 3px;

    background-color: #FFFFFF;

    text-align: left;
  }

  div.table_of_contents_item {
    clear: left;

    width: 100%;

    margin: 4px 0px 0px 0px;

    background-color: #FFFFFF;

    color: #000000;
    text-align: left;
  }

  div.table_of_contents_item a {
    margin: 6px 0px 0px 6px;
  }

  div.content_section {
    margin: 3px 3px 3px 3px;

    background-color: #FFFFFF;

    text-align: left;
  }

  div.content_section_text {
    padding: 4px 8px 4px 8px;

    color: #000000;
    font-size: 100%;
  }

  div.content_section_text pre {
    margin: 8px 0px 8px 0px;
    padding: 8px 8px 8px 8px;

    border-width: 1px;
    border-style: dotted;
    border-color: #000000;

    background-color: #F5F6F7;

    font-style: italic;
  }

  div.content_section_text p {
    margin-bottom: 6px;
  }

  div.content_section_text ul, div.content_section_text li {
    padding: 4px 8px 4px 16px;
  }

  div.section_header {
    padding: 3px 6px 3px 6px;

    background-color: #8E9CB2;

    color: #FFFFFF;
    font-weight: bold;
    font-size: 112%;
    text-align: center;
  }

  div.section_header_red {
    background-color: #CD214F;
  }

  div.section_header_grey {
    background-color: #9F9386;
  }

  .floating_element {
    position: relative;
    float: left;
  }

  div.table_of_contents_item a,
  div.content_section_text a {
    text-decoration: none;
    font-weight: bold;
  }

  div.table_of_contents_item a:link,
  div.table_of_contents_item a:visited,
  div.table_of_contents_item a:active {
    color: #000000;
  }

  div.table_of_contents_item a:hover {
    background-color: #000000;

    color: #FFFFFF;
  }

  div.content_section_text a:link,
  div.content_section_text a:visited,
   div.content_section_text a:active {
    background-color: #DCDFE6;

    color: #000000;
  }

  div.content_section_text a:hover {
    background-color: #000000;

    color: #DCDFE6;
  }

  div.validator {
  }
    </style>
  </head>
  <body>
    <div class="main_page">
      <div class="page_header floating_element">
        <img src="/icons/ubuntu-logo.png" alt="Ubuntu Logo" class="floating_element"/>
        <span class="floating_element">
          Apache2 Ubuntu Default Page
        </span>
      </div>
<!--      <div class="table_of_contents floating_element">
        <div class="section_header section_header_grey">
          TABLE OF CONTENTS
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#about">About</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#changes">Changes</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#scope">Scope</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#files">Config files</a>
        </div>
      </div>
-->
      <div class="content_section floating_element">


        <div class="section_header section_header_red">
          <div id="about"></div>
          It works!
        </div>
        <div class="content_section_text">
          <p>
                This is the default welcome page used to test the correct
                operation of the Apache2 server after installation on Ubuntu systems.
                It is based on the equivalent page on Debian, from which the Ubuntu Apache
                packaging is derived.
                If you can read this page, it means that the Apache HTTP server installed at
                this site is working properly. You should <b>replace this file</b> (located at
                <tt>/var/www/html/index.html</tt>) before continuing to operate your HTTP server.
          </p>


          <p>
                If you are a normal user of this web site and don't know what this page is
                about, this probably means that the site is currently unavailable due to
                maintenance.
                If the problem persists, please contact the site's administrator.
          </p>

        </div>
        <div class="section_header">
          <div id="changes"></div>
                Configuration Overview
        </div>
        <div class="content_section_text">
          <p>
                Ubuntu's Apache2 default configuration is different from the
                upstream default configuration, and split into several files optimized for
                interaction with Ubuntu tools. The configuration system is
                <b>fully documented in
                /usr/share/doc/apache2/README.Debian.gz</b>. Refer to this for the full
                documentation. Documentation for the web server itself can be
                found by accessing the <a href="/manual">manual</a> if the <tt>apache2-doc</tt>
                package was installed on this server.

          </p>
          <p>
                The configuration layout for an Apache2 web server installation on Ubuntu systems is as follows:
          </p>
          <pre>
/etc/apache2/
|-- apache2.conf
|       `--  ports.conf
|-- mods-enabled
|       |-- *.load
|       `-- *.conf
|-- conf-enabled
|       `-- *.conf
|-- sites-enabled
|       `-- *.conf
          </pre>
          <ul>
                        <li>
                           <tt>apache2.conf</tt> is the main configuration
                           file. It puts the pieces together by including all remaining configuration
                           files when starting up the web server.
                        </li>

                        <li>
                           <tt>ports.conf</tt> is always included from the
                           main configuration file. It is used to determine the listening ports for
                           incoming connections, and this file can be customized anytime.
                        </li>

                        <li>
                           Configuration files in the <tt>mods-enabled/</tt>,
                           <tt>conf-enabled/</tt> and <tt>sites-enabled/</tt> directories contain
                           particular configuration snippets which manage modules, global configuration
                           fragments, or virtual host configurations, respectively.
                        </li>

                        <li>
                           They are activated by symlinking available
                           configuration files from their respective
                           *-available/ counterparts. These should be managed
                           by using our helpers
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2enmod">a2enmod</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2dismod">a2dismod</a>,
                           </tt>
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2ensite">a2ensite</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2dissite">a2dissite</a>,
                            </tt>
                                and
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2enconf">a2enconf</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2disconf">a2disconf</a>
                           </tt>. See their respective man pages for detailed information.
                        </li>

                        <li>
                           The binary is called apache2. Due to the use of
                           environment variables, in the default configuration, apache2 needs to be
                           started/stopped with <tt>/etc/init.d/apache2</tt> or <tt>apache2ctl</tt>.
                           <b>Calling <tt>/usr/bin/apache2</tt> directly will not work</b> with the
                           default configuration.
                        </li>
          </ul>
        </div>

        <div class="section_header">
            <div id="docroot"></div>
                Document Roots
        </div>

        <div class="content_section_text">
            <p>
                By default, Ubuntu does not allow access through the web browser to
                <em>any</em> file apart of those located in <tt>/var/www</tt>,
                <a href="http://httpd.apache.org/docs/2.4/mod/mod_userdir.html">public_html</a>
                directories (when enabled) and <tt>/usr/share</tt> (for web
                applications). If your site is using a web document root
                located elsewhere (such as in <tt>/srv</tt>) you may need to whitelist your
                document root directory in <tt>/etc/apache2/apache2.conf</tt>.
            </p>
            <p>
                The default Ubuntu document root is <tt>/var/www/html</tt>. You
                can make your own virtual hosts under /var/www. This is different
                to previous releases which provides better security out of the box.
            </p>
        </div>

        <div class="section_header">
          <div id="bugs"></div>
                Reporting Problems
        </div>
        <div class="content_section_text">
          <p>
                Please use the <tt>ubuntu-bug</tt> tool to report bugs in the
                Apache2 package with Ubuntu. However, check <a
                href="https://bugs.launchpad.net/ubuntu/+source/apache2">existing
                bug reports</a> before reporting a new bug.
          </p>
          <p>
                Please report bugs specific to modules (such as PHP and others)
                to respective packages, not to the web server itself.
          </p>
        </div>




      </div>
    </div>
    <div class="validator">
    <p>
      <a href="http://validator.w3.org/check?uri=referer"><img src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Transitional" height="31" width="88" /></a>
    </p>
    </div>
  </body>
</html>

vagrant@k8s:~$ sudo docker run -i -t --name mywebserver -p 80:80 ubuntu:14.04
root@94107a76b98d:/# apt-get update
Get:1 http://security.ubuntu.com trusty-security InRelease [56.4 kB]
Ign http://archive.ubuntu.com trusty InRelease
Get:2 https://esm.ubuntu.com trusty-infra-security InRelease
Get:3 http://archive.ubuntu.com trusty-updates InRelease [56.4 kB]
Get:4 https://esm.ubuntu.com trusty-infra-updates InRelease
Get:5 http://security.ubuntu.com trusty-security/main amd64 Packages [1557 kB]
Get:6 https://esm.ubuntu.com trusty-infra-security/main amd64 Packages
Get:7 http://archive.ubuntu.com trusty-backports InRelease [65.9 kB]
Hit http://archive.ubuntu.com trusty Release.gpg
Get:8 http://archive.ubuntu.com trusty-updates/main amd64 Packages [2183 kB]
Get:9 https://esm.ubuntu.com trusty-infra-updates/main amd64 Packages
Get:10 http://security.ubuntu.com trusty-security/restricted amd64 Packages [24.6 kB]
Get:11 http://security.ubuntu.com trusty-security/universe amd64 Packages [529 kB]
Get:12 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [6133 B]
Get:13 http://archive.ubuntu.com trusty-updates/restricted amd64 Packages [28.7 kB]
Get:14 http://archive.ubuntu.com trusty-updates/universe amd64 Packages [931 kB]
Get:15 http://archive.ubuntu.com trusty-updates/multiverse amd64 Packages [21.7 kB]
Get:16 http://archive.ubuntu.com trusty-backports/main amd64 Packages [14.7 kB]
Get:17 http://archive.ubuntu.com trusty-backports/restricted amd64 Packages [40 B]
Get:18 http://archive.ubuntu.com trusty-backports/universe amd64 Packages [52.5 kB]
Get:19 http://archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1392 B]
Hit http://archive.ubuntu.com trusty Release
Get:20 http://archive.ubuntu.com trusty/main amd64 Packages [1743 kB]
Get:21 http://archive.ubuntu.com trusty/restricted amd64 Packages [16.0 kB]
Get:22 http://archive.ubuntu.com trusty/universe amd64 Packages [7589 kB]
Get:23 http://archive.ubuntu.com trusty/multiverse amd64 Packages [169 kB]
Fetched 15.8 MB in 10s (1492 kB/s)
Reading package lists... Done
root@94107a76b98d:/# apt-get install apache2 -y
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
  libaprutil1-ldap libxml2 sgml-base ssl-cert xml-core
Suggested packages:
  www-browser apache2-doc apache2-suexec-pristine apache2-suexec-custom ufw
  apache2-utils sgml-base-doc openssl-blacklist debhelper
The following NEW packages will be installed:
  apache2 apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
  libaprutil1-ldap libxml2 sgml-base ssl-cert xml-core
0 upgraded, 11 newly installed, 0 to remove and 1 not upgraded.
Need to get 1898 kB of archives.
After this operation, 7526 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libxml2 amd64 2.9.1+dfsg1-3ubuntu4.13 [573 kB]
Get:2 http://archive.ubuntu.com/ubuntu/ trusty/main sgml-base all 1.26+nmu4ubuntu1 [12.5 kB]
Get:3 http://archive.ubuntu.com/ubuntu/ trusty/main libapr1 amd64 1.5.0-1 [85.1 kB]
Get:4 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1 amd64 1.5.3-1 [76.4 kB]
Get:5 http://archive.ubuntu.com/ubuntu/ trusty/main xml-core all 0.13+nmu2 [23.3 kB]
Get:6 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1-dbd-sqlite3 amd64 1.5.3-1 [10.5 kB]
Get:7 http://archive.ubuntu.com/ubuntu/ trusty/main libaprutil1-ldap amd64 1.5.3-1 [8634 B]
Get:8 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2-bin amd64 2.4.7-1ubuntu4.22 [845 kB]
Get:9 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2-data all 2.4.7-1ubuntu4.22 [160 kB]
Get:10 http://archive.ubuntu.com/ubuntu/ trusty-updates/main apache2 amd64 2.4.7-1ubuntu4.22 [87.4 kB]
Get:11 http://archive.ubuntu.com/ubuntu/ trusty/main ssl-cert all 1.0.33 [16.6 kB]
Fetched 1898 kB in 3s (482 kB/s)
Preconfiguring packages ...
Selecting previously unselected package libxml2:amd64.
(Reading database ... 12097 files and directories currently installed.)
Preparing to unpack .../libxml2_2.9.1+dfsg1-3ubuntu4.13_amd64.deb ...
Unpacking libxml2:amd64 (2.9.1+dfsg1-3ubuntu4.13) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../sgml-base_1.26+nmu4ubuntu1_all.deb ...
Unpacking sgml-base (1.26+nmu4ubuntu1) ...
Selecting previously unselected package libapr1:amd64.
Preparing to unpack .../libapr1_1.5.0-1_amd64.deb ...
Unpacking libapr1:amd64 (1.5.0-1) ...
Selecting previously unselected package libaprutil1:amd64.
Preparing to unpack .../libaprutil1_1.5.3-1_amd64.deb ...
Unpacking libaprutil1:amd64 (1.5.3-1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../xml-core_0.13+nmu2_all.deb ...
Unpacking xml-core (0.13+nmu2) ...
Selecting previously unselected package libaprutil1-dbd-sqlite3:amd64.
Preparing to unpack .../libaprutil1-dbd-sqlite3_1.5.3-1_amd64.deb ...
Unpacking libaprutil1-dbd-sqlite3:amd64 (1.5.3-1) ...
Selecting previously unselected package libaprutil1-ldap:amd64.
Preparing to unpack .../libaprutil1-ldap_1.5.3-1_amd64.deb ...
Unpacking libaprutil1-ldap:amd64 (1.5.3-1) ...
Selecting previously unselected package apache2-bin.
Preparing to unpack .../apache2-bin_2.4.7-1ubuntu4.22_amd64.deb ...
Unpacking apache2-bin (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package apache2-data.
Preparing to unpack .../apache2-data_2.4.7-1ubuntu4.22_all.deb ...
Unpacking apache2-data (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package apache2.
Preparing to unpack .../apache2_2.4.7-1ubuntu4.22_amd64.deb ...
Unpacking apache2 (2.4.7-1ubuntu4.22) ...
Selecting previously unselected package ssl-cert.
Preparing to unpack .../ssl-cert_1.0.33_all.deb ...
Unpacking ssl-cert (1.0.33) ...
Processing triggers for ureadahead (0.100.0-16) ...
Setting up libxml2:amd64 (2.9.1+dfsg1-3ubuntu4.13) ...
Setting up sgml-base (1.26+nmu4ubuntu1) ...
Setting up libapr1:amd64 (1.5.0-1) ...
Setting up libaprutil1:amd64 (1.5.3-1) ...
Setting up xml-core (0.13+nmu2) ...
Setting up libaprutil1-dbd-sqlite3:amd64 (1.5.3-1) ...
Setting up libaprutil1-ldap:amd64 (1.5.3-1) ...
Setting up apache2-bin (2.4.7-1ubuntu4.22) ...
Setting up apache2-data (2.4.7-1ubuntu4.22) ...
Setting up apache2 (2.4.7-1ubuntu4.22) ...
Enabling module mpm_event.
Enabling module authz_core.
Enabling module authz_host.
Enabling module authn_core.
Enabling module auth_basic.
Enabling module access_compat.
Enabling module authn_file.
Enabling module authz_user.
Enabling module alias.
Enabling module dir.
Enabling module autoindex.
Enabling module env.
Enabling module mime.
Enabling module negotiation.
Enabling module setenvif.
Enabling module filter.
Enabling module deflate.
Enabling module status.
Enabling conf charset.
Enabling conf localized-error-pages.
Enabling conf other-vhosts-access-log.
Enabling conf security.
Enabling conf serve-cgi-bin.
Enabling site 000-default.
invoke-rc.d: policy-rc.d denied execution of start.
Setting up ssl-cert (1.0.33) ...
Processing triggers for libc-bin (2.19-0ubuntu6.15) ...
Processing triggers for sgml-base (1.26+nmu4ubuntu1) ...
Processing triggers for ureadahead (0.100.0-16) ...
root@94107a76b98d:/# service apache2 start
 * Starting web server apache2
AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.3. Set the 'ServerName' directive globally to suppress this message
 *
root@94107a76b98d:/# vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED              STATUS              PORTS                NAMES
94107a76b98d   ubuntu:14.04   "/bin/bash"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp   mywebserver
bf862e6385c4   ubuntu:14.04   "/bin/bash"   21 minutes ago       Up 21 minutes                            network_test
vagrant@k8s:~$ sudo docker attach mywebserver
root@94107a76b98d:/# ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:03
          inet addr:172.17.0.3  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:5283 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3881 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:17977642 (17.9 MB)  TX bytes:217402 (217.4 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@94107a76b98d:/# read escape sequence
vagrant@k8s:~$ curl http://172.17.0.3

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <!--
    Modified from the Debian original for Ubuntu
    Last updated: 2014-03-19
    See: https://launchpad.net/bugs/1288690
  -->
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Apache2 Ubuntu Default Page: It works</title>
    <style type="text/css" media="screen">
  * {
    margin: 0px 0px 0px 0px;
    padding: 0px 0px 0px 0px;
  }

  body, html {
    padding: 3px 3px 3px 3px;

    background-color: #D8DBE2;

    font-family: Verdana, sans-serif;
    font-size: 11pt;
    text-align: center;
  }

  div.main_page {
    position: relative;
    display: table;

    width: 800px;

    margin-bottom: 3px;
    margin-left: auto;
    margin-right: auto;
    padding: 0px 0px 0px 0px;

    border-width: 2px;
    border-color: #212738;
    border-style: solid;

    background-color: #FFFFFF;

    text-align: center;
  }

  div.page_header {
    height: 99px;
    width: 100%;

    background-color: #F5F6F7;
  }

  div.page_header span {
    margin: 15px 0px 0px 50px;

    font-size: 180%;
    font-weight: bold;
  }

  div.page_header img {
    margin: 3px 0px 0px 40px;

    border: 0px 0px 0px;
  }

  div.table_of_contents {
    clear: left;

    min-width: 200px;

    margin: 3px 3px 3px 3px;

    background-color: #FFFFFF;

    text-align: left;
  }

  div.table_of_contents_item {
    clear: left;

    width: 100%;

    margin: 4px 0px 0px 0px;

    background-color: #FFFFFF;

    color: #000000;
    text-align: left;
  }

  div.table_of_contents_item a {
    margin: 6px 0px 0px 6px;
  }

  div.content_section {
    margin: 3px 3px 3px 3px;

    background-color: #FFFFFF;

    text-align: left;
  }

  div.content_section_text {
    padding: 4px 8px 4px 8px;

    color: #000000;
    font-size: 100%;
  }

  div.content_section_text pre {
    margin: 8px 0px 8px 0px;
    padding: 8px 8px 8px 8px;

    border-width: 1px;
    border-style: dotted;
    border-color: #000000;

    background-color: #F5F6F7;

    font-style: italic;
  }

  div.content_section_text p {
    margin-bottom: 6px;
  }

  div.content_section_text ul, div.content_section_text li {
    padding: 4px 8px 4px 16px;
  }

  div.section_header {
    padding: 3px 6px 3px 6px;

    background-color: #8E9CB2;

    color: #FFFFFF;
    font-weight: bold;
    font-size: 112%;
    text-align: center;
  }

  div.section_header_red {
    background-color: #CD214F;
  }

  div.section_header_grey {
    background-color: #9F9386;
  }

  .floating_element {
    position: relative;
    float: left;
  }

  div.table_of_contents_item a,
  div.content_section_text a {
    text-decoration: none;
    font-weight: bold;
  }

  div.table_of_contents_item a:link,
  div.table_of_contents_item a:visited,
  div.table_of_contents_item a:active {
    color: #000000;
  }

  div.table_of_contents_item a:hover {
    background-color: #000000;

    color: #FFFFFF;
  }

  div.content_section_text a:link,
  div.content_section_text a:visited,
   div.content_section_text a:active {
    background-color: #DCDFE6;

    color: #000000;
  }

  div.content_section_text a:hover {
    background-color: #000000;

    color: #DCDFE6;
  }

  div.validator {
  }
    </style>
  </head>
  <body>
    <div class="main_page">
      <div class="page_header floating_element">
        <img src="/icons/ubuntu-logo.png" alt="Ubuntu Logo" class="floating_element"/>
        <span class="floating_element">
          Apache2 Ubuntu Default Page
        </span>
      </div>
<!--      <div class="table_of_contents floating_element">
        <div class="section_header section_header_grey">
          TABLE OF CONTENTS
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#about">About</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#changes">Changes</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#scope">Scope</a>
        </div>
        <div class="table_of_contents_item floating_element">
          <a href="#files">Config files</a>
        </div>
      </div>
-->
      <div class="content_section floating_element">


        <div class="section_header section_header_red">
          <div id="about"></div>
          It works!
        </div>
        <div class="content_section_text">
          <p>
                This is the default welcome page used to test the correct
                operation of the Apache2 server after installation on Ubuntu systems.
                It is based on the equivalent page on Debian, from which the Ubuntu Apache
                packaging is derived.
                If you can read this page, it means that the Apache HTTP server installed at
                this site is working properly. You should <b>replace this file</b> (located at
                <tt>/var/www/html/index.html</tt>) before continuing to operate your HTTP server.
          </p>


          <p>
                If you are a normal user of this web site and don't know what this page is
                about, this probably means that the site is currently unavailable due to
                maintenance.
                If the problem persists, please contact the site's administrator.
          </p>

        </div>
        <div class="section_header">
          <div id="changes"></div>
                Configuration Overview
        </div>
        <div class="content_section_text">
          <p>
                Ubuntu's Apache2 default configuration is different from the
                upstream default configuration, and split into several files optimized for
                interaction with Ubuntu tools. The configuration system is
                <b>fully documented in
                /usr/share/doc/apache2/README.Debian.gz</b>. Refer to this for the full
                documentation. Documentation for the web server itself can be
                found by accessing the <a href="/manual">manual</a> if the <tt>apache2-doc</tt>
                package was installed on this server.

          </p>
          <p>
                The configuration layout for an Apache2 web server installation on Ubuntu systems is as follows:
          </p>
          <pre>
/etc/apache2/
|-- apache2.conf
|       `--  ports.conf
|-- mods-enabled
|       |-- *.load
|       `-- *.conf
|-- conf-enabled
|       `-- *.conf
|-- sites-enabled
|       `-- *.conf
          </pre>
          <ul>
                        <li>
                           <tt>apache2.conf</tt> is the main configuration
                           file. It puts the pieces together by including all remaining configuration
                           files when starting up the web server.
                        </li>

                        <li>
                           <tt>ports.conf</tt> is always included from the
                           main configuration file. It is used to determine the listening ports for
                           incoming connections, and this file can be customized anytime.
                        </li>

                        <li>
                           Configuration files in the <tt>mods-enabled/</tt>,
                           <tt>conf-enabled/</tt> and <tt>sites-enabled/</tt> directories contain
                           particular configuration snippets which manage modules, global configuration
                           fragments, or virtual host configurations, respectively.
                        </li>

                        <li>
                           They are activated by symlinking available
                           configuration files from their respective
                           *-available/ counterparts. These should be managed
                           by using our helpers
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2enmod">a2enmod</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2dismod">a2dismod</a>,
                           </tt>
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2ensite">a2ensite</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2dissite">a2dissite</a>,
                            </tt>
                                and
                           <tt>
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2enconf">a2enconf</a>,
                                <a href="http://manpages.debian.org/cgi-bin/man.cgi?query=a2disconf">a2disconf</a>
                           </tt>. See their respective man pages for detailed information.
                        </li>

                        <li>
                           The binary is called apache2. Due to the use of
                           environment variables, in the default configuration, apache2 needs to be
                           started/stopped with <tt>/etc/init.d/apache2</tt> or <tt>apache2ctl</tt>.
                           <b>Calling <tt>/usr/bin/apache2</tt> directly will not work</b> with the
                           default configuration.
                        </li>
          </ul>
        </div>

        <div class="section_header">
            <div id="docroot"></div>
                Document Roots
        </div>

        <div class="content_section_text">
            <p>
                By default, Ubuntu does not allow access through the web browser to
                <em>any</em> file apart of those located in <tt>/var/www</tt>,
                <a href="http://httpd.apache.org/docs/2.4/mod/mod_userdir.html">public_html</a>
                directories (when enabled) and <tt>/usr/share</tt> (for web
                applications). If your site is using a web document root
                located elsewhere (such as in <tt>/srv</tt>) you may need to whitelist your
                document root directory in <tt>/etc/apache2/apache2.conf</tt>.
            </p>
            <p>
                The default Ubuntu document root is <tt>/var/www/html</tt>. You
                can make your own virtual hosts under /var/www. This is different
                to previous releases which provides better security out of the box.
            </p>
        </div>

        <div class="section_header">
          <div id="bugs"></div>
                Reporting Problems
        </div>
        <div class="content_section_text">
          <p>
                Please use the <tt>ubuntu-bug</tt> tool to report bugs in the
                Apache2 package with Ubuntu. However, check <a
                href="https://bugs.launchpad.net/ubuntu/+source/apache2">existing
                bug reports</a> before reporting a new bug.
          </p>
          <p>
                Please report bugs specific to modules (such as PHP and others)
                to respective packages, not to the web server itself.
          </p>
        </div>




      </div>
    </div>
    <div class="validator">
    <p>
      <a href="http://validator.w3.org/check?uri=referer"><img src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Transitional" height="31" width="88" /></a>
    </p>
    </div>
  </body>
</html>

vagrant@k8s:~$ sudo docker port mywebserver
80/tcp -> 0.0.0.0:80
vagrant@k8s:~$ sudo docker port myubuntu1
Error response from daemon: No such container: myubuntu1
vagrant@k8s:~$ sudo docker port network_test
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS                NAMES
94107a76b98d   ubuntu:14.04   "/bin/bash"   7 minutes ago    Up 7 minutes    0.0.0.0:80->80/tcp   mywebserver
bf862e6385c4   ubuntu:14.04   "/bin/bash"   27 minutes ago   Up 27 minutes                        network_test
vagrant@k8s:~$ sudo docker exec network_test ls
bin
boot
dev
etc
home
lib
lib64
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
vagrant@k8s:~$ sudo docker exec network_test ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:02
          inet addr:172.17.0.2  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:5044 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3833 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:17965499 (17.9 MB)  TX bytes:227630 (227.6 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

vagrant@k8s:~$ sudo docker exec mywebserver ifconfig
eth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:03
          inet addr:172.17.0.3  Bcast:172.17.255.255  Mask:255.255.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:5326 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3916 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:17981918 (17.9 MB)  TX bytes:242549 (242.5 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

vagrant@k8s:~$ sudo docker exec -i -t mywebserver /bin/bash
root@94107a76b98d:/# read escape sequence
vagrant@k8s:~$ sudo docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS                NAMES
94107a76b98d   ubuntu:14.04   "/bin/bash"   9 minutes ago    Up 9 minutes    0.0.0.0:80->80/tcp   mywebserver
bf862e6385c4   ubuntu:14.04   "/bin/bash"   30 minutes ago   Up 30 minutes                        network_test
vagrant@k8s:~$
